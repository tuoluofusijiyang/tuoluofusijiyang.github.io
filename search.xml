<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>设计模式-外观模式</title>
      <link href="/2019/design007/"/>
      <url>/2019/design007/</url>
      
        <content type="html"><![CDATA[<blockquote><p>外观模式<br>定义：提供了一个统一的接口，用来访问子系统中的一群接口，外观定义了一个高层接口，让子系统更容易使用。</p></blockquote><hr><p>举例：我需要打开微信发送给某个好友某些内容，其中的过程包括了，下载微信，输入账号密码，点击登陆，找到好友，发送消息。这些整体封装成了一个对外的方法，当我调用需要这个流程的时候，我通过一个方法的调用，直接就能实现全部的流程，不需要在请求方，去组合方法去完成这个操作。</p><hr><p>设计原则：莫忒耳原则又称最少知识原则，只和你的密友谈话，通过 “举例”，可以明白这个原则的定义。</p><hr><p>原则缺点：采用这个原则会导致更多的” 包装 “对象被制造出来，以处理和其他组件的沟通，可能会导致复杂度和开发时间的增加，降低运行时性能</p><hr><p>设计模式比较：外观模式，适配器模式，装饰者模式<br>适配器模式：当需要使用一个现有的类，但是接口并不符合要求，考虑使用适配器模式。将一个对象包装起来改变接口。<br>外观模式：当需要简化并统一一个 / 一群很大的接口的时候，考虑使用外观模式。依托与子系统执行。<br>装饰着模式：将一个对象包装起来，增加新的行为和责任。</p><a id="more"></a><p>代码简单举例：<br>创建一个 APPSotre 的对象，来描述在 APPStore 内的操作</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package com.appearancePattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 应用商店</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2018-12-16 14:58</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppStore</span> &#123;</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查找应用</span></span><br><span class="line"><span class="comment">     * @param userName 应用名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findApp</span><span class="params">(<span class="keyword">String</span> userName)</span></span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"寻找应用名称 appName : "</span>+userName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 下载App</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downLoadApp</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"下载app"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个 Wechat 的对象，来描述在 Wechat 内的操作</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">package com.appearancePattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 微信方法封装类</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2018-12-16 14:54</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wechat</span> &#123;</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输入微信账号密码</span></span><br><span class="line"><span class="comment">     * @param userName 微信账号</span></span><br><span class="line"><span class="comment">     * @param passWord 微信密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inputNamePass</span><span class="params">(<span class="keyword">String</span> userName,<span class="keyword">String</span> passWord)</span></span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"输入账号密码：userName:"</span>+userName+<span class="string">" 密码："</span>+passWord);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点击登陆</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clickLogin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"点击登陆"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查找用户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">findUser</span><span class="params">(<span class="keyword">String</span> userName)</span></span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"查找用户 userName : "</span>+userName);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送消息</span></span><br><span class="line"><span class="comment">     * @param message 消息内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(<span class="keyword">String</span> message)</span></span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"发送消息：message : "</span>+message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用统一组装方法做个修饰，对外暴露一个完整功能 - 外观模式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.appearancePattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 外观封装类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-16 15:01</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppearanceEnc</span> </span>&#123;</span><br><span class="line">    AppStore appStore;</span><br><span class="line">    Wechat wechat;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AppearanceEnc</span><span class="params">(AppStore appStore,Wechat wechat)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.appStore=appStore;</span><br><span class="line">        <span class="keyword">this</span>.wechat=wechat;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组装发送消息的操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">encSendMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">        appStore.findApp(<span class="string">"wechat"</span>);</span><br><span class="line">        appStore.downLoadApp();</span><br><span class="line">        wechat.inputNamePass(<span class="string">"测试"</span>,<span class="string">"123"</span>);</span><br><span class="line">        wechat.clickLogin();</span><br><span class="line">        wechat.findUser(<span class="string">"小明"</span>);</span><br><span class="line">        wechat.sendMessage(<span class="string">"在吗？借点钱"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模拟调用方–测试</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">package com.appearancePattern;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: test</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description: 客户端测试类</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: 2018-12-16 15:04</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>使用了外观模式，不仅提供了一个简化的接口访问，还可以进行单独的接口访问。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>外观模式的特征：提供简化接口的同时，依然将系统完整的功能暴露出来，以共需要的程序使用</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param args</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line">        AppStore appStore = <span class="keyword">new</span> AppStore();</span><br><span class="line">        Wechat wechat = <span class="keyword">new</span> Wechat();</span><br><span class="line">        AppearanceEnc appearanceEnc = <span class="keyword">new</span> AppearanceEnc(appStore,wechat);</span><br><span class="line">        appearanceEnc.encSendMessage();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    */</span><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>客户端测试，如果没有做一个统一方法的组合处理，客户端代码会变得很多。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param args</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span><span class="comment">/*</span></span><br><span class="line"><span class="comment">    public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">        AppStore appStore = new AppStore();</span></span><br><span class="line"><span class="comment">        Wechat wechat = new Wechat();</span></span><br><span class="line"><span class="comment">        appStore.findApp("wechat");</span></span><br><span class="line"><span class="comment">        appStore.downLoadApp();</span></span><br><span class="line"><span class="comment">        wechat.inputNamePass("测试","123");</span></span><br><span class="line"><span class="comment">        wechat.clickLogin();</span></span><br><span class="line"><span class="comment">        wechat.findUser("小明");</span></span><br><span class="line"><span class="comment">        wechat.sendMessage("在吗？借点钱");</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到测试结果</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">寻找应用名称 <span class="string">appName :</span> wechat</span><br><span class="line">下载app</span><br><span class="line">输入账号密码：<span class="string">userName:</span>测试 密码：<span class="number">123</span></span><br><span class="line">点击登陆</span><br><span class="line">查找用户 <span class="string">userName :</span> 小明</span><br><span class="line">发送消息：<span class="string">message :</span> 在吗？借点钱</span><br></pre></td></tr></table></figure><hr><blockquote><p>外观模式总结：<br>外观模式允许从客户实现从子系统中解耦，比如：微信多了个登陆验证功能，我们只需要改变外观的代码就能实现，客户代码是针对于外观模式的，而不是针对自己系统来做的操作。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式-适配器模式</title>
      <link href="/2019/design006/"/>
      <url>/2019/design006/</url>
      
        <content type="html"><![CDATA[<blockquote><p>适配器模式定义：将一个类的接口，转化成客户期望的另一个接口，适配器让原来接口不兼容的类可以合作无间。</p></blockquote><p>适配器在现实中的表现：插座转化器，形状拼图等等。<br>面向对象中的实现：<br>本文例子：</p><ul><li>狗类，兔子类，适配器类，测试类</li></ul><hr><p>要求：  </p><ol><li>缺少兔子类对象，先用狗类冒充一下  </li><li>不会让客户调用兔子类的方法，发生改变（例如在客户调用的方法内做判断如果是某个值，去调用狗类的方法，去冒充兔子类）</li></ol><hr><a id="more"></a><p>代码实现：<br>狗的接口类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.adapterPattern.dog;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 狗</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-15 16:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Dog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 狗也会跳，不过没有兔子跳的远</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">jump</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 狗会发出汪汪的叫声</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bark</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目初始，已经存在的小黑狗类，先用这个顶替一个新的兔子类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.adapterPattern.dog;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 小黑狗，实现了狗接口的具体类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-15 16:19</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LittleBlackDog</span> <span class="keyword">implements</span> <span class="title">Dog</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jump</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"小黑狗，跳一米"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bark</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"小黑狗，汪汪的叫"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>兔子的接口类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.adapterPattern.rabbit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 兔子</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-15 16:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Rabbit</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 兔子拥有跳的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jump</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 兔子会咕咕叫</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">coo</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目初始，已经存在的兔子类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.adapterPattern.rabbit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 兔子</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-15 16:13</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Rabbit</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 兔子拥有跳的方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jump</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 兔子会咕咕叫</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">coo</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>适配器类，负责将已经存在的小黑狗先顶替成新的鸭子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.adapterPattern.adapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.adapterPattern.dog.Dog;</span><br><span class="line"><span class="keyword">import</span> com.adapterPattern.rabbit.Rabbit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 缺兔子对象，适配器负责将狗类充当为兔子类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-15 16:21</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActAsRabbitAdapter</span> <span class="keyword">implements</span> <span class="title">Rabbit</span> </span>&#123;</span><br><span class="line">    Dog dog;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ActAsRabbitAdapter</span><span class="params">(Dog dog)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.dog=dog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 外部还是调用兔子的方法，内部的实现是狗的跳,狗需要跳两次才和兔子跳的距离一样</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jump</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dog.jump();</span><br><span class="line">        dog.jump();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 外部还是调用兔子叫的方法，内部的实现是狗的叫</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">coo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dog.bark();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类–testRabbit() 方法相等于客户之前的调用方法。通过适配器，成功的将新的兔子类给实现了，只不过内部走的是狗的方法。testRabbit() 还是正常的调用，不做任何改变。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">package com.adapterPattern.patternTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.adapterPattern.adapter.ActAsRabbitAdapter;</span><br><span class="line"><span class="keyword">import</span> com.adapterPattern.dog.Dog;</span><br><span class="line"><span class="keyword">import</span> com.adapterPattern.dog.LittleBlackDog;</span><br><span class="line"><span class="keyword">import</span> com.adapterPattern.rabbit.LittleWhiteRabbit;</span><br><span class="line"><span class="keyword">import</span> com.adapterPattern.rabbit.Rabbit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 适配器模式测试类</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2018-12-15 16:26</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> &#123;</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 负责执行鸭子的跳与叫</span></span><br><span class="line"><span class="comment">     * @param rabbit</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">testRabbit</span><span class="params">(Rabbit rabbit)</span></span>&#123;</span><br><span class="line">        rabbit.jump();</span><br><span class="line">        rabbit.coo();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 负责执行狗的跳与叫</span></span><br><span class="line"><span class="comment">     * @param dog</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testDog</span><span class="params">(Dog dog)</span></span>&#123;</span><br><span class="line">        dog.jump();</span><br><span class="line">        dog.bark();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">String</span>[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个兔子类</span></span><br><span class="line">        Rabbit rabbit = <span class="keyword">new</span> LittleWhiteRabbit();</span><br><span class="line">        <span class="comment">//创建一个狗类</span></span><br><span class="line">        Dog dog = <span class="keyword">new</span> LittleBlackDog();</span><br><span class="line">        <span class="comment">//创建一个适配器，包装狗类，为兔子类</span></span><br><span class="line">        Rabbit adapterRabbit = <span class="keyword">new</span> ActAsRabbitAdapter(dog);</span><br><span class="line"></span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"----------------------小白兔的跳与叫--------------------"</span>);</span><br><span class="line">        testRabbit(rabbit);</span><br><span class="line"></span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"----------------------小黑狗的跳与叫--------------------"</span>);</span><br><span class="line">        testDog(dog);</span><br><span class="line"></span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"----------------------适配器（相等于兔子）的跳与叫--------------------"</span>);</span><br><span class="line">        <span class="comment">//适配实现了兔子接口，所以可以别认为是个兔子，testRabbit()这个方法并不知道这个是适配器</span></span><br><span class="line">        testRabbit(adapterRabbit);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">兔子的跳与叫</span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">小白兔，跳2米</span></span><br><span class="line"><span class="comment">小白兔，在咕咕叫</span></span><br><span class="line"><span class="comment"></span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">狗的跳与叫</span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">小黑狗，跳一米</span></span><br><span class="line"><span class="comment">小黑狗，汪汪的叫</span></span><br><span class="line"><span class="comment"></span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">适配器（相等于兔子）的跳与叫</span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">小黑狗，跳一米</span></span><br><span class="line"><span class="comment">小黑狗，跳一米</span></span><br><span class="line"><span class="comment">小黑狗，汪汪的叫</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式-命令模式</title>
      <link href="/2019/design004/"/>
      <url>/2019/design004/</url>
      
        <content type="html"><![CDATA[<p>老板：阿飞，咱们公司又接了个新项目，一个客户，，卧室和客厅很大，电灯电视开关也不好找，所以希望制造一个遥控器来控制一些家具的开启与关闭，目前需要 5 个按键，卧室的灯，卧室的电视，客厅的灯，客厅的电视，在留一个预备按键。我等会把需求文档给你。<br>项目组长阿飞：好的，老板<br>项目组长阿飞：小三，来了个需求，你看下，你先设计一下架构<br>阿三：好的，飞哥</p><p>三天过后：飞哥，好了，你看下</p><a id="more"></a><p>先设计了一个接口，里面包含了，每一个按钮的统一行为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.commandPattern.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 命令接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后建立了一个对象，代表了空对象，什么操作也不执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.commandPattern.command.nullCommand;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 建立一个空对象，在许多设计模式种，都会看到空对象的使用，甚至有些时候，空对象本身也被视为一种设计模式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NullCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"什么都不做处理"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>灯的具体类</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package com.commandPattern.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: testPattern</span></span><br><span class="line"><span class="comment"> * @description: 灯的具体类</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> Lamp &#123;</span><br><span class="line">    private String <span class="type">name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * name为灯的具体装饰，即为哪里的灯</span></span><br><span class="line"><span class="comment">     * @param name</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span>  Lamp(String <span class="type">name</span>)&#123;</span><br><span class="line">        this.name=<span class="type">name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span>  <span class="keyword">on</span> ()&#123;</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="type">name</span>+"_灯打开");</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> <span class="keyword">off</span> ()&#123;</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="type">name</span>+"_灯关闭");</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>电视的具体类</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package com.commandPattern.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: testPattern</span></span><br><span class="line"><span class="comment"> * @description: 电视的具体类</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> Tv &#123;</span><br><span class="line">    private String <span class="type">name</span>;</span><br><span class="line">    <span class="built_in">public</span> Tv(String <span class="type">name</span>)&#123;</span><br><span class="line">        this.name=<span class="type">name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span>  <span class="keyword">on</span> ()&#123;</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="type">name</span>+"_电视打开");</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> <span class="keyword">off</span>()&#123;</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(<span class="type">name</span>+"_电视关闭");</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关闭灯的具体命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.commandPattern.command.off;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.entity.Lamp;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 灯关闭</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LampOffCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Lamp lamp;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LampOffCommand</span><span class="params">(Lamp lamp)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lamp=lamp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//灯关闭</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        lamp.off();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开灯的具体命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.commandPattern.command.on;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.entity.Lamp;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 灯打开的命令</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LampOnCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Lamp lamp;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LampOnCommand</span><span class="params">(Lamp lamp)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lamp=lamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//灯打开的命令</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        lamp.on();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>电视关闭的具体命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.commandPattern.command.off;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.entity.Tv;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 电视关闭</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TvOffCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    Tv tv;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TvOffCommand</span><span class="params">(Tv tv)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tv=tv;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tv.off();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>电视打开的具体命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.commandPattern.command.on;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.entity.Tv;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 电视打开</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TvOnCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    Tv tv;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TvOnCommand</span><span class="params">(Tv tv)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tv=tv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tv.on();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建立一个遥控器</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.commandPattern.control;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.nullCommand.NullCommand;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 遥控器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RemoteControl</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Command[] onCommand;</span><br><span class="line">    Command[] offCommand;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化每个操作为空操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RemoteControl</span><span class="params">()</span></span>&#123;</span><br><span class="line">        onCommand=<span class="keyword">new</span> Command[<span class="number">5</span>];</span><br><span class="line">        offCommand=<span class="keyword">new</span> Command[<span class="number">5</span>];</span><br><span class="line">        NullCommand nullCommand = <span class="keyword">new</span> NullCommand();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            onCommand[i]=nullCommand;</span><br><span class="line">            offCommand[i]=nullCommand;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">setCommond</span><span class="params">(<span class="keyword">int</span> index,Command onCommand,Command offCommand)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.offCommand[index]=offCommand;</span><br><span class="line">        <span class="keyword">this</span>.onCommand[index]=onCommand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">clickOn</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        onCommand[index].exceute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">clickOff</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        offCommand[index].exceute();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出每个按钮的具体代表类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; onCommand.length; i++) &#123;</span><br><span class="line">            sb.append(<span class="string">"[index : "</span>+i+<span class="string">"]   "</span>);</span><br><span class="line">            sb.append(onCommand[i].getClass().getName());</span><br><span class="line">            sb.append(<span class="string">"    "</span>);</span><br><span class="line">            sb.append(offCommand[i].getClass().getName());</span><br><span class="line">            sb.append(<span class="string">"\r\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> sb.<span class="title">toString</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">package com.commandPattern.testPattern;</span><br><span class="line"></span><br><span class="line">import com.commandPattern.command.off.LampOffCommand;</span><br><span class="line">import com.commandPattern.command.off.TvOffCommand;</span><br><span class="line">import com.commandPattern.command.on.LampOnCommand;</span><br><span class="line">import com.commandPattern.command.on.TvOnCommand;</span><br><span class="line">import com.commandPattern.control.RemoteControl;</span><br><span class="line">import com.commandPattern.entity.Lamp;</span><br><span class="line">import com.commandPattern.entity.Tv;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2018-12-08 17:48</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">public <span class="keyword">class</span> TestPattern &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        RemoteControl remoteControl = <span class="keyword">new</span> <span class="constructor">RemoteControl()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建装置到合适位置</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Tv bedRoomTV = <span class="keyword">new</span> <span class="constructor">Tv(<span class="string">"卧室"</span>)</span>;</span><br><span class="line">        Tv drawiTV = <span class="keyword">new</span> <span class="constructor">Tv(<span class="string">"客厅"</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Lamp bedRoomLamp = <span class="keyword">new</span> <span class="constructor">Lamp(<span class="string">"卧室"</span>)</span>;</span><br><span class="line">        Lamp drawiLamp = <span class="keyword">new</span> <span class="constructor">Lamp(<span class="string">"客厅"</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建所有命令操作对象</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//卧室灯关闭对象</span></span><br><span class="line">        LampOffCommand bedLampOffCommand = <span class="keyword">new</span> <span class="constructor">LampOffCommand(<span class="params">bedRoomLamp</span>)</span>;</span><br><span class="line">        <span class="comment">//卧室灯打开对象</span></span><br><span class="line">        LampOnCommand bedLampOnCommand = <span class="keyword">new</span> <span class="constructor">LampOnCommand(<span class="params">bedRoomLamp</span>)</span>;</span><br><span class="line">        <span class="comment">//卧室TV关闭对象</span></span><br><span class="line">        TvOffCommand bedTvOffCommand = <span class="keyword">new</span> <span class="constructor">TvOffCommand(<span class="params">bedRoomTV</span>)</span>;</span><br><span class="line">        <span class="comment">//卧室TV打开对象</span></span><br><span class="line">        TvOnCommand bedTVcommand = <span class="keyword">new</span> <span class="constructor">TvOnCommand(<span class="params">bedRoomTV</span>)</span>;</span><br><span class="line">        <span class="comment">//客厅灯打开对象</span></span><br><span class="line">        LampOnCommand drawLampOnCommand = <span class="keyword">new</span> <span class="constructor">LampOnCommand(<span class="params">drawiLamp</span>)</span>;</span><br><span class="line">        <span class="comment">//客厅灯关闭对象</span></span><br><span class="line">        LampOffCommand drawLampOffCommand = <span class="keyword">new</span> <span class="constructor">LampOffCommand(<span class="params">drawiLamp</span>)</span>;</span><br><span class="line">        <span class="comment">//客厅TV关闭对象</span></span><br><span class="line">        TvOffCommand drawTVOffCommand = <span class="keyword">new</span> <span class="constructor">TvOffCommand(<span class="params">drawiTV</span>)</span>;</span><br><span class="line">        <span class="comment">//客厅TV打开对象</span></span><br><span class="line">        TvOnCommand drawTVOnCommand = <span class="keyword">new</span> <span class="constructor">TvOnCommand(<span class="params">drawiTV</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"---------------------------------------------未赋值之前------------------------------------------------"</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(remoteControl);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"******************************************************************************************************"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * //将操作对象与卡槽一一对应</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//赋值卧室灯打开与关闭</span></span><br><span class="line">        remoteControl.set<span class="constructor">Commond(0,<span class="params">bedLampOnCommand</span>,<span class="params">bedLampOffCommand</span>)</span>;</span><br><span class="line">        <span class="comment">//赋值卧室TV打开与关闭</span></span><br><span class="line">        remoteControl.set<span class="constructor">Commond(1,<span class="params">bedTVcommand</span>,<span class="params">bedTvOffCommand</span>)</span>;</span><br><span class="line">        <span class="comment">//赋值客厅灯打开与关闭</span></span><br><span class="line">        remoteControl.set<span class="constructor">Commond(2,<span class="params">drawLampOnCommand</span>,<span class="params">drawLampOffCommand</span>)</span>;</span><br><span class="line">        <span class="comment">//赋值客厅TV打开与关闭</span></span><br><span class="line">        remoteControl.set<span class="constructor">Commond(3,<span class="params">drawTVOnCommand</span>,<span class="params">drawTVOffCommand</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"---------------------------------------------赋值之后------------------------------------------------"</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(remoteControl);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"******************************************************************************************************"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 测试每一个按钮</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        remoteControl.click<span class="constructor">On(0)</span>;</span><br><span class="line">        remoteControl.click<span class="constructor">Off(0)</span>;</span><br><span class="line"></span><br><span class="line">        remoteControl.click<span class="constructor">On(1)</span>;</span><br><span class="line">        remoteControl.click<span class="constructor">Off(1)</span>;</span><br><span class="line"></span><br><span class="line">        remoteControl.click<span class="constructor">On(2)</span>;</span><br><span class="line">        remoteControl.click<span class="constructor">Off(2)</span>;</span><br><span class="line"></span><br><span class="line">        remoteControl.click<span class="constructor">On(3)</span>;</span><br><span class="line">        remoteControl.click<span class="constructor">Off(3)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">---------------------------------------------</span>未赋值之前<span class="selector-tag">------------------------------------------------</span></span><br><span class="line"><span class="selector-attr">[index : 0]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"><span class="selector-attr">[index : 1]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"><span class="selector-attr">[index : 2]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"><span class="selector-attr">[index : 3]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"><span class="selector-attr">[index : 4]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"></span><br><span class="line">******************************************************************************************************</span><br><span class="line"><span class="selector-tag">---------------------------------------------</span>赋值之后<span class="selector-tag">------------------------------------------------</span></span><br><span class="line"><span class="selector-attr">[index : 0]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.on</span><span class="selector-class">.LampOnCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.off</span><span class="selector-class">.LampOffCommand</span></span><br><span class="line"><span class="selector-attr">[index : 1]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.on</span><span class="selector-class">.TvOnCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.off</span><span class="selector-class">.TvOffCommand</span></span><br><span class="line"><span class="selector-attr">[index : 2]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.on</span><span class="selector-class">.LampOnCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.off</span><span class="selector-class">.LampOffCommand</span></span><br><span class="line"><span class="selector-attr">[index : 3]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.on</span><span class="selector-class">.TvOnCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.off</span><span class="selector-class">.TvOffCommand</span></span><br><span class="line"><span class="selector-attr">[index : 4]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"></span><br><span class="line">******************************************************************************************************</span><br><span class="line">卧室_灯打开</span><br><span class="line">卧室_灯关闭</span><br><span class="line">卧室_电视打开</span><br><span class="line">卧室_电视关闭</span><br><span class="line">客厅_灯打开</span><br><span class="line">客厅_灯关闭</span><br><span class="line">客厅_电视打开</span><br><span class="line">客厅_电视关闭</span><br></pre></td></tr></table></figure><p>阿三：飞哥，我这里使用的设计模式 - 命令模式，<br>将动作执行（LampOnCommand，TvOnCommand……）与接收者（Lamp，Tv）包装到对象里面，对外暴露的只有一个 Command 接口中的 execute 方法，其他对象不需要知道那个接收者执行了什么动作，只需要知道调用 execute，就能完成一个请求的操作，这个对象，与其他对象没有关联，完全解耦和，如果需要做新增，不需要修改原有代码，拓展接收者类和动作执行类，就能实现功能。</p><p>项目组长阿飞：不错，不错，进步很大。<br>项目组长阿飞：第 5 个按钮可能需要做一个恢复上一步动作的效果，类似于 CTRL+Z 这个效果，你再改改把。<br>阿三：好的。<br>阿三：飞哥修改好了，你看下</p><p>命令接口新增撤销方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.commandPattern.command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 命令接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-08 13:54</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//撤销方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revoke</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建立一个空对象, 实现了撤销方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.commandPattern.command.nullCommand;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 建立一个空对象，在许多设计模式种，都会看到空对象的使用，甚至有些时候，空对象本身也被视为一种设计模式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-08 17:40</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NullCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"什么都不做处理"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revoke</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"什么都不做处理"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>灯关闭实现了撤销方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.commandPattern.command.off;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.entity.Lamp;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 灯关闭</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-08 17:33</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LampOffCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Lamp lamp;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LampOffCommand</span><span class="params">(Lamp lamp)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lamp=lamp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//灯关闭</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        lamp.off();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//执行到这个具体实现类，代表上一步是灯关闭，撤销操作即为灯打开</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revoke</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        lamp.on();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>灯打开实现了撤销方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.commandPattern.command.on;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.entity.Lamp;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 灯打开的命令</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-08 17:29</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LampOnCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Lamp lamp;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LampOnCommand</span><span class="params">(Lamp lamp)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.lamp=lamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//灯打开的命令</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        lamp.on();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//执行到这个具体实现类，代表上一步是灯打开，撤销操作即为灯关闭</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revoke</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        lamp.off();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>电视关闭实现了撤销方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.commandPattern.command.off;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.entity.Tv;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 电视关闭</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-08 17:36</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TvOffCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    Tv tv;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TvOffCommand</span><span class="params">(Tv tv)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tv=tv;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tv.off();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//执行到这个具体实现类，代表上一步是电视关闭，撤销操作即为电视打开</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revoke</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tv.on();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>电视打开实现了撤销方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.commandPattern.command.on;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.entity.Tv;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 电视打开</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-08 17:37</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TvOnCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    Tv tv;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TvOnCommand</span><span class="params">(Tv tv)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tv=tv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exceute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tv.on();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//执行到这个具体实现类，代表上一步是电视打开，撤销操作即为电视关闭</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">revoke</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        tv.off();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遥控器类，新增变量记录上一步操作</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.commandPattern.control;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.Command;</span><br><span class="line"><span class="keyword">import</span> com.commandPattern.command.nullCommand.NullCommand;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: testPattern</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 遥控器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2018-12-08 17:39</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RemoteControl</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Command[] onCommand;</span><br><span class="line">    Command[] offCommand;</span><br><span class="line">    <span class="comment">//这个变量来记录上一个命令</span></span><br><span class="line">    Command upStepCommand;</span><br><span class="line">    <span class="comment">//初始化每个操作为空操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RemoteControl</span><span class="params">()</span></span>&#123;</span><br><span class="line">        onCommand=<span class="keyword">new</span> Command[<span class="number">5</span>];</span><br><span class="line">        offCommand=<span class="keyword">new</span> Command[<span class="number">5</span>];</span><br><span class="line">        NullCommand nullCommand = <span class="keyword">new</span> NullCommand();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            onCommand[i]=nullCommand;</span><br><span class="line">            offCommand[i]=nullCommand;</span><br><span class="line">        &#125;</span><br><span class="line">        upStepCommand=nullCommand;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">setCommond</span><span class="params">(<span class="keyword">int</span> index,Command onCommand,Command offCommand)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.offCommand[index]=offCommand;</span><br><span class="line">        <span class="keyword">this</span>.onCommand[index]=onCommand;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//新增upStepCommand记录上一步命令</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">clickOn</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        onCommand[index].exceute();</span><br><span class="line">        upStepCommand=onCommand[index];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//新增upStepCommand记录上一步命令</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">clickOff</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        offCommand[index].exceute();</span><br><span class="line">        upStepCommand=offCommand[index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">toUpStepClick</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"---撤销---"</span>);</span><br><span class="line">        upStepCommand.revoke();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输出每个按钮的具体代表类</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; onCommand.length; i++) &#123;</span><br><span class="line">            sb.append(<span class="string">"[index : "</span>+i+<span class="string">"]   "</span>);</span><br><span class="line">            sb.append(onCommand[i].getClass().getName());</span><br><span class="line">            sb.append(<span class="string">"    "</span>);</span><br><span class="line">            sb.append(offCommand[i].getClass().getName());</span><br><span class="line">            sb.append(<span class="string">"\r\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> sb.<span class="title">toString</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类新增撤销测试</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">package com.commandPattern.testPattern;</span><br><span class="line"></span><br><span class="line">import com.commandPattern.command.off.LampOffCommand;</span><br><span class="line">import com.commandPattern.command.off.TvOffCommand;</span><br><span class="line">import com.commandPattern.command.on.LampOnCommand;</span><br><span class="line">import com.commandPattern.command.on.TvOnCommand;</span><br><span class="line">import com.commandPattern.control.RemoteControl;</span><br><span class="line">import com.commandPattern.entity.Lamp;</span><br><span class="line">import com.commandPattern.entity.Tv;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2018-12-08 17:48</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">public <span class="keyword">class</span> TestPattern &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        RemoteControl remoteControl = <span class="keyword">new</span> <span class="constructor">RemoteControl()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建装置到合适位置</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Tv bedRoomTV = <span class="keyword">new</span> <span class="constructor">Tv(<span class="string">"卧室"</span>)</span>;</span><br><span class="line">        Tv drawiTV = <span class="keyword">new</span> <span class="constructor">Tv(<span class="string">"客厅"</span>)</span>;</span><br><span class="line"></span><br><span class="line">        Lamp bedRoomLamp = <span class="keyword">new</span> <span class="constructor">Lamp(<span class="string">"卧室"</span>)</span>;</span><br><span class="line">        Lamp drawiLamp = <span class="keyword">new</span> <span class="constructor">Lamp(<span class="string">"客厅"</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建所有命令操作对象</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//卧室灯关闭对象</span></span><br><span class="line">        LampOffCommand bedLampOffCommand = <span class="keyword">new</span> <span class="constructor">LampOffCommand(<span class="params">bedRoomLamp</span>)</span>;</span><br><span class="line">        <span class="comment">//卧室灯打开对象</span></span><br><span class="line">        LampOnCommand bedLampOnCommand = <span class="keyword">new</span> <span class="constructor">LampOnCommand(<span class="params">bedRoomLamp</span>)</span>;</span><br><span class="line">        <span class="comment">//卧室TV关闭对象</span></span><br><span class="line">        TvOffCommand bedTvOffCommand = <span class="keyword">new</span> <span class="constructor">TvOffCommand(<span class="params">bedRoomTV</span>)</span>;</span><br><span class="line">        <span class="comment">//卧室TV打开对象</span></span><br><span class="line">        TvOnCommand bedTVcommand = <span class="keyword">new</span> <span class="constructor">TvOnCommand(<span class="params">bedRoomTV</span>)</span>;</span><br><span class="line">        <span class="comment">//客厅灯打开对象</span></span><br><span class="line">        LampOnCommand drawLampOnCommand = <span class="keyword">new</span> <span class="constructor">LampOnCommand(<span class="params">drawiLamp</span>)</span>;</span><br><span class="line">        <span class="comment">//客厅灯关闭对象</span></span><br><span class="line">        LampOffCommand drawLampOffCommand = <span class="keyword">new</span> <span class="constructor">LampOffCommand(<span class="params">drawiLamp</span>)</span>;</span><br><span class="line">        <span class="comment">//客厅TV关闭对象</span></span><br><span class="line">        TvOffCommand drawTVOffCommand = <span class="keyword">new</span> <span class="constructor">TvOffCommand(<span class="params">drawiTV</span>)</span>;</span><br><span class="line">        <span class="comment">//客厅TV打开对象</span></span><br><span class="line">        TvOnCommand drawTVOnCommand = <span class="keyword">new</span> <span class="constructor">TvOnCommand(<span class="params">drawiTV</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"---------------------------------------------未赋值之前------------------------------------------------"</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(remoteControl);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"******************************************************************************************************"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * //将操作对象与卡槽一一对应</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//赋值卧室灯打开与关闭</span></span><br><span class="line">        remoteControl.set<span class="constructor">Commond(0,<span class="params">bedLampOnCommand</span>,<span class="params">bedLampOffCommand</span>)</span>;</span><br><span class="line">        <span class="comment">//赋值卧室TV打开与关闭</span></span><br><span class="line">        remoteControl.set<span class="constructor">Commond(1,<span class="params">bedTVcommand</span>,<span class="params">bedTvOffCommand</span>)</span>;</span><br><span class="line">        <span class="comment">//赋值客厅灯打开与关闭</span></span><br><span class="line">        remoteControl.set<span class="constructor">Commond(2,<span class="params">drawLampOnCommand</span>,<span class="params">drawLampOffCommand</span>)</span>;</span><br><span class="line">        <span class="comment">//赋值客厅TV打开与关闭</span></span><br><span class="line">        remoteControl.set<span class="constructor">Commond(3,<span class="params">drawTVOnCommand</span>,<span class="params">drawTVOffCommand</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"---------------------------------------------赋值之后------------------------------------------------"</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(remoteControl);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"******************************************************************************************************"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 测试每一个按钮</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        remoteControl.click<span class="constructor">On(0)</span>;</span><br><span class="line">        remoteControl.click<span class="constructor">Off(0)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//撤销一次</span></span><br><span class="line">        remoteControl.<span class="keyword">to</span><span class="constructor">UpStepClick()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"\r\n"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//撤销一次</span></span><br><span class="line">        remoteControl.<span class="keyword">to</span><span class="constructor">UpStepClick()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"\r\n"</span>);</span><br><span class="line"></span><br><span class="line">        remoteControl.click<span class="constructor">On(1)</span>;</span><br><span class="line">        remoteControl.click<span class="constructor">Off(1)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//撤销一次</span></span><br><span class="line">        remoteControl.<span class="keyword">to</span><span class="constructor">UpStepClick()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"\r\n"</span>);</span><br><span class="line"></span><br><span class="line">        remoteControl.click<span class="constructor">On(2)</span>;</span><br><span class="line">        remoteControl.click<span class="constructor">Off(2)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//撤销一次</span></span><br><span class="line">        remoteControl.<span class="keyword">to</span><span class="constructor">UpStepClick()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"\r\n"</span>);</span><br><span class="line"></span><br><span class="line">        remoteControl.click<span class="constructor">On(3)</span>;</span><br><span class="line">        remoteControl.click<span class="constructor">Off(3)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//撤销一次</span></span><br><span class="line">        remoteControl.<span class="keyword">to</span><span class="constructor">UpStepClick()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"\r\n"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改之后的测试结果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">---------------------------------------------</span>未赋值之前<span class="selector-tag">------------------------------------------------</span></span><br><span class="line"><span class="selector-attr">[index : 0]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"><span class="selector-attr">[index : 1]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"><span class="selector-attr">[index : 2]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"><span class="selector-attr">[index : 3]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"><span class="selector-attr">[index : 4]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"></span><br><span class="line">******************************************************************************************************</span><br><span class="line"><span class="selector-tag">---------------------------------------------</span>赋值之后<span class="selector-tag">------------------------------------------------</span></span><br><span class="line"><span class="selector-attr">[index : 0]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.on</span><span class="selector-class">.LampOnCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.off</span><span class="selector-class">.LampOffCommand</span></span><br><span class="line"><span class="selector-attr">[index : 1]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.on</span><span class="selector-class">.TvOnCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.off</span><span class="selector-class">.TvOffCommand</span></span><br><span class="line"><span class="selector-attr">[index : 2]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.on</span><span class="selector-class">.LampOnCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.off</span><span class="selector-class">.LampOffCommand</span></span><br><span class="line"><span class="selector-attr">[index : 3]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.on</span><span class="selector-class">.TvOnCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.off</span><span class="selector-class">.TvOffCommand</span></span><br><span class="line"><span class="selector-attr">[index : 4]</span>   <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span>    <span class="selector-tag">com</span><span class="selector-class">.commandPattern</span><span class="selector-class">.command</span><span class="selector-class">.nullCommand</span><span class="selector-class">.NullCommand</span></span><br><span class="line"></span><br><span class="line">******************************************************************************************************</span><br><span class="line">卧室_灯打开</span><br><span class="line">卧室_灯关闭</span><br><span class="line"><span class="selector-tag">---</span>撤销<span class="selector-tag">---</span></span><br><span class="line">卧室_灯打开</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">---</span>撤销<span class="selector-tag">---</span></span><br><span class="line">卧室_灯打开</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">卧室_电视打开</span><br><span class="line">卧室_电视关闭</span><br><span class="line"><span class="selector-tag">---</span>撤销<span class="selector-tag">---</span></span><br><span class="line">卧室_电视打开</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">客厅_灯打开</span><br><span class="line">客厅_灯关闭</span><br><span class="line"><span class="selector-tag">---</span>撤销<span class="selector-tag">---</span></span><br><span class="line">客厅_灯打开</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">客厅_电视打开</span><br><span class="line">客厅_电视关闭</span><br><span class="line"><span class="selector-tag">---</span>撤销<span class="selector-tag">---</span></span><br><span class="line">客厅_电视打开</span><br></pre></td></tr></table></figure><p>项目组长阿飞：不错，不错，以后给你涨工资。</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式-模板方法模式</title>
      <link href="/2019/design005/"/>
      <url>/2019/design005/</url>
      
        <content type="html"><![CDATA[<blockquote><p>模板方法模式<br>定义：在一个方法中定义一个算法的骨架，将一些处理的步骤延迟到子类去做处理，可以使在子类不改变算法结构的情况下， 重新定义算法的步骤。</p></blockquote><h3 id="设计院原则"><a href="#设计院原则" class="headerlink" title="设计院原则"></a>设计院原则</h3><p>好莱坞原则：别调用我们，我们会调用你。</p><p>先来看下简单的代码实现：</p><a id="more"></a><p>定义一个父类: 果汁流程制作</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"> package com.templateModePattern.parentClass;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @program: test</span></span><br><span class="line"><span class="comment">  * @description: 果汁的制造简单流程：--》清洗水果 --》放入修饰材料--》放入榨汁机中</span></span><br><span class="line"><span class="comment">  *               因为放入修饰材料的流程，各个果汁不一样，所以放入子类去实现</span></span><br><span class="line"><span class="comment">  * @author: Mr.Yang</span></span><br><span class="line"><span class="comment">  * @create: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"><span class="keyword">public</span>  <span class="keyword">abstract</span>  <span class="keyword">class</span> <span class="title">FruitJuiceParent</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 果汁的制造流程（当作固定流程，不会变），这个方法不希望子类去覆盖，</span></span><br><span class="line"><span class="comment">     *子类只需要实现putMaterial()方法就行，声明为final，骨架方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  final <span class="keyword">void</span> <span class="title">makeFruitJuice</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        cleanIts();</span><br><span class="line">        putMaterial();</span><br><span class="line">        putMachine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">putMaterial</span>(<span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清洗水果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">cleanIts</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"clean fruit"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 放入榨汁机中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">putMachine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"put machine"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> package com.templateModePattern.parentClass;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @program: test</span></span><br><span class="line"><span class="comment">  * @description: 果汁的制造简单流程：--》清洗水果 --》放入修饰材料--》放入榨汁机中</span></span><br><span class="line"><span class="comment">  *               因为放入修饰材料的流程，各个果汁不一样，所以放入子类去实现</span></span><br><span class="line"><span class="comment">  * @author: Mr.Yang</span></span><br><span class="line"><span class="comment">  * @create: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"><span class="keyword">public</span>  <span class="keyword">abstract</span>  <span class="keyword">class</span> <span class="title">FruitJuiceParent</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 果汁的制造流程（当作固定流程，不会变），这个方法不希望子类去覆盖，</span></span><br><span class="line"><span class="comment">     *子类只需要实现putMaterial()方法就行，声明为final，骨架方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  final <span class="keyword">void</span> <span class="title">makeFruitJuice</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        cleanIts();</span><br><span class="line">        putMaterial();</span><br><span class="line">        putMachine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">putMaterial</span>(<span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清洗水果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">cleanIts</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"clean fruit"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 放入榨汁机中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">putMachine</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"put machine"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子类苹果汁，实现父类未实现的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 苹果汁</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleFruitJuice</span> <span class="keyword">extends</span> <span class="title">FruitJuiceParent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在苹果汁放入蜂蜜，味道更好</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Put in honey"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 苹果汁</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleFruitJuice</span> <span class="keyword">extends</span> <span class="title">FruitJuiceParent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在苹果汁放入蜂蜜，味道更好</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Put in honey"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子类西瓜汁，实现父类未实现的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 西瓜汁</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WatermelonFruitJuice</span> <span class="keyword">extends</span> <span class="title">FruitJuiceParent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 放入牛奶，味道更好</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"put in milk"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 西瓜汁</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WatermelonFruitJuice</span> <span class="keyword">extends</span> <span class="title">FruitJuiceParent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 放入牛奶，味道更好</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"put in milk"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="挂钩"><a href="#挂钩" class="headerlink" title="挂钩"></a>挂钩</h3><p>钩子是一种被声明在抽象类中的方法，但只有空的或者默认实现，钩子的存在，可以让子类有能力对算法的不同点进行挂钩，要不要挂钩，由子类自行决定。</p><p>在方法中加入挂钩代码实现</p><p>父类加入判断，如果 true，去执行，让子类去具体实现该方法，做处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.templateModePattern.parentClass;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 果汁的制造简单流程：--》清洗水果 --》放入修饰材料--》放入榨汁机中</span></span><br><span class="line"><span class="comment">  *               因为放入修饰材料的流程，各个果汁不一样，所以放入子类去实现</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"><span class="keyword">public</span>  <span class="keyword">abstract</span>  <span class="class"><span class="keyword">class</span> <span class="title">FruitJuiceParent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 果汁的制造流程（当作固定流程，不会变），这个方法不希望子类去覆盖，</span></span><br><span class="line"><span class="comment">     * 子类只需要实现putMaterial()方法就行，声明为final</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">makeFruitJuice</span><span class="params">()</span></span>&#123;</span><br><span class="line">        cleanIts();</span><br><span class="line">        <span class="keyword">if</span>(isPutMaterIal())&#123;</span><br><span class="line">            putMaterial();</span><br><span class="line">        &#125;</span><br><span class="line">        putMachine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清洗水果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">cleanIts</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"clean fruit"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 放入榨汁机中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">putMachine</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"put machine"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 父类增加判断</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isPutMaterIal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.templateModePattern.parentClass;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 果汁的制造简单流程：--》清洗水果 --》放入修饰材料--》放入榨汁机中</span></span><br><span class="line"><span class="comment">  *               因为放入修饰材料的流程，各个果汁不一样，所以放入子类去实现</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"><span class="keyword">public</span>  <span class="keyword">abstract</span>  <span class="class"><span class="keyword">class</span> <span class="title">FruitJuiceParent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 果汁的制造流程（当作固定流程，不会变），这个方法不希望子类去覆盖，</span></span><br><span class="line"><span class="comment">     * 子类只需要实现putMaterial()方法就行，声明为final</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">makeFruitJuice</span><span class="params">()</span></span>&#123;</span><br><span class="line">        cleanIts();</span><br><span class="line">        <span class="keyword">if</span>(isPutMaterIal())&#123;</span><br><span class="line">            putMaterial();</span><br><span class="line">        &#125;</span><br><span class="line">        putMachine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 清洗水果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">cleanIts</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"clean fruit"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 放入榨汁机中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">putMachine</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"put machine"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 父类增加判断</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isPutMaterIal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>苹果汁子类让用户去做选择</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"> package com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> <span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"> <span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> <span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 苹果汁</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleFruitJuice</span> <span class="title">extends</span> <span class="title">FruitJuiceParent</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在苹果汁放入蜂蜜，味道更好</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"Put in honey"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在子类覆盖它，让用户去选择</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isPutMaterIal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">String</span> userInput = getUserInput();</span><br><span class="line">        <span class="keyword">if</span>(userInput.toLowerCase().startsWith(<span class="string">"y"</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到用户输入的内容</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">String</span> <span class="title">getUserInput</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">String</span> <span class="built_in">readString</span>=null;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"Do you want honey（y/n）?"</span>);</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">readString</span> = br.readLine();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"---异常---"</span>+e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(<span class="built_in">readString</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"N"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">readString</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> package com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> <span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"> <span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> <span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 苹果汁</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleFruitJuice</span> <span class="title">extends</span> <span class="title">FruitJuiceParent</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在苹果汁放入蜂蜜，味道更好</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"Put in honey"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在子类覆盖它，让用户去选择</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isPutMaterIal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">String</span> userInput = getUserInput();</span><br><span class="line">        <span class="keyword">if</span>(userInput.toLowerCase().startsWith(<span class="string">"y"</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到用户输入的内容</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">String</span> <span class="title">getUserInput</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">String</span> <span class="built_in">readString</span>=null;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"Do you want honey（y/n）?"</span>);</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">readString</span> = br.readLine();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"---异常---"</span>+e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(<span class="built_in">readString</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"N"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">readString</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>西瓜汁子类让用户去做选择</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"> package com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> <span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"> <span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> <span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 西瓜汁</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WatermelonFruitJuice</span> <span class="title">extends</span> <span class="title">FruitJuiceParent</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 放入牛奶，味道更好</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"put in milk"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在子类覆盖它，让用户去选择</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isPutMaterIal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">String</span> userInput = getUserInput();</span><br><span class="line">        <span class="keyword">if</span>(userInput.toLowerCase().startsWith(<span class="string">"y"</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到用户输入的内容</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">String</span> <span class="title">getUserInput</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">String</span> <span class="built_in">readString</span>=null;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"Do you want milk（y/n）?"</span>);</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">readString</span> = br.readLine();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"---异常---"</span>+e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(<span class="built_in">readString</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"N"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">readString</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> package com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> <span class="keyword">import</span> org.apache.commons.lang.StringUtils;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"> <span class="keyword">import</span> java.io.IOException;</span><br><span class="line"> <span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 西瓜汁</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WatermelonFruitJuice</span> <span class="title">extends</span> <span class="title">FruitJuiceParent</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 放入牛奶，味道更好</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"put in milk"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在子类覆盖它，让用户去选择</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isPutMaterIal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">String</span> userInput = getUserInput();</span><br><span class="line">        <span class="keyword">if</span>(userInput.toLowerCase().startsWith(<span class="string">"y"</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 得到用户输入的内容</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">String</span> <span class="title">getUserInput</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">String</span> <span class="built_in">readString</span>=null;</span><br><span class="line">        System.out.<span class="built_in">println</span>(<span class="string">"Do you want milk（y/n）?"</span>);</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">readString</span> = br.readLine();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            System.out.<span class="built_in">println</span>(<span class="string">"---异常---"</span>+e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(<span class="built_in">readString</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"N"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">readString</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>制造无添加草莓汁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 草莓汁，无添加</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StrawberryFruitJuice</span> <span class="keyword">extends</span> <span class="title">FruitJuiceParent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isPutMaterIal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.templateModePattern.subClass;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.templateModePattern.parentClass.FruitJuiceParent;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 草莓汁，无添加</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StrawberryFruitJuice</span> <span class="keyword">extends</span> <span class="title">FruitJuiceParent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">putMaterial</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isPutMaterIal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"> <span class="strong">_____</span><span class="strong">_____</span><span class="strong">__苹果汁制作开始__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line"> clean fruit</span><br><span class="line"> Do you want honey（y/n）?</span><br><span class="line"> y</span><br><span class="line"> Put in honey</span><br><span class="line"> put machine</span><br><span class="line"> <span class="strong">_____</span><span class="strong">_____</span><span class="strong">__苹果汁制作结束__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="strong">_____</span><span class="strong">_____</span><span class="strong">__草莓汁制作开始__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line">clean fruit</span><br><span class="line">put machine</span><br><span class="line"><span class="strong">_____</span><span class="strong">_____</span><span class="strong">__草莓汁制作结束__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="strong">_____</span><span class="strong">_____</span><span class="strong">__西瓜汁制作__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line">clean fruit</span><br><span class="line">Do you want milk（y/n）?</span><br><span class="line">n</span><br><span class="line">put machine</span><br><span class="line"><span class="strong">_____</span><span class="strong">_____</span><span class="strong">__西瓜汁结束__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line"> <span class="strong">_____</span><span class="strong">_____</span><span class="strong">__苹果汁制作开始__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line"> clean fruit</span><br><span class="line"> Do you want honey（y/n）?</span><br><span class="line"> y</span><br><span class="line"> Put in honey</span><br><span class="line"> put machine</span><br><span class="line"> <span class="strong">_____</span><span class="strong">_____</span><span class="strong">__苹果汁制作结束__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="strong">_____</span><span class="strong">_____</span><span class="strong">__草莓汁制作开始__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line">clean fruit</span><br><span class="line">put machine</span><br><span class="line"><span class="strong">_____</span><span class="strong">_____</span><span class="strong">__草莓汁制作结束__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="strong">_____</span><span class="strong">_____</span><span class="strong">__西瓜汁制作__</span><span class="strong">_____</span><span class="strong">_____</span></span><br><span class="line">clean fruit</span><br><span class="line">Do you want milk（y/n）?</span><br><span class="line">n</span><br><span class="line">put machine</span><br><span class="line"><span class="strong">_____</span><span class="strong">_____</span><span class="strong">__西瓜汁结束__</span><span class="strong">_____</span><span class="strong">_____</span></span><br></pre></td></tr></table></figure><h3 id="好莱坞原则与依赖倒置原则的区别"><a href="#好莱坞原则与依赖倒置原则的区别" class="headerlink" title="好莱坞原则与依赖倒置原则的区别"></a>好莱坞原则与依赖倒置原则的区别</h3><p>依赖倒置提倡避免使用具体类，多使用抽象。<br>好莱坞原则是用在创建框架或组件上的一种技巧，让底层组件能够被挂钩计算中，又不会让高层组件依赖低层组件。</p><h3 id="重点内容与比较"><a href="#重点内容与比较" class="headerlink" title="重点内容与比较"></a>重点内容与比较</h3><p>. 模板方法定义了算法的步骤，将步骤的实例延迟到子类<br>. 提供了一种代码复用的技巧<br>. 钩子的了解与使用<br>. 好莱坞原则提倡将决策权放到高层（父类）<br>. 策略模式和模板方法模式都封装算法，一个用组合，一个用继承</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式-迭代器模式</title>
      <link href="/2019/design003/"/>
      <url>/2019/design003/</url>
      
        <content type="html"><![CDATA[<blockquote><p>迭代器模式<br>提供一种方法顺序访问一个聚合对象中的各个元素，而又不暴露其内部的表示</p></blockquote><h3 id="情节"><a href="#情节" class="headerlink" title="情节"></a>情节</h3><p>有两家餐厅，共有两个菜单，两家准备合并，每个餐厅都有一个销售系统，但是内部菜单的组成结构稍有不同，一个是用数组存储菜单对象，一个是用集合存储菜单对象</p><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>将两个菜单合并显示</p><a id="more"></a><h3 id="两个菜单代码"><a href="#两个菜单代码" class="headerlink" title="两个菜单代码"></a>两个菜单代码</h3><p>数组菜单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.iteratorPattern.arr;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 数组菜单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:22</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrMenu</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_ITEMS=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> items=<span class="number">0</span>;</span><br><span class="line">    MenuItem[] menuItems;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">        menuItems=<span class="keyword">new</span> MenuItem[MAX_ITEMS];</span><br><span class="line">        addItem(<span class="string">"西红柿鸡蛋"</span>,<span class="string">"有营养"</span>,<span class="number">10.00</span>);</span><br><span class="line">        addItem(<span class="string">"酸辣白菜"</span>,<span class="string">"好吃"</span>,<span class="number">11.00</span>);</span><br><span class="line">        addItem(<span class="string">"酸辣土豆丝"</span>,<span class="string">"特色菜"</span>,<span class="number">12.00</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String name,String description,Double price)</span></span>&#123;</span><br><span class="line">        MenuItem menuItem = <span class="keyword">new</span> MenuItem(name, description, price);</span><br><span class="line">        <span class="keyword">if</span>(items&gt;=MAX_ITEMS)&#123;</span><br><span class="line">            System.err.println(<span class="string">"menu is full,Can't add item to menu"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            menuItems[items]=menuItem;</span><br><span class="line">            items+=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> MenuItem[] getItems()&#123;</span><br><span class="line">        <span class="keyword">return</span> menuItems;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.iteratorPattern.arr;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 数组菜单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:22</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrMenu</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_ITEMS=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> items=<span class="number">0</span>;</span><br><span class="line">    MenuItem[] menuItems;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">        menuItems=<span class="keyword">new</span> MenuItem[MAX_ITEMS];</span><br><span class="line">        addItem(<span class="string">"西红柿鸡蛋"</span>,<span class="string">"有营养"</span>,<span class="number">10.00</span>);</span><br><span class="line">        addItem(<span class="string">"酸辣白菜"</span>,<span class="string">"好吃"</span>,<span class="number">11.00</span>);</span><br><span class="line">        addItem(<span class="string">"酸辣土豆丝"</span>,<span class="string">"特色菜"</span>,<span class="number">12.00</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String name,String description,Double price)</span></span>&#123;</span><br><span class="line">        MenuItem menuItem = <span class="keyword">new</span> MenuItem(name, description, price);</span><br><span class="line">        <span class="keyword">if</span>(items&gt;=MAX_ITEMS)&#123;</span><br><span class="line">            System.err.println(<span class="string">"menu is full,Can't add item to menu"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            menuItems[items]=menuItem;</span><br><span class="line">            items+=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> MenuItem[] getItems()&#123;</span><br><span class="line">        <span class="keyword">return</span> menuItems;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>list 集合菜单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.iteratorPattern.list;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: list集合菜单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:32</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListMenu</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;MenuItem&gt; menuItems;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">        menuItems = <span class="keyword">new</span> ArrayList&lt;MenuItem&gt;();</span><br><span class="line">        addItem(<span class="string">"紫菜鸡蛋汤"</span>,<span class="string">"有营养的汤"</span>,<span class="number">6.00</span>);</span><br><span class="line">        addItem(<span class="string">"豆腐脑"</span>,<span class="string">"早餐必备"</span>,<span class="number">7.00</span>);</span><br><span class="line">        addItem(<span class="string">"鱿鱼汤"</span>,<span class="string">"补充大脑"</span>,<span class="number">8.00</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String name,String description,Double price)</span></span>&#123;</span><br><span class="line">        MenuItem menuItem = <span class="keyword">new</span> MenuItem(name, description, price);</span><br><span class="line">        menuItems.add(menuItem);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;MenuItem&gt; <span class="title">getItems</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> menuItems;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.iteratorPattern.list;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: list集合菜单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:32</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListMenu</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;MenuItem&gt; menuItems;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">        menuItems = <span class="keyword">new</span> ArrayList&lt;MenuItem&gt;();</span><br><span class="line">        addItem(<span class="string">"紫菜鸡蛋汤"</span>,<span class="string">"有营养的汤"</span>,<span class="number">6.00</span>);</span><br><span class="line">        addItem(<span class="string">"豆腐脑"</span>,<span class="string">"早餐必备"</span>,<span class="number">7.00</span>);</span><br><span class="line">        addItem(<span class="string">"鱿鱼汤"</span>,<span class="string">"补充大脑"</span>,<span class="number">8.00</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String name,String description,Double price)</span></span>&#123;</span><br><span class="line">        MenuItem menuItem = <span class="keyword">new</span> MenuItem(name, description, price);</span><br><span class="line">        menuItems.add(menuItem);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;MenuItem&gt; <span class="title">getItems</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> menuItems;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当前合并测试类</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">package com.iteratorPattern.test;</span><br><span class="line">import com.iteratorPattern.arr.ArrMenu;</span><br><span class="line">import com.iteratorPattern.<span class="built_in">list</span>.ListMenu;</span><br><span class="line">import com.iteratorPattern.vo.MenuItem;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 测试1</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-01-01 15:38</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">public <span class="keyword">class</span> TestOne &#123;</span><br><span class="line">    <span class="comment">//打印菜单--菜类和汤类，需要遍历两次，如果再有一个会变成三次，四次…………</span></span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        ArrMenu arrMenu = <span class="keyword">new</span> <span class="constructor">ArrMenu()</span>;</span><br><span class="line">        MenuItem<span class="literal">[]</span> items = arrMenu.get<span class="constructor">Items()</span>;</span><br><span class="line">        for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span><br><span class="line">            MenuItem item = items<span class="literal">[<span class="identifier">i</span>]</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item name:"</span>+item.get<span class="constructor">Name()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item description:"</span>+item.get<span class="constructor">Description()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item price:"</span>+item.get<span class="constructor">Price()</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ListMenu listMenu = <span class="keyword">new</span> <span class="constructor">ListMenu()</span>;</span><br><span class="line">        ArrayList listMenuItems = listMenu.get<span class="constructor">Items()</span>;</span><br><span class="line">        for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; listMenuItems.size<span class="literal">()</span>; i++) &#123;</span><br><span class="line">            MenuItem item = (MenuItem) listMenuItems.get(i);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item name:"</span>+item.get<span class="constructor">Name()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item description:"</span>+item.get<span class="constructor">Description()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item price:"</span>+item.get<span class="constructor">Price()</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.iteratorPattern.test;</span><br><span class="line"> </span><br><span class="line">import com.iteratorPattern.arr.ArrMenu;</span><br><span class="line">import com.iteratorPattern.<span class="built_in">list</span>.ListMenu;</span><br><span class="line">import com.iteratorPattern.vo.MenuItem;</span><br><span class="line"> </span><br><span class="line">import java.util.ArrayList;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 测试1</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-01-01 15:38</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">public <span class="keyword">class</span> TestOne &#123;</span><br><span class="line">    <span class="comment">//打印菜单--菜类和汤类，需要遍历两次，如果再有一个会变成三次，四次…………</span></span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        ArrMenu arrMenu = <span class="keyword">new</span> <span class="constructor">ArrMenu()</span>;</span><br><span class="line">        MenuItem<span class="literal">[]</span> items = arrMenu.get<span class="constructor">Items()</span>;</span><br><span class="line">        for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; items.length; i++) &#123;</span><br><span class="line">            MenuItem item = items<span class="literal">[<span class="identifier">i</span>]</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item name:"</span>+item.get<span class="constructor">Name()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item description:"</span>+item.get<span class="constructor">Description()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item price:"</span>+item.get<span class="constructor">Price()</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ListMenu listMenu = <span class="keyword">new</span> <span class="constructor">ListMenu()</span>;</span><br><span class="line">        ArrayList listMenuItems = listMenu.get<span class="constructor">Items()</span>;</span><br><span class="line">        for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; listMenuItems.size<span class="literal">()</span>; i++) &#123;</span><br><span class="line">            MenuItem item = (MenuItem) listMenuItems.get(i);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item name:"</span>+item.get<span class="constructor">Name()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item description:"</span>+item.get<span class="constructor">Description()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"item price:"</span>+item.get<span class="constructor">Price()</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="整合后"><a href="#整合后" class="headerlink" title="整合后"></a>整合后</h3><p>创建迭代器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.iteratorPattern.Iterator;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 迭代器接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:44</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Iterator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Object <span class="title">next</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.iteratorPattern.Iterator;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 迭代器接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:44</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Iterator</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Object <span class="title">next</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加数组遍历方式的迭代器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.iteratorPattern.arr;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.Iterator.Iterator;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 数组遍历方式迭代器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrMenuIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span> </span>&#123;</span><br><span class="line">    MenuItem[] items;</span><br><span class="line">    <span class="keyword">int</span> position=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrMenuIterator</span><span class="params">(MenuItem[] items)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.items=items;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(position&gt;=items.length || items[position]==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MenuItem item = items[position];</span><br><span class="line">        position+=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.iteratorPattern.arr;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.Iterator.Iterator;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 数组遍历方式迭代器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrMenuIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span> </span>&#123;</span><br><span class="line">    MenuItem[] items;</span><br><span class="line">    <span class="keyword">int</span> position=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrMenuIterator</span><span class="params">(MenuItem[] items)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.items=items;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(position&gt;=items.length || items[position]==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MenuItem item = items[position];</span><br><span class="line">        position+=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组菜单添加创建迭代器的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.iteratorPattern.arr;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.Iterator.Iterator;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 数组菜单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:22</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrMenu</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_ITEMS=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> items=<span class="number">0</span>;</span><br><span class="line">    MenuItem[] menuItems;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">        menuItems=<span class="keyword">new</span> MenuItem[MAX_ITEMS];</span><br><span class="line">        addItem(<span class="string">"西红柿鸡蛋"</span>,<span class="string">"有营养"</span>,<span class="number">10.00</span>);</span><br><span class="line">        addItem(<span class="string">"酸辣白菜"</span>,<span class="string">"好吃"</span>,<span class="number">11.00</span>);</span><br><span class="line">        addItem(<span class="string">"酸辣土豆丝"</span>,<span class="string">"特色菜"</span>,<span class="number">12.00</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String name,String description,Double price)</span></span>&#123;</span><br><span class="line">        MenuItem menuItem = <span class="keyword">new</span> MenuItem(name, description, price);</span><br><span class="line">        <span class="keyword">if</span>(items&gt;=MAX_ITEMS)&#123;</span><br><span class="line">            System.err.println(<span class="string">"menu is full,Can't add item to menu"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            menuItems[items]=menuItem;</span><br><span class="line">            items+=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Iterator <span class="title">createIterator</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ArrMenuIterator(menuItems);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.iteratorPattern.arr;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.Iterator.Iterator;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: 数组菜单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:22</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrMenu</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_ITEMS=<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> items=<span class="number">0</span>;</span><br><span class="line">    MenuItem[] menuItems;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">        menuItems=<span class="keyword">new</span> MenuItem[MAX_ITEMS];</span><br><span class="line">        addItem(<span class="string">"西红柿鸡蛋"</span>,<span class="string">"有营养"</span>,<span class="number">10.00</span>);</span><br><span class="line">        addItem(<span class="string">"酸辣白菜"</span>,<span class="string">"好吃"</span>,<span class="number">11.00</span>);</span><br><span class="line">        addItem(<span class="string">"酸辣土豆丝"</span>,<span class="string">"特色菜"</span>,<span class="number">12.00</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String name,String description,Double price)</span></span>&#123;</span><br><span class="line">        MenuItem menuItem = <span class="keyword">new</span> MenuItem(name, description, price);</span><br><span class="line">        <span class="keyword">if</span>(items&gt;=MAX_ITEMS)&#123;</span><br><span class="line">            System.err.println(<span class="string">"menu is full,Can't add item to menu"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            menuItems[items]=menuItem;</span><br><span class="line">            items+=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Iterator <span class="title">createIterator</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ArrMenuIterator(menuItems);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建 list 迭代器</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">package com.iteratorPattern.<span class="built_in">list</span>;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.Iterator.Iterator;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: list迭代器</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-01-01 16:12</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListMenuIterator</span> <span class="title">implements</span> <span class="title">Iterator</span> &#123;</span></span><br><span class="line">    ArrayList listMenus;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">position</span>=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListMenuIterator</span><span class="params">(ArrayList listMenus)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.listMenus=listMenus;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">position</span>&gt;=listMenus.<span class="built_in">size</span>() || listMenus.<span class="built_in">get</span>(<span class="built_in">position</span>)==null)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MenuItem menuItem = (MenuItem) listMenus.<span class="built_in">get</span>(<span class="built_in">position</span>);</span><br><span class="line">        <span class="built_in">position</span>+=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> menuItem;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.iteratorPattern.<span class="built_in">list</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.Iterator.Iterator;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: list迭代器</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-01-01 16:12</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListMenuIterator</span> <span class="title">implements</span> <span class="title">Iterator</span> &#123;</span></span><br><span class="line">    ArrayList listMenus;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">position</span>=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListMenuIterator</span><span class="params">(ArrayList listMenus)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.listMenus=listMenus;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">position</span>&gt;=listMenus.<span class="built_in">size</span>() || listMenus.<span class="built_in">get</span>(<span class="built_in">position</span>)==null)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        MenuItem menuItem = (MenuItem) listMenus.<span class="built_in">get</span>(<span class="built_in">position</span>);</span><br><span class="line">        <span class="built_in">position</span>+=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> menuItem;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>list 集合菜单添加创建迭代器的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.iteratorPattern.list;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.Iterator.Iterator;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: list集合菜单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:32</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListMenu</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;MenuItem&gt; menuItems;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">        menuItems = <span class="keyword">new</span> ArrayList&lt;MenuItem&gt;();</span><br><span class="line">        addItem(<span class="string">"紫菜鸡蛋汤"</span>,<span class="string">"有营养的汤"</span>,<span class="number">6.00</span>);</span><br><span class="line">        addItem(<span class="string">"豆腐脑"</span>,<span class="string">"早餐必备"</span>,<span class="number">7.00</span>);</span><br><span class="line">        addItem(<span class="string">"鱿鱼汤"</span>,<span class="string">"补充大脑"</span>,<span class="number">8.00</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String name,String description,Double price)</span></span>&#123;</span><br><span class="line">        MenuItem menuItem = <span class="keyword">new</span> MenuItem(name, description, price);</span><br><span class="line">        menuItems.add(menuItem);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Iterator <span class="title">createIterator</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ListMenuIterator(menuItems);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.iteratorPattern.list;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.Iterator.Iterator;</span><br><span class="line"><span class="keyword">import</span> com.iteratorPattern.vo.MenuItem;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span>: test</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: list集合菜单</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: 2019-01-01 15:32</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListMenu</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;MenuItem&gt; menuItems;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ListMenu</span><span class="params">()</span></span>&#123;</span><br><span class="line">        menuItems = <span class="keyword">new</span> ArrayList&lt;MenuItem&gt;();</span><br><span class="line">        addItem(<span class="string">"紫菜鸡蛋汤"</span>,<span class="string">"有营养的汤"</span>,<span class="number">6.00</span>);</span><br><span class="line">        addItem(<span class="string">"豆腐脑"</span>,<span class="string">"早餐必备"</span>,<span class="number">7.00</span>);</span><br><span class="line">        addItem(<span class="string">"鱿鱼汤"</span>,<span class="string">"补充大脑"</span>,<span class="number">8.00</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addItem</span><span class="params">(String name,String description,Double price)</span></span>&#123;</span><br><span class="line">        MenuItem menuItem = <span class="keyword">new</span> MenuItem(name, description, price);</span><br><span class="line">        menuItems.add(menuItem);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Iterator <span class="title">createIterator</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ListMenuIterator(menuItems);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">package com.iteratorPattern.test;</span><br><span class="line">import com.iteratorPattern.Iterator.Iterator;</span><br><span class="line">import com.iteratorPattern.arr.ArrMenu;</span><br><span class="line">import com.iteratorPattern.<span class="built_in">list</span>.ListMenu;</span><br><span class="line">import com.iteratorPattern.vo.MenuItem;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 测试2</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-01-01 16:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">public <span class="keyword">class</span> TestTwo &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        ArrMenu arrMenu = <span class="keyword">new</span> <span class="constructor">ArrMenu()</span>;</span><br><span class="line">        ListMenu listMenu = <span class="keyword">new</span> <span class="constructor">ListMenu()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"---------------数组 菜类---------------"</span>);</span><br><span class="line">        print<span class="constructor">Menu(<span class="params">arrMenu</span>.<span class="params">createIterator</span>()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"---------------集合 汤类---------------"</span>);</span><br><span class="line">        print<span class="constructor">Menu(<span class="params">listMenu</span>.<span class="params">createIterator</span>()</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> static void print<span class="constructor">Menu(Iterator <span class="params">iterator</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (iterator.has<span class="constructor">Next()</span>)&#123;</span><br><span class="line">            MenuItem next = (MenuItem) iterator.next<span class="literal">()</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"menu name is :"</span>+next.get<span class="constructor">Name()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"menu description is :"</span>+next.get<span class="constructor">Description()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"menu price is :"</span>+next.get<span class="constructor">Price()</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.iteratorPattern.test;</span><br><span class="line"> </span><br><span class="line">import com.iteratorPattern.Iterator.Iterator;</span><br><span class="line">import com.iteratorPattern.arr.ArrMenu;</span><br><span class="line">import com.iteratorPattern.<span class="built_in">list</span>.ListMenu;</span><br><span class="line">import com.iteratorPattern.vo.MenuItem;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 测试2</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-01-01 16:17</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line">public <span class="keyword">class</span> TestTwo &#123;</span><br><span class="line">    public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">        ArrMenu arrMenu = <span class="keyword">new</span> <span class="constructor">ArrMenu()</span>;</span><br><span class="line">        ListMenu listMenu = <span class="keyword">new</span> <span class="constructor">ListMenu()</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"---------------数组 菜类---------------"</span>);</span><br><span class="line">        print<span class="constructor">Menu(<span class="params">arrMenu</span>.<span class="params">createIterator</span>()</span>);</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"---------------集合 汤类---------------"</span>);</span><br><span class="line">        print<span class="constructor">Menu(<span class="params">listMenu</span>.<span class="params">createIterator</span>()</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> static void print<span class="constructor">Menu(Iterator <span class="params">iterator</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (iterator.has<span class="constructor">Next()</span>)&#123;</span><br><span class="line">            MenuItem next = (MenuItem) iterator.next<span class="literal">()</span>;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"menu name is :"</span>+next.get<span class="constructor">Name()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"menu description is :"</span>+next.get<span class="constructor">Description()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"menu price is :"</span>+next.get<span class="constructor">Price()</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">---------------数组 菜类---------------</span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :西红柿鸡蛋</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :有营养</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">10.0</span></span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :酸辣白菜</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :好吃</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">11.0</span></span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :酸辣土豆丝</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :特色菜</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">12.0</span></span><br><span class="line">---------------集合 汤类---------------</span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :紫菜鸡蛋汤</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :有营养的汤</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">6.0</span></span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :豆腐脑</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :早餐必备</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">7.0</span></span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :鱿鱼汤</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :补充大脑</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">8.0</span></span><br><span class="line">---------------数组 菜类---------------</span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :西红柿鸡蛋</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :有营养</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">10.0</span></span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :酸辣白菜</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :好吃</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">11.0</span></span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :酸辣土豆丝</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :特色菜</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">12.0</span></span><br><span class="line">---------------集合 汤类---------------</span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :紫菜鸡蛋汤</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :有营养的汤</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">6.0</span></span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :豆腐脑</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :早餐必备</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">7.0</span></span><br><span class="line"><span class="keyword">menu</span> name <span class="keyword">is</span> :鱿鱼汤</span><br><span class="line"><span class="keyword">menu</span> description <span class="keyword">is</span> :补充大脑</span><br><span class="line"><span class="keyword">menu</span> price <span class="keyword">is</span> :<span class="number">8.0</span></span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>此处不用 java.util 下面的迭代器是为了更好的了解迭代器是如何工作的，java.util 比我们所实现的迭代器多了一个 remove 方法，如果有其他需求，自定义的迭代器相比于 java.util 更易拓展。</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式-抽象工厂模式</title>
      <link href="/2019/design002/"/>
      <url>/2019/design002/</url>
      
        <content type="html"><![CDATA[<p>老板：阿飞，上次面包店老板找我聊了一下，他们是大规模的从各大小原料商铺进的原料，出现了好多偷工减料的情况，现在他们做大了，想自己开几个原料提供点，如果中国的顾客去买，发现原料用尽，就要去找中国原料提供点，拿原料，这个功能看看好不好实现，如果好实现，你就开始做吧！</p><p>项目组长阿飞：这个可以实现，我去操作吧</p><p>项目组长阿飞：小三，来需求了…………, 听懂了吗？你应该知道怎么拓展代码。</p><p>阿三：嗯嗯，我知道，我去拓展一下</p><p>三天过后。。</p><p>阿三：飞哥，设计好了，你看下。</p><p>这个是一个地址描述类，主要是表明是哪个地区的，有什么不同，这个是可以拓展的</p><a id="more"></a><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.vo;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 材料所在地</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: 2018-11-20 21:24</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span>  <span class="class"><span class="keyword">class</span> <span class="title">Address</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span> String name=<span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.vo;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 材料所在地</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: 2018-11-20 21:24</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span>  <span class="class"><span class="keyword">class</span> <span class="title">Address</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span> String name=<span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是中国地址类，对 Address 做了一个拓展，可以重写父类方法或者赋值属性，将特殊业务拿到子类去处理，做了个小拓展。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.vo;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 代表了中国的材料源地址,将它与其他材料源实现一个共同的父类，方便接收与拓展</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: 2018-11-20 21:24</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChineseAddress</span> <span class="keyword">extends</span> <span class="title">Address</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChineseAddress</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.vo;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 代表了中国的材料源地址,将它与其他材料源实现一个共同的父类，方便接收与拓展</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: 2018-11-20 21:24</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChineseAddress</span> <span class="keyword">extends</span> <span class="title">Address</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChineseAddress</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新加坡地址类，也是一样的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.vo;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 代表了新加坡的材料源地址,将它与其他材料源实现一个共同的父类，方便接收与拓展</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SignaporeAddress</span> <span class="keyword">extends</span> <span class="title">Address</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SignaporeAddress</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.vo;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 代表了新加坡的材料源地址,将它与其他材料源实现一个共同的父类，方便接收与拓展</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SignaporeAddress</span> <span class="keyword">extends</span> <span class="title">Address</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SignaporeAddress</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>泰国的亦是如此</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.vo;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 代表了泰国的材料源地址,将它与其他材料源实现一个共同的父类，方便接收与拓展</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThailandAddress</span> <span class="keyword">extends</span> <span class="title">Address</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ThailandAddress</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.vo;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 代表了泰国的材料源地址,将它与其他材料源实现一个共同的父类，方便接收与拓展</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: 2018-11-20 21:25</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThailandAddress</span> <span class="keyword">extends</span> <span class="title">Address</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ThailandAddress</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个材料工程的一个接口类，各大地方具体材料必须实现这个接口类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 材料工程</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: 2018-11-20 20:58</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span>  <span class="title">MaterialFactory</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建材料方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="function">Address <span class="title">selectAddress</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 材料工程</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span>  <span class="title">MaterialFactory</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建材料方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="function">Address <span class="title">selectAddress</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中国的原料工程，实现了材料工程的接口类，返回了一个中国的地址类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.ChineseAddress;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国的原材料工程</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChineseMaterialFactory</span> <span class="keyword">implements</span> <span class="title">MaterialFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">selectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ChineseAddress();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.ChineseAddress;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国的原材料工程</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChineseMaterialFactory</span> <span class="keyword">implements</span> <span class="title">MaterialFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">selectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ChineseAddress();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新加坡的原料工程，实现了材料工程的接口类，返回了一个新加坡的地址类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.SignaporeAddress;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 新加坡的原材料工程</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingaporeMaterialFactory</span> <span class="keyword">implements</span> <span class="title">MaterialFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">selectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SignaporeAddress();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.SignaporeAddress;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 新加坡的原材料工程</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingaporeMaterialFactory</span> <span class="keyword">implements</span> <span class="title">MaterialFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">selectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SignaporeAddress();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>泰国的原料工程，实现了材料工程的接口类，返回了一个泰国的地址类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.ThailandAddress;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 泰国的原材料工程</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThailandMaterialFactory</span> <span class="keyword">implements</span> <span class="title">MaterialFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">selectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ThailandAddress();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.material.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.ThailandAddress;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 泰国的原材料工程</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThailandMaterialFactory</span> <span class="keyword">implements</span> <span class="title">MaterialFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">selectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ThailandAddress();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>面包店的抽象类，进行了微改动, 接受了地址类，增加了，去选择地址这个抽象方法，也就意味着，所有实现这个面包工程的将要去实现这个方法</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包口味的抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String name;</span><br><span class="line">    <span class="keyword">protected</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增地址类属性</span></span><br><span class="line">    <span class="keyword">public</span> Address address;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增抽象方法</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> void toSelectAddress();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory stir()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搅拌"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory rubbingRound()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搓圆"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory machining()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"加工"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> BreadFactory bake()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"烘烤"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setName(String name) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getType() &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setType(String type) &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.vo.Address;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包口味的抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String name;</span><br><span class="line">    <span class="keyword">protected</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增地址类属性</span></span><br><span class="line">    <span class="keyword">public</span> Address address;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新增抽象方法</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> void toSelectAddress();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory stir()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搅拌"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory rubbingRound()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搓圆"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory machining()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"加工"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> BreadFactory bake()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"烘烤"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setName(String name) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getType() &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setType(String type) &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中国苹果口味的面包，实现抽象方法，重新给父类的几个属性赋值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国苹果口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaAppleBread</span>  <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    MaterialFactory materialFactory;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用这个有参构造，去为属性赋值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChinaAppleBread</span><span class="params">(MaterialFactory materialFactory)</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">this</span>.materialFactory=materialFactory;</span><br><span class="line">        toSelectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">toSelectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        address = materialFactory.selectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国苹果口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaAppleBread</span>  <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    MaterialFactory materialFactory;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用这个有参构造，去为属性赋值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChinaAppleBread</span><span class="params">(MaterialFactory materialFactory)</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">this</span>.materialFactory=materialFactory;</span><br><span class="line">        toSelectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">toSelectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        address = materialFactory.selectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中国奶油口味的面包，实现抽象方法，重新给父类的几个属性赋值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国奶油口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaCreamBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    MaterialFactory materialFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChinaCreamBread</span><span class="params">(MaterialFactory materialFactory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.materialFactory=materialFactory;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">""</span>;</span><br><span class="line">        toSelectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">toSelectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        address = materialFactory.selectAddress();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国奶油口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaCreamBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    MaterialFactory materialFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChinaCreamBread</span><span class="params">(MaterialFactory materialFactory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.materialFactory=materialFactory;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"2"</span>;</span><br><span class="line">        toSelectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">toSelectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        address = materialFactory.selectAddress();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新加坡苹果口味的面包，实现抽象方法，重新给父类的几个属性赋值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 新加坡苹果口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingaporeAppleBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    MaterialFactory materialFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SingaporeAppleBread</span><span class="params">(MaterialFactory materialFactory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.materialFactory=materialFactory;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"3"</span>;</span><br><span class="line">        toSelectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">toSelectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        address = materialFactory.selectAddress();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 新加坡苹果口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingaporeAppleBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    MaterialFactory materialFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SingaporeAppleBread</span><span class="params">(MaterialFactory materialFactory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.materialFactory=materialFactory;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"3"</span>;</span><br><span class="line">        toSelectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">toSelectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        address = materialFactory.selectAddress();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新加坡奶油口味的面包，实现抽象方法，重新给父类的几个属性赋值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 新加坡奶油口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingaporeCreamBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    MaterialFactory materialFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SingaporeCreamBread</span><span class="params">(MaterialFactory materialFactory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.materialFactory=materialFactory;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"4"</span>;</span><br><span class="line">        toSelectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">toSelectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        address = materialFactory.selectAddress();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.kind.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factory.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 新加坡奶油口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingaporeCreamBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    MaterialFactory materialFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SingaporeCreamBread</span><span class="params">(MaterialFactory materialFactory)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.materialFactory=materialFactory;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"4"</span>;</span><br><span class="line">        toSelectAddress();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">toSelectAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        address = materialFactory.selectAddress();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>面包商店抽象类</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.breadStore.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包商店抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory orderBread(String type) &#123;</span><br><span class="line"></span><br><span class="line">        BreadFactory bread = createBread(type);</span><br><span class="line">        <span class="comment">//做业务判断，如果材料耗尽，去拿材料</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"材料耗尽"</span>);</span><br><span class="line">            System.<span class="keyword">out</span>.println(bread.address.name+<span class="string">"_拿到材料"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>   bread.stir()</span><br><span class="line">                .rubbingRound()</span><br><span class="line">                .machining()</span><br><span class="line">                .bake();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> BreadFactory createBread(String type);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.breadStore.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包商店抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory orderBread(String type) &#123;</span><br><span class="line"></span><br><span class="line">        BreadFactory bread = createBread(type);</span><br><span class="line">        <span class="comment">//做业务判断，如果材料耗尽，去拿材料</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span>==<span class="number">1</span>)&#123;</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="string">"材料耗尽"</span>);</span><br><span class="line">            System.<span class="keyword">out</span>.println(bread.address.name+<span class="string">"_拿到材料"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>   bread.stir()</span><br><span class="line">                .rubbingRound()</span><br><span class="line">                .machining()</span><br><span class="line">                .bake();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> BreadFactory createBread(String type);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中国店铺子类, 将材料原材料工程，传递给 BreadFactory 的子类对象，再到构造方法</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"> package com.abstractFactoryPattern.breadStore.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.<span class="keyword">factory</span>.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.<span class="keyword">factory</span>.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.ChinaAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.ChinaCreamBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factoryImpl.ChineseMaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.<span class="keyword">factory</span>.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: designPattern</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description: 中国店铺子类</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: -- :</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ChinaStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public BreadFactory createBread(<span class="built_in">String</span> type) &#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        MaterialFactory chineseMaterialFactory = <span class="keyword">new</span> ChineseMaterialFactory();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建中国奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ChinaCreamBread(chineseMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建中国苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ChinaAppleBread(chineseMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> package com.abstractFactoryPattern.breadStore.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.<span class="keyword">factory</span>.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.<span class="keyword">factory</span>.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.ChinaAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.ChinaCreamBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factoryImpl.ChineseMaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.<span class="keyword">factory</span>.MaterialFactory;</span><br><span class="line"> </span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: designPattern</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description: 中国店铺子类</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: -- :</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ChinaStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public BreadFactory createBread(<span class="built_in">String</span> type) &#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        MaterialFactory chineseMaterialFactory = <span class="keyword">new</span> ChineseMaterialFactory();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建中国奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ChinaCreamBread(chineseMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建中国苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ChinaAppleBread(chineseMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新加坡店铺子类, 将材料原材料工程，传递给 BreadFactory 的子类对象，再到构造方法</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"> package com.abstractFactoryPattern.breadStore.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.<span class="keyword">factory</span>.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.<span class="keyword">factory</span>.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.SingaporeAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.SingaporeCreamBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.<span class="keyword">factory</span>.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factoryImpl.SingaporeMaterialFactory;</span><br><span class="line"> </span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: designPattern</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description: 新加坡店铺子类</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: -- :</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SingaporeStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public BreadFactory createBread(<span class="built_in">String</span> type) &#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        MaterialFactory singaporeMaterialFactory = <span class="keyword">new</span> SingaporeMaterialFactory();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建新加坡奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> SingaporeCreamBread(singaporeMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建新加坡苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> SingaporeAppleBread(singaporeMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> package com.abstractFactoryPattern.breadStore.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.<span class="keyword">factory</span>.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.<span class="keyword">factory</span>.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.SingaporeAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.SingaporeCreamBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.<span class="keyword">factory</span>.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factoryImpl.SingaporeMaterialFactory;</span><br><span class="line"> </span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: designPattern</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description: 新加坡店铺子类</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: -- :</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SingaporeStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public BreadFactory createBread(<span class="built_in">String</span> type) &#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        MaterialFactory singaporeMaterialFactory = <span class="keyword">new</span> SingaporeMaterialFactory();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建新加坡奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> SingaporeCreamBread(singaporeMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建新加坡苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> SingaporeAppleBread(singaporeMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>泰国店铺子类, 将材料原材料工程，传递给 BreadFactory 的子类对象，再到构造方法</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"> package com.abstractFactoryPattern.breadStore.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.<span class="keyword">factory</span>.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.<span class="keyword">factory</span>.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.ThailandAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.<span class="keyword">factory</span>.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factoryImpl.ThailandMaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: designPattern</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description: 泰国店铺子类</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: -- :</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ThailandStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public BreadFactory createBread(<span class="built_in">String</span> type) &#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        MaterialFactory thailandMaterialFactory = <span class="keyword">new</span> ThailandMaterialFactory();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建泰国奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ThailandAppleBread(thailandMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建泰国苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ThailandAppleBread(thailandMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> package com.abstractFactoryPattern.breadStore.factoryImpl;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.<span class="keyword">factory</span>.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.<span class="keyword">factory</span>.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.kind.factoryImpl.ThailandAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.<span class="keyword">factory</span>.MaterialFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.material.factoryImpl.ThailandMaterialFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: designPattern</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description: 泰国店铺子类</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: -- :</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ThailandStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public BreadFactory createBread(<span class="built_in">String</span> type) &#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        MaterialFactory thailandMaterialFactory = <span class="keyword">new</span> ThailandMaterialFactory();</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建泰国奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ThailandAppleBread(thailandMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建泰国苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ThailandAppleBread(thailandMaterialFactory);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.patternTest;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.factory.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.factoryImpl.ChinaStore;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 测试类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"中国顾客买苹果味道面包"</span>);</span><br><span class="line">        BreadStoreFactory chinaBreadStoreFactory = <span class="keyword">new</span> ChinaStore();</span><br><span class="line">        chinaBreadStoreFactory.orderBread(<span class="string">"apple"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.abstractFactoryPattern.patternTest;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.factory.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.abstractFactoryPattern.breadStore.factoryImpl.ChinaStore;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 测试类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"中国顾客买苹果味道面包"</span>);</span><br><span class="line">        BreadStoreFactory chinaBreadStoreFactory = <span class="keyword">new</span> ChinaStore();</span><br><span class="line">        chinaBreadStoreFactory.orderBread(<span class="string">"apple"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">中国顾客买苹果味道面包</span><br><span class="line">创建中国苹果口味面包</span><br><span class="line">材料耗尽</span><br><span class="line">中国材料源<span class="literal">_</span>拿到材料</span><br><span class="line">搅拌</span><br><span class="line">搓圆</span><br><span class="line">加工</span><br><span class="line">烘烤</span><br><span class="line">中国顾客买苹果味道面包</span><br><span class="line">创建中国苹果口味面包</span><br><span class="line">材料耗尽</span><br><span class="line">中国材料源<span class="literal">_</span>拿到材料</span><br><span class="line">搅拌</span><br><span class="line">搓圆</span><br><span class="line">加工</span><br><span class="line">烘烤</span><br></pre></td></tr></table></figure><p>阿三：这里我使用了抽象工厂模式，提供一个接口，用于创建相关或依赖对象的家族，而不需要明确指定具体的类。他允许了调用方，创建一个相关的产品，但是不需要知道具体的产品是什么。从具体的产品中解耦，这个是材料源与商店，地址的关系图</p><p><img src="https://img-blog.csdnimg.cn/20181121232008287.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lhbmcxNzgwNDA5ODEw,size_16,color_FFFFFF,t_70" alt></p><p>项目组长阿飞：是的，抽象工厂经常以工厂方法的方式实现，抽象工厂的任务是定义一个负责创建一组产品的接口 (材料提供点)，接口内的每个方法都负责创建一个具体的产品 (比如创建地址)。然后利用实现抽象工厂的子类来提供这些具体的做法</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式-工厂模式</title>
      <link href="/2019/design001/"/>
      <url>/2019/design001/</url>
      
        <content type="html"><![CDATA[<p>老板：阿飞啊，我们公司最近接了个项目，你看着设计一下，我给你说下需求。<br>项目组长阿飞：好啊，什么需求？<br>老板：我们找了一个合作的商铺，他们要设计一套面包销售系统。主要功能，根据用户选择的面包种类来下订单，面包目前有奶油口味面包和苹果口味面包，所有面包的制作流程都是 — 搅拌，搓圆，加工，烘烤。<br>项目组长阿飞：好的，我去想想怎么设计。<br>项目组长阿飞：小三啊，我给你个任务，…………, 听懂了吗？<br>阿三：听懂了，飞哥。<br>项目组长阿飞：嗯嗯，好的，这个任务就交给你了，我要去处理点事情，我相信你。<br>阿三：。。。<br>三天过后。<br>阿三：飞哥，设计好了，你看下。</p><a id="more"></a><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadKind.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包口味的抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String name;</span><br><span class="line">    <span class="keyword">protected</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory stir()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搅拌"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory rubbingRound()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搓圆"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory machining()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"加工"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> BreadFactory bake()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"烘烤"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setName(String name) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getType() &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setType(String type) &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadKind.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包口味的抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String name;</span><br><span class="line">    <span class="keyword">protected</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory stir()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搅拌"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory rubbingRound()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搓圆"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory machining()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"加工"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> BreadFactory bake()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"烘烤"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setName(String name) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getType() &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setType(String type) &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在已有的两种口味继承这个抽象类 – 奶油面包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadKind;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 奶油味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CreamBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CreamBread</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"2"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadKind;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 奶油味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CreamBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CreamBread</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"2"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>苹果味面包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadKind;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 苹果味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AppleBread</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadKind;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 苹果味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppleBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AppleBread</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后是销售系统</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"> package com.factoryPattern.breadKind.breadOrder;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.AppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.CreamBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @program: designPattern</span></span><br><span class="line"><span class="comment">  * @description: 面包订单销售类</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> BreadOrder &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    BreadFactory orderBread(String <span class="keyword">type</span>)&#123;</span><br><span class="line">        BreadFactory breadFactory;</span><br><span class="line">        <span class="keyword">if</span>("cream".equalsIgnoreCase(<span class="keyword">type</span>))&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("创建奶油口味面包");</span><br><span class="line">            breadFactory=<span class="built_in">new</span> CreamBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>("apple".equalsIgnoreCase(<span class="keyword">type</span>))&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("创建苹果口味面包");</span><br><span class="line">            breadFactory=<span class="built_in">new</span> AppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("无法确认的面包类型");</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> breadFactory.stir()</span><br><span class="line">                .rubbingRound()</span><br><span class="line">                .machining()</span><br><span class="line">                .bake();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> package com.factoryPattern.breadKind.breadOrder;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.AppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.CreamBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @program: designPattern</span></span><br><span class="line"><span class="comment">  * @description: 面包订单销售类</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> BreadOrder &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    BreadFactory orderBread(String <span class="keyword">type</span>)&#123;</span><br><span class="line">        BreadFactory breadFactory;</span><br><span class="line">        <span class="keyword">if</span>("cream".equalsIgnoreCase(<span class="keyword">type</span>))&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("创建奶油口味面包");</span><br><span class="line">            breadFactory=<span class="built_in">new</span> CreamBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>("apple".equalsIgnoreCase(<span class="keyword">type</span>))&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("创建苹果口味面包");</span><br><span class="line">            breadFactory=<span class="built_in">new</span> AppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("无法确认的面包类型");</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> breadFactory.stir()</span><br><span class="line">                .rubbingRound()</span><br><span class="line">                .machining()</span><br><span class="line">                .bake();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目组长阿飞: 三啊，不错，学会使用抽象了，但是如果我还要增加好几种面包类型呢？阿尔法面包销售不好，不想做这个了呢？之前给你说过设计模式的原则之一，对拓展开放，对修改关闭。如果有改动，可能会一直在这个代码的基础上累加做修改的。最好把创建对象的代码与销售的代码分隔开。<br>阿三：好的，我再修改修改（真的是，搞这么麻烦干嘛!）<br>又三天过后。<br>阿三：飞哥，修改好了，你看下。</p><p>新增了一个工程类</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"> package com.factoryPattern.breadCreate;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.AppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.CreamBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @program: designPattern</span></span><br><span class="line"><span class="comment">  * @description: 面包创建工程</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> BreadCreateFactory &#123;</span><br><span class="line">    <span class="built_in">public</span> BreadFactory createBread(String <span class="keyword">type</span>)&#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>("cream".equalsIgnoreCase(<span class="keyword">type</span>))&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("创建奶油口味面包");</span><br><span class="line">            breadFactory=<span class="built_in">new</span> CreamBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>("apple".equalsIgnoreCase(<span class="keyword">type</span>))&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("创建苹果口味面包");</span><br><span class="line">            breadFactory=<span class="built_in">new</span> AppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("无法确认的面包类型");</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> package com.factoryPattern.breadCreate;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.AppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.CreamBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadKind.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @program: designPattern</span></span><br><span class="line"><span class="comment">  * @description: 面包创建工程</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> BreadCreateFactory &#123;</span><br><span class="line">    <span class="built_in">public</span> BreadFactory createBread(String <span class="keyword">type</span>)&#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>("cream".equalsIgnoreCase(<span class="keyword">type</span>))&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("创建奶油口味面包");</span><br><span class="line">            breadFactory=<span class="built_in">new</span> CreamBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>("apple".equalsIgnoreCase(<span class="keyword">type</span>))&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("创建苹果口味面包");</span><br><span class="line">            breadFactory=<span class="built_in">new</span> AppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">System</span>.<span class="keyword">out</span>.println("无法确认的面包类型");</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改了销售类</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"> package com.factoryPattern.<span class="keyword">breadKind.breadOrder;</span></span><br><span class="line"><span class="keyword"> </span></span><br><span class="line"> <span class="meta">import</span> com.factoryPattern.<span class="keyword">breadCreate.BreadCreateFactory;</span></span><br><span class="line"><span class="keyword"> </span><span class="meta">import</span> com.factoryPattern.<span class="keyword">breadKind.factory.BreadFactory;</span></span><br><span class="line"><span class="keyword"> </span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @program: designPattern</span></span><br><span class="line"><span class="comment">  * @description: 面包订单销售类</span></span><br><span class="line"><span class="comment">  * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="symbol">public</span> class <span class="keyword">BreadOrder </span>&#123;</span><br><span class="line">    <span class="keyword">BreadCreateFactory </span><span class="keyword">breadCreateFactory;</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword"> </span>   public <span class="keyword">BreadOrder(BreadCreateFactory </span><span class="keyword">breadCreateFactory) </span>&#123;</span><br><span class="line">        this.<span class="keyword">breadCreateFactory </span>= <span class="keyword">breadCreateFactory;</span></span><br><span class="line"><span class="keyword"> </span>   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">BreadFactory </span>orderBread(<span class="keyword">String </span>type) &#123;</span><br><span class="line">        return <span class="keyword">breadCreateFactory.createBread(type)</span></span><br><span class="line"><span class="keyword"> </span>               .stir()</span><br><span class="line">                .rubbingRound()</span><br><span class="line">                .machining()</span><br><span class="line">                .<span class="keyword">bake();</span></span><br><span class="line"><span class="keyword"> </span>   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> package com.factoryPattern.<span class="keyword">breadKind.breadOrder;</span></span><br><span class="line"><span class="keyword"> </span></span><br><span class="line"> <span class="meta">import</span> com.factoryPattern.<span class="keyword">breadCreate.BreadCreateFactory;</span></span><br><span class="line"><span class="keyword"> </span><span class="meta">import</span> com.factoryPattern.<span class="keyword">breadKind.factory.BreadFactory;</span></span><br><span class="line"><span class="keyword"> </span></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * @program: designPattern</span></span><br><span class="line"><span class="comment">  * @description: 面包订单销售类</span></span><br><span class="line"><span class="comment">  * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="symbol">public</span> class <span class="keyword">BreadOrder </span>&#123;</span><br><span class="line">    <span class="keyword">BreadCreateFactory </span><span class="keyword">breadCreateFactory;</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword"> </span>   public <span class="keyword">BreadOrder(BreadCreateFactory </span><span class="keyword">breadCreateFactory) </span>&#123;</span><br><span class="line">        this.<span class="keyword">breadCreateFactory </span>= <span class="keyword">breadCreateFactory;</span></span><br><span class="line"><span class="keyword"> </span>   &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">BreadFactory </span>orderBread(<span class="keyword">String </span>type) &#123;</span><br><span class="line">        return <span class="keyword">breadCreateFactory.createBread(type)</span></span><br><span class="line"><span class="keyword"> </span>               .stir()</span><br><span class="line">                .rubbingRound()</span><br><span class="line">                .machining()</span><br><span class="line">                .<span class="keyword">bake();</span></span><br><span class="line"><span class="keyword"> </span>   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目组长阿飞: 不错，这是一个简单工厂，但是你要记住，这并不是一个设计模式，而是一个编程习惯，一个不错的编程习惯，简单工厂把全部的事情，在一个地方处理完了，工厂方法是创建一个框架，让子类决定如何实现。还有领导说需求变了，这个面包店开了分店，一个在泰国，一个在新加坡，你看着再修改下吧，你可以考虑加入工厂方法。<br>阿三：好的（我服了，真的是 ****）<br>又三天过后。<br>阿三：飞哥，修改好了，这是完整代码，你看下。<br>先是一个面包商店抽象类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadStore;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包商店抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BreadFactory <span class="title">orderBread</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createBread(type)</span><br><span class="line">                .stir()</span><br><span class="line">                .rubbingRound()</span><br><span class="line">                .machining()</span><br><span class="line">                .bake();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> BreadFactory <span class="title">createBread</span><span class="params">(String type)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadStore;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包商店抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BreadFactory <span class="title">orderBread</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> createBread(type)</span><br><span class="line">                .stir()</span><br><span class="line">                .rubbingRound()</span><br><span class="line">                .machining()</span><br><span class="line">                .bake();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> BreadFactory <span class="title">createBread</span><span class="params">(String type)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个中国店铺子类实现商店抽象类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadStore;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.ChinaAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.ChinaCreamBread;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国店铺子类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">BreadFactory <span class="title">createBread</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建中国奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ChinaCreamBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建中国苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ChinaAppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadStore;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.ChinaAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.ChinaCreamBread;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国店铺子类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">BreadFactory <span class="title">createBread</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建中国奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ChinaCreamBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建中国苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ChinaAppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个新加坡店铺子类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadStore;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.SingaporeAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.SingaporeCreamBread;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 新加坡店铺子类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingaporeStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">BreadFactory <span class="title">createBread</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建新加坡奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> SingaporeCreamBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建新加坡苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> SingaporeAppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadStore;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.SingaporeAppleBread;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.SingaporeCreamBread;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 新加坡店铺子类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingaporeStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">BreadFactory <span class="title">createBread</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建新加坡奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> SingaporeCreamBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建新加坡苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> SingaporeAppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个泰国店铺子类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadStore;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.ThailandAppleBread;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 泰国店铺子类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThailandStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">BreadFactory <span class="title">createBread</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建泰国奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ThailandAppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建泰国苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ThailandAppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.breadStore;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.kind.ThailandAppleBread;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 泰国店铺子类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThailandStore</span> <span class="keyword">extends</span> <span class="title">BreadStoreFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function">BreadFactory <span class="title">createBread</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        BreadFactory breadFactory=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"cream"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建泰国奶油口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ThailandAppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"apple"</span>.equalsIgnoreCase(type))&#123;</span><br><span class="line">            System.out.println(<span class="string">"创建泰国苹果口味面包"</span>);</span><br><span class="line">            breadFactory=<span class="keyword">new</span> ThailandAppleBread();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"无法确认的面包类型"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> breadFactory;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>面包口味的抽象类</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包口味的抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String name;</span><br><span class="line">    <span class="keyword">protected</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory stir()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搅拌"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory rubbingRound()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搓圆"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory machining()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"加工"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> BreadFactory bake()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"烘烤"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setName(String name) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getType() &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setType(String type) &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.factory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 面包口味的抽象类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> String name;</span><br><span class="line">    <span class="keyword">protected</span> String type;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory stir()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搅拌"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory rubbingRound()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"搓圆"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory machining()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"加工"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> BreadFactory bake()&#123;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"烘烤"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setName(String name) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getType() &#123;</span><br><span class="line">        <span class="keyword">return</span> type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> BreadFactory setType(String type) &#123;</span><br><span class="line">        <span class="keyword">this</span>.type = type;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中国苹果口味面包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.kind;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国苹果口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaAppleBread</span>  <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChinaAppleBread</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.kind;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国苹果口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaAppleBread</span>  <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChinaAppleBread</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"1"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中国奶油口味面包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.kind;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国奶油口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaCreamBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChinaCreamBread</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"2"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.kind;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.factory.BreadFactory;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 中国奶油口味面包</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChinaCreamBread</span> <span class="keyword">extends</span> <span class="title">BreadFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChinaCreamBread</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ;</span><br><span class="line">        type=<span class="string">"2"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//可以重写父类方法，进行特殊处理</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有新加坡苹果口味面包，新加坡奶油口味面包，泰国苹果口味面包，泰国奶油口味面包</p><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">package</span> com.factoryPattern.patternTest;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadStore.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadStore.ChinaStore;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 测试类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"中国顾客买苹果味道面包"</span>);</span><br><span class="line">        BreadStoreFactory chinaBreadStoreFactory = <span class="keyword">new</span> ChinaStore();</span><br><span class="line">        chinaBreadStoreFactory.orderBread(<span class="string">"apple"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">package</span> com.factoryPattern.patternTest;</span><br><span class="line"> </span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadStore.BreadStoreFactory;</span><br><span class="line"> <span class="keyword">import</span> com.factoryPattern.breadStore.ChinaStore;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@program</span>: designPattern</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@description</span>: 测试类</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@author</span>: Mr.Yang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span>: -- :</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"中国顾客买苹果味道面包"</span>);</span><br><span class="line">        BreadStoreFactory chinaBreadStoreFactory = <span class="keyword">new</span> ChinaStore();</span><br><span class="line">        chinaBreadStoreFactory.orderBread(<span class="string">"apple"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">中国顾客买苹果味道面包</span><br><span class="line">创建中国苹果口味面包</span><br><span class="line">搅拌</span><br><span class="line">搓圆</span><br><span class="line">加工</span><br><span class="line">烘烤</span><br><span class="line">中国顾客买苹果味道面包</span><br><span class="line">创建中国苹果口味面包</span><br><span class="line">搅拌</span><br><span class="line">搓圆</span><br><span class="line">加工</span><br><span class="line">烘烤</span><br></pre></td></tr></table></figure><p>项目组长阿飞: 看着不错，给我讲解一下吧。<br>阿三：我所用的是设计模式中的工厂模式，让子类决定该创建的对象是什么，来达到将对象创建的过程封装的目的。我简单的画了个图</p><p><img src="https://img-blog.csdnimg.cn/2018111822450083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lhbmcxNzgwNDA5ODEw,size_16,color_FFFFFF,t_70" alt></p><p><img src="https://img-blog.csdnimg.cn/20181118224525851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lhbmcxNzgwNDA5ODEw,size_16,color_FFFFFF,t_70" alt></p><p>阿三：大致如图，工程模式的定义：定义了一个创建对象的接口，但有子类决定要实例化的类是哪一个。工程方法让类把实例化推迟到子类</p><p>项目组长阿飞: 很好，看来你已经掌握了工程模式的精髓，工程模式遵循了一个设计原则：“要依赖抽象，不要依赖具体实现。”，它有一个响亮的名字：“依赖倒置原则”。 你看你这两个图。创建者抽象 BreadStoreFactory 依赖与 BreadFactory 抽象类, 面包的具体实现 (chinaAppleBread,chinaCreamBread) 依赖与 BreadFactory 抽象类，想要遵循依赖倒置原则，工程方法并非是唯一的，但是确是最有威力的技巧之一。</p><p>阿三：好的（我早就知道了 — 膨胀的一批）</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构-栈</title>
      <link href="/2019/datastructure002/"/>
      <url>/2019/datastructure002/</url>
      
        <content type="html"><![CDATA[<blockquote><p>数据结构 - 栈</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>栈（英语：stack）又称为堆栈或堆叠，栈作为一种数据结构，它按照先进后出的原则存储数据，先进入的数据被压入栈底，最后的数据在栈顶，需要读数据的时候从栈顶开始弹出数据（最后一个数据被第一个读出来）。<br>　　由于堆叠数据结构只允许在一端进行操作，因而按照后进先出（LIFO, Last In First Out）的原理运作。栈也称为后进先出表</p><a id="more"></a><h3 id="栈的应用场景"><a href="#栈的应用场景" class="headerlink" title="栈的应用场景"></a>栈的应用场景</h3><p>undo 操作（撤销）</p><ul><li>例如：将操作的每组数据存入栈中，如果想要撤销，只需要弹出栈顶元素，就可以恢复上一步操作了。</li></ul><p>程序调用的系统栈</p><ul><li>例如：A 方法调用 B 方法得到返回值，B 调用 C 得到返回值，A 操作走到了 B 方法，这个时候可以将 A 的代码位置存储到栈中，然后走到 B 方法，B 操作走到了 C 方法，这个时候可以将 B 的代码位置存储到栈中。最后 C 执行完成，根据栈的结构开始弹出数据，一步一步再走回 A 方法。</li></ul><p>判断括号是否有效。下文会有代码实现（详细规则描述可以参考 leetcode 第 20 题）</p><ul><li><p>开括号必须用同一类型的括号闭合。</p></li><li><p>开方括号必须按正确顺序闭合。</p></li><li><p>例如：正确的:{[()]} {()} 等 。错误的：[{(})] [}{()] 等。</p></li></ul><h3 id="自定义栈基类的代码实现"><a href="#自定义栈基类的代码实现" class="headerlink" title="自定义栈基类的代码实现"></a>自定义栈基类的代码实现</h3><ul><li>栈在 java.util 有一个工具类，先不用，自定义实现一个</li></ul><p>创建一个接口，用来统一规范所有栈实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.datastructure.stack;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Stack</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向栈插入元素</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">push</span><span class="params">(E e)</span></span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取出最上面的元素，并且返回</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">pop</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取栈的大小</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断栈是否为空</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取栈最上面的元素</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">peek</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.datastructure.stack;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Stack</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向栈插入元素</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> e</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">push</span><span class="params">(E e)</span></span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取出最上面的元素，并且返回</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">pop</span><span class="params">()</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取栈的大小</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断栈是否为空</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取栈最上面的元素</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">peek</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用基于数组的方式来实现一个栈（上篇文章<a href="http://mp.weixin.qq.com/s?__biz=MzI1Mjk1NjQwNA==&mid=2247483912&idx=1&sn=8da97e3506d03fbc4703fb8e8cafdcfb&chksm=e9da9993dead1085e85b15ab517cf814b909cd3cdd353dc8b4251515fc77b90db6fd0f3ab9b6&scene=21#wechat_redirect" target="_blank" rel="external nofollow noopener noreferrer">数据结构 - 数组</a>所写的自定义数组）</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.<span class="built_in">stack</span>;</span><br><span class="line"><span class="keyword">import</span> com.datastructure.<span class="built_in">array</span>.Array;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-02 15:27</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayStack</span>&lt;E&gt; <span class="title">implements</span> <span class="title">Stack</span>&lt;E&gt;&#123;</span></span><br><span class="line">    Array&lt;E&gt; <span class="built_in">array</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayStack</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        <span class="built_in">array</span>=<span class="keyword">new</span> Array&lt;E&gt;(capacity);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayStack</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">array</span>=<span class="keyword">new</span> Array&lt;E&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">array</span>.addLast(e);</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.removeLast();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getSize();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">peek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getLast();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取容量值</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getCapacity();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="string">"stack: "</span>);</span><br><span class="line">        sb.append(<span class="string">"["</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">array</span>.getSize();i++)&#123;</span><br><span class="line">            sb.append(<span class="built_in">array</span>.<span class="built_in">get</span>(i));</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="built_in">array</span>.getSize()<span class="number">-1</span>)&#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"]            right value is stack top"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.<span class="built_in">stack</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.datastructure.<span class="built_in">array</span>.Array;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-02 15:27</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayStack</span>&lt;E&gt; <span class="title">implements</span> <span class="title">Stack</span>&lt;E&gt;&#123;</span></span><br><span class="line"> </span><br><span class="line">    Array&lt;E&gt; <span class="built_in">array</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayStack</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        <span class="built_in">array</span>=<span class="keyword">new</span> Array&lt;E&gt;(capacity);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayStack</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">array</span>=<span class="keyword">new</span> Array&lt;E&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(E e)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">array</span>.addLast(e);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.removeLast();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getSize();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">peek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getLast();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取容量值</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getCapacity();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="string">"stack: "</span>);</span><br><span class="line">        sb.append(<span class="string">"["</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">array</span>.getSize();i++)&#123;</span><br><span class="line">            sb.append(<span class="built_in">array</span>.<span class="built_in">get</span>(i));</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="built_in">array</span>.getSize()<span class="number">-1</span>)&#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"]            right value is stack top"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.stack;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-02 16:11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">StackTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        ArrayStack&lt;Integer&gt; <span class="built_in">int</span>egerArrayStack = new ArrayStack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">int</span>egerArrayStack.push(i);</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayStack);</span><br><span class="line">        &#125;</span><br><span class="line">        Integer pop = <span class="built_in">int</span>egerArrayStack.pop();</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"----移除上级元素----value is "</span>+pop);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"-------------移除之后的栈打印------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayStack);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.stack;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-02 16:11</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">StackTest</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        ArrayStack&lt;Integer&gt; <span class="built_in">int</span>egerArrayStack = new ArrayStack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">int</span>egerArrayStack.push(i);</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayStack);</span><br><span class="line">        &#125;</span><br><span class="line">        Integer pop = <span class="built_in">int</span>egerArrayStack.pop();</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"----移除上级元素----value is "</span>+pop);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"-------------移除之后的栈打印------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayStack);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">stack: [<span class="number">0</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">----移除上级元素----value <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">-------------移除之后的栈打印------------------</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">stack: [<span class="number">0</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]            right value <span class="keyword">is</span> stack top</span><br><span class="line">----移除上级元素----value <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">-------------移除之后的栈打印------------------</span><br><span class="line">stack: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]            right value <span class="keyword">is</span> stack top</span><br></pre></td></tr></table></figure><h3 id="leetCode-第-20-题，花括号正确闭合"><a href="#leetCode-第-20-题，花括号正确闭合" class="headerlink" title="leetCode 第 20 题，花括号正确闭合"></a>leetCode 第 20 题，花括号正确闭合</h3><p>思路</p><ul><li><p>根据栈的数据结构特点，我们可以先将所有左括号‘[{(’放进栈中，然后判断当前字符如果是‘)]}’这种的右括号，但是栈顶的括号却不匹配，返回 false</p></li><li><p>注意控制判断</p></li><li><p>这里使用 java 自带的栈工具类来实现</p></li><li><p>leetcode 给的测试例子：</p></li></ul><table><thead><tr><th></th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>输入例子</td><td>()</td><td>()[]{}</td><td>(]</td><td>([)]</td><td>{[]}</td></tr></tbody></table><p>代码实现</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> <span class="title">com.datastructure.stack;</span></span><br><span class="line">import java.util.Stack;</span><br><span class="line">/**</span><br><span class="line"> * @program: test</span><br><span class="line"> * @description:</span><br><span class="line"> * @author: Mr.Yang</span><br><span class="line"> * @create: <span class="number">2019</span>-<span class="number">05</span>-<span class="number">02</span> <span class="number">16</span>:<span class="number">59</span></span><br><span class="line"> **/</span><br><span class="line">public class Solution &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Solution solution = <span class="keyword">new</span> Solution();</span><br><span class="line">        System.<span class="keyword">out</span>.println(solution.isValid(<span class="string">"&#123;\"</span>name\<span class="string">": \"</span>网站\<span class="string">",\"</span>num\<span class="string">": 3,\"</span>sites\<span class="string">": [ \"</span>Google.com\<span class="string">", \"</span>Taobao.com\<span class="string">", \"</span>Waibo.wang\<span class="string">" ]&#125;"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    public boolean isValid(String s) &#123;</span><br><span class="line">        Stack&lt;Character&gt; characters = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            char c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">'&#123;'</span> || c == <span class="string">'['</span> || c == <span class="string">'('</span>) &#123;</span><br><span class="line">                characters.push(c);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(characters.isEmpty())&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Character peek = characters.pop();</span><br><span class="line">                switch (c) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'&#125;'</span>:</span><br><span class="line">                        <span class="keyword">if</span> (!peek.equals(<span class="string">'&#123;'</span>)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        continue;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">']'</span>:</span><br><span class="line">                        <span class="keyword">if</span> (!peek.equals(<span class="string">'['</span>)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        continue;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">')'</span>:</span><br><span class="line">                        <span class="keyword">if</span> (!peek.equals(<span class="string">'('</span>)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        continue;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> characters.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">    /*public boolean isValid(String s) &#123;</span><br><span class="line">        Stack&lt;Character&gt; characters = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            char c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">'&#123;'</span> || c == <span class="string">'['</span> || c == <span class="string">'('</span>) &#123;</span><br><span class="line">                characters.push(c);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(characters.isEmpty())&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Character toChar = characters.pop();</span><br><span class="line">                <span class="keyword">if</span>(c == <span class="string">')'</span> &amp;&amp; toChar != <span class="string">'('</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(c == <span class="string">'&#125;'</span> &amp;&amp; toChar != <span class="string">'&#123;'</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(c == <span class="string">']'</span> &amp;&amp; toChar != <span class="string">'['</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> characters.isEmpty();</span><br><span class="line">    &#125;*/</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> <span class="title">com.datastructure.stack;</span></span><br><span class="line"> </span><br><span class="line">import java.util.Stack;</span><br><span class="line"> </span><br><span class="line">/**</span><br><span class="line"> * @program: test</span><br><span class="line"> * @description:</span><br><span class="line"> * @author: Mr.Yang</span><br><span class="line"> * @create: <span class="number">2019</span>-<span class="number">05</span>-<span class="number">02</span> <span class="number">16</span>:<span class="number">59</span></span><br><span class="line"> **/</span><br><span class="line">public class Solution &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Solution solution = <span class="keyword">new</span> Solution();</span><br><span class="line">        System.<span class="keyword">out</span>.println(solution.isValid(<span class="string">"&#123;\"</span>name\<span class="string">": \"</span>网站\<span class="string">",\"</span>num\<span class="string">": 3,\"</span>sites\<span class="string">": [ \"</span>Google.com\<span class="string">", \"</span>Taobao.com\<span class="string">", \"</span>Waibo.wang\<span class="string">" ]&#125;"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    public boolean isValid(String s) &#123;</span><br><span class="line">        Stack&lt;Character&gt; characters = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            char c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">'&#123;'</span> || c == <span class="string">'['</span> || c == <span class="string">'('</span>) &#123;</span><br><span class="line">                characters.push(c);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(characters.isEmpty())&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Character peek = characters.pop();</span><br><span class="line">                switch (c) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">'&#125;'</span>:</span><br><span class="line">                        <span class="keyword">if</span> (!peek.equals(<span class="string">'&#123;'</span>)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        continue;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">']'</span>:</span><br><span class="line">                        <span class="keyword">if</span> (!peek.equals(<span class="string">'['</span>)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        continue;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">')'</span>:</span><br><span class="line">                        <span class="keyword">if</span> (!peek.equals(<span class="string">'('</span>)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        continue;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> characters.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    /*public boolean isValid(String s) &#123;</span><br><span class="line">        Stack&lt;Character&gt; characters = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            char c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">'&#123;'</span> || c == <span class="string">'['</span> || c == <span class="string">'('</span>) &#123;</span><br><span class="line">                characters.push(c);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(characters.isEmpty())&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Character toChar = characters.pop();</span><br><span class="line">                <span class="keyword">if</span>(c == <span class="string">')'</span> &amp;&amp; toChar != <span class="string">'('</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(c == <span class="string">'&#125;'</span> &amp;&amp; toChar != <span class="string">'&#123;'</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(c == <span class="string">']'</span> &amp;&amp; toChar != <span class="string">'['</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> characters.isEmpty();</span><br><span class="line">    &#125;*/</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想实现更多字符串关于括号的匹配，如 JSON 等等，可以根据栈的特点来实现</p><hr><p><strong>代码例子 GIT 地址：</strong><a href="https://github.com/tuoluofusijiyang/designPattern.git" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/tuoluofusijiyang/designPattern.git</a></p><p><strong>项目简介：</strong>这个项目是我做测试，学习的主要项目，目前里面包含了：</p><ul><li><p>一些设计模式的 demo（抽象工程模式，适配器模式，外观模式，命令模式，装饰者模式等等）</p></li><li><p>即将学习的数据结构 demo，数组，栈，后续还会持续更新数据结构，可能会有队列，链表，递归，红黑树，线段树等等一系列，如果感兴趣，欢迎留言。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构-队列</title>
      <link href="/2019/datastructure003/"/>
      <url>/2019/datastructure003/</url>
      
        <content type="html"><![CDATA[<blockquote><p>数据结构 - 队列</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>队列（queue）在计算机科学中，是一种先进先出的线性表。<br>它只允许在表的前端进行删除操作，而在表的后端进行插入操作。进行插入操作的端称为队尾，进行删除操作的端称为队头。队列中没有元素时，称为空队列。</p><a id="more"></a><h3 id="基于自定义数组实现的队列"><a href="#基于自定义数组实现的队列" class="headerlink" title="基于自定义数组实现的队列"></a>基于自定义数组实现的队列</h3><p>新建 queue 接口，用来规范所有 queue 子类</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.queue;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: test</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description:</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: 2019-05-03 16:44</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">LoopQueue</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Queue</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    private E[] data;</span><br><span class="line">    <span class="comment">//指向队列的第一个元素，初始指向0</span></span><br><span class="line">    private <span class="built_in">int</span> front;</span><br><span class="line">    <span class="comment">//指向队列的最后一个元素的后一个位置，初始指向0</span></span><br><span class="line">    private <span class="built_in">int</span> tail;</span><br><span class="line">    private <span class="built_in">int</span> size;</span><br><span class="line">    public LoopQueue(<span class="built_in">int</span> capacity)&#123;</span><br><span class="line">        data = (E[]) <span class="keyword">new</span> <span class="built_in">Object</span>[capacity+<span class="number">1</span>];</span><br><span class="line">        front=<span class="number">0</span>;</span><br><span class="line">        tail=<span class="number">0</span>;</span><br><span class="line">        size=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public LoopQueue()&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>因为容量放的时候多了个1，所以get容量的时候，需要减1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    public <span class="built_in">int</span> getCapacity()&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.if((tail + 1) % data.length == front) 如果tail + 1 超过了data.length的大小，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>代表当前tail指向已经超出了容量的大小，因为是循环式，所以需要tail去循环头元素中查看值是否有被占用，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>如果 == front 代表循环头没有，就需要扩容了。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.举例： 元素容量为8，tail目前指向7 front 指向2</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *          </span>if((7 + 1) % 8 == 2 )  if(0 == 2) 这里是false，因为front指向了2，所以代表 第0,1位是没有值的</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *          </span>所以这个值需要在在第0位放(空间利用)</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.data[tail] = param  tail当前指向的地方需要赋值，然后tail自增 循环体 的1，size+1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param param</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="keyword">void</span> enqueue(E param) &#123;</span><br><span class="line">        <span class="keyword">if</span>((tail + <span class="number">1</span>) % data.length == front)&#123;</span><br><span class="line">            resize(getCapacity() * <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        data[tail] = param ;</span><br><span class="line">        tail = (tail + <span class="number">1</span>) % data.length;</span><br><span class="line">        size ++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>扩充队列的容量</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.front代表了当前元素初始位置的指向</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.newData的第i位元素，应该等于 i + front % data.length 的值</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.举例：元素容量20，i 等于 0 ，front 等于 2，结果： newData[0] = data[(0 + 2) %  20]</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *         </span>= data[2]   意思就是，newData的第一位元素，应该等于data有值的第一位元素</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *         </span>% data.length 的原因主要是为了防止数组越界错误</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>4.新数组赋值完成需要将 front 重新指向0，因为新数组的front指针是从0开始的。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>tail最后要指向等于size大小的值，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param newCapacity</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    private <span class="keyword">void</span> resize(<span class="built_in">int</span> newCapacity) &#123;</span><br><span class="line">        E[] newData = (E[]) <span class="keyword">new</span> <span class="built_in">Object</span>[newCapacity + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">            newData[i] = data[(i + front ) % data.length];</span><br><span class="line">        &#125;</span><br><span class="line">        data=newData;</span><br><span class="line">        front = <span class="number">0</span> ;</span><br><span class="line">        tail = size;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.如果队列为空抛出异常</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.用ret变量来接受当前队列头的值</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.接收成功之后将，队列头元素置空</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>4.front指针指向下一个元素</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>5.size大小-1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>6.如果size大小占据了容量的1/4和size为容量的1/2且不等于0的时候，对容量进行缩减，缩减为原来容量的1/2</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>7.返回ret变量</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public E dequeue() &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"dequeue is fail ,because queue is empty"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E ret = data[front];</span><br><span class="line">        data[front] = <span class="keyword">null</span>;</span><br><span class="line">        front = (front + <span class="number">1</span>) % data.length;</span><br><span class="line">        size -- ;</span><br><span class="line">        <span class="keyword">if</span>(size == getCapacity() / <span class="number">4</span> &amp;&amp; getCapacity() / <span class="number">2</span> != <span class="number">0</span> )&#123;</span><br><span class="line">            resize(getCapacity() / <span class="number">2</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public E getFront() &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"queue is empty"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data[front];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">int</span> getSize() &#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>当front和tail的值相等时，队列为空，初始两个指向的是同一个值（只有初始的时候，指向的是同一个地方）</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public boolean isEmpty() &#123;</span><br><span class="line">        <span class="keyword">return</span> front == tail;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.元素从 front位置开始循环遍历，i的值不能等于tail，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>也就是到tail的前一位，i = i + 1 且%data.length，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>因为i有可能从循环头重新开始</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.( i + 1 ) % data.length != tail  如果当前i + 1 % data.length</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>不等于tail表示不到最后一个元素，就拼接，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">String</span> toString()&#123;</span><br><span class="line">        <span class="built_in">StringBuffer</span> sb = <span class="keyword">new</span> <span class="built_in">StringBuffer</span>();</span><br><span class="line">        sb.append(<span class="built_in">String</span>.format(<span class="string">"Array: size = %d , capacity = %d\n"</span>, size, getCapacity()));</span><br><span class="line">        sb.append(<span class="string">"front ["</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = front; i != tail ; i = (i + <span class="number">1</span>) % data.length) &#123;</span><br><span class="line">            sb.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span> (( i + <span class="number">1</span> ) % data.length != tail) &#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"] tail"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.queue;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"> </span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: test</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description:</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: 2019-05-03 16:44</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">LoopQueue</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Queue</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"> </span><br><span class="line">    private E[] data;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//指向队列的第一个元素，初始指向0</span></span><br><span class="line">    private <span class="built_in">int</span> front;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//指向队列的最后一个元素的后一个位置，初始指向0</span></span><br><span class="line">    private <span class="built_in">int</span> tail;</span><br><span class="line"> </span><br><span class="line">    private <span class="built_in">int</span> size;</span><br><span class="line"> </span><br><span class="line">    public LoopQueue(<span class="built_in">int</span> capacity)&#123;</span><br><span class="line">        data = (E[]) <span class="keyword">new</span> <span class="built_in">Object</span>[capacity+<span class="number">1</span>];</span><br><span class="line">        front=<span class="number">0</span>;</span><br><span class="line">        tail=<span class="number">0</span>;</span><br><span class="line">        size=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public LoopQueue()&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>因为容量放的时候多了个1，所以get容量的时候，需要减1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    public <span class="built_in">int</span> getCapacity()&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.if((tail + 1) % data.length == front) 如果tail + 1 超过了data.length的大小，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>代表当前tail指向已经超出了容量的大小，因为是循环式，所以需要tail去循环头元素中查看值是否有被占用，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>如果 == front 代表循环头没有，就需要扩容了。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.举例： 元素容量为8，tail目前指向7 front 指向2</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *          </span>if((7 + 1) % 8 == 2 )  if(0 == 2) 这里是false，因为front指向了2，所以代表 第0,1位是没有值的</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *          </span>所以这个值需要在在第0位放(空间利用)</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.data[tail] = param  tail当前指向的地方需要赋值，然后tail自增 循环体 的1，size+1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param param</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="keyword">void</span> enqueue(E param) &#123;</span><br><span class="line">        <span class="keyword">if</span>((tail + <span class="number">1</span>) % data.length == front)&#123;</span><br><span class="line">            resize(getCapacity() * <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        data[tail] = param ;</span><br><span class="line">        tail = (tail + <span class="number">1</span>) % data.length;</span><br><span class="line">        size ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>扩充队列的容量</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.front代表了当前元素初始位置的指向</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.newData的第i位元素，应该等于 i + front % data.length 的值</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.举例：元素容量20，i 等于 0 ，front 等于 2，结果： newData[0] = data[(0 + 2) %  20]</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *         </span>= data[2]   意思就是，newData的第一位元素，应该等于data有值的第一位元素</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *         </span>% data.length 的原因主要是为了防止数组越界错误</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>4.新数组赋值完成需要将 front 重新指向0，因为新数组的front指针是从0开始的。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>tail最后要指向等于size大小的值，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param newCapacity</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    private <span class="keyword">void</span> resize(<span class="built_in">int</span> newCapacity) &#123;</span><br><span class="line">        E[] newData = (E[]) <span class="keyword">new</span> <span class="built_in">Object</span>[newCapacity + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">            newData[i] = data[(i + front ) % data.length];</span><br><span class="line">        &#125;</span><br><span class="line">        data=newData;</span><br><span class="line">        front = <span class="number">0</span> ;</span><br><span class="line">        tail = size;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.如果队列为空抛出异常</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.用ret变量来接受当前队列头的值</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.接收成功之后将，队列头元素置空</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>4.front指针指向下一个元素</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>5.size大小-1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>6.如果size大小占据了容量的1/4和size为容量的1/2且不等于0的时候，对容量进行缩减，缩减为原来容量的1/2</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>7.返回ret变量</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public E dequeue() &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"dequeue is fail ,because queue is empty"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E ret = data[front];</span><br><span class="line">        data[front] = <span class="keyword">null</span>;</span><br><span class="line">        front = (front + <span class="number">1</span>) % data.length;</span><br><span class="line">        size -- ;</span><br><span class="line">        <span class="keyword">if</span>(size == getCapacity() / <span class="number">4</span> &amp;&amp; getCapacity() / <span class="number">2</span> != <span class="number">0</span> )&#123;</span><br><span class="line">            resize(getCapacity() / <span class="number">2</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public E getFront() &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"queue is empty"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data[front];</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">int</span> getSize() &#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>当front和tail的值相等时，队列为空，初始两个指向的是同一个值（只有初始的时候，指向的是同一个地方）</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public boolean isEmpty() &#123;</span><br><span class="line">        <span class="keyword">return</span> front == tail;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.元素从 front位置开始循环遍历，i的值不能等于tail，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>也就是到tail的前一位，i = i + 1 且%data.length，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>因为i有可能从循环头重新开始</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.( i + 1 ) % data.length != tail  如果当前i + 1 % data.length</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>不等于tail表示不到最后一个元素，就拼接，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">String</span> toString()&#123;</span><br><span class="line">        <span class="built_in">StringBuffer</span> sb = <span class="keyword">new</span> <span class="built_in">StringBuffer</span>();</span><br><span class="line">        sb.append(<span class="built_in">String</span>.format(<span class="string">"Array: size = %d , capacity = %d\n"</span>, size, getCapacity()));</span><br><span class="line">        sb.append(<span class="string">"front ["</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = front; i != tail ; i = (i + <span class="number">1</span>) % data.length) &#123;</span><br><span class="line">            sb.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span> (( i + <span class="number">1</span> ) % data.length != tail) &#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"] tail"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建 ArrayQueue 实现类</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.<span class="built_in">queue</span>;</span><br><span class="line"><span class="keyword">import</span> com.datastructure.<span class="built_in">array</span>.Array;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-03 18:19</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueue</span>&lt;E&gt; <span class="title">implements</span> <span class="title">Queue</span>&lt;E&gt;&#123;</span></span><br><span class="line">    Array&lt;E&gt; <span class="built_in">array</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        <span class="built_in">array</span>=<span class="keyword">new</span> Array&lt;E&gt;(capacity);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">array</span>=<span class="keyword">new</span> Array&lt;E&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(E param)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">array</span>.addLast(param);</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">dequeue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.removeFirst();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getFront</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getFirst();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getSize();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="string">"front: "</span>);</span><br><span class="line">        sb.append(<span class="string">"["</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">array</span>.getSize();i++)&#123;</span><br><span class="line">            sb.append(<span class="built_in">array</span>.<span class="built_in">get</span>(i));</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="built_in">array</span>.getSize()<span class="number">-1</span>)&#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"]  tail"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.<span class="built_in">queue</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.datastructure.<span class="built_in">array</span>.Array;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-03 18:19</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayQueue</span>&lt;E&gt; <span class="title">implements</span> <span class="title">Queue</span>&lt;E&gt;&#123;</span></span><br><span class="line"> </span><br><span class="line">    Array&lt;E&gt; <span class="built_in">array</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        <span class="built_in">array</span>=<span class="keyword">new</span> Array&lt;E&gt;(capacity);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">array</span>=<span class="keyword">new</span> Array&lt;E&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(E param)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">array</span>.addLast(param);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">dequeue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.removeFirst();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getFront</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getFirst();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.getSize();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">array</span>.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="string">"front: "</span>);</span><br><span class="line">        sb.append(<span class="string">"["</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">array</span>.getSize();i++)&#123;</span><br><span class="line">            sb.append(<span class="built_in">array</span>.<span class="built_in">get</span>(i));</span><br><span class="line">            <span class="keyword">if</span>(i!=<span class="built_in">array</span>.getSize()<span class="number">-1</span>)&#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"]  tail"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.queue;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-03 18:26</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">QueueTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        ArrayQueue&lt;Integer&gt; <span class="built_in">int</span>egerArrayQueue = new ArrayQueue&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArrayQueue.enqueue(i);</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayQueue);</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">int</span>egerArrayQueue.dequeue();</span><br><span class="line">                System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayQueue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.queue;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-03 18:26</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">QueueTest</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        ArrayQueue&lt;Integer&gt; <span class="built_in">int</span>egerArrayQueue = new ArrayQueue&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArrayQueue.enqueue(i);</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayQueue);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">int</span>egerArrayQueue.dequeue();</span><br><span class="line">                System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayQueue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">front: [<span class="number">0</span>]  tail</span><br><span class="line">front: [<span class="number">0</span>, <span class="number">1</span>]  tail</span><br><span class="line">front: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]  tail</span><br><span class="line">front: [<span class="number">1</span>, <span class="number">2</span>]  tail</span><br><span class="line">front: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]  tail</span><br><span class="line">front: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]  tail</span><br><span class="line">front: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]  tail</span><br><span class="line">front: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]  tail</span><br><span class="line">front: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]  tail</span><br><span class="line">front: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]  tail</span><br><span class="line">front: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]  tail</span><br><span class="line">front: [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]  tail</span><br><span class="line">front: [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]  tail</span><br><span class="line">front: [<span class="number">0</span>]  tail</span><br><span class="line">front: [<span class="number">0</span>, <span class="number">1</span>]  tail</span><br><span class="line">front: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]  tail</span><br><span class="line">front: [<span class="number">1</span>, <span class="number">2</span>]  tail</span><br><span class="line">front: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]  tail</span><br><span class="line">front: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]  tail</span><br><span class="line">front: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]  tail</span><br><span class="line">front: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]  tail</span><br><span class="line">front: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]  tail</span><br><span class="line">front: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]  tail</span><br><span class="line">front: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]  tail</span><br><span class="line">front: [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]  tail</span><br><span class="line">front: [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]  tail</span><br></pre></td></tr></table></figure><p>可以看到测试结果是正确的，也符合队列结构的数据存取，但是因为是基于自定义数组来实现的，所以会调用数组方法的 removeFirst 方法，删除第一个元素的同时，会重新将后面所有元素前移，索引前移，均摊时间复杂度为 O(n)。</p><h3 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h3><p>循环队列中有两个新词，两个指针</p><ul><li><p>front 指向队列的第一个元素，初始指向 0</p></li><li><p>tail 指向队列的最后一个元素的后一个位置，初始指向 0</p></li></ul><p>什么是循环队列</p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/jJhTywx21PVHeqkJYW43M6ggbKgbxN8ouo2vibKr4w6ODiaaEBKukns0eufpyhYmGcvNxvC9y3CY7oBLn0OBM4pA/640?wx_fmt=gif" alt></p><p>建立一个 loopqueue 实现 queue 接口</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.queue;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: test</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description:</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: 2019-05-03 16:44</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">LoopQueue</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Queue</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line">    private E[] data;</span><br><span class="line">    <span class="comment">//指向队列的第一个元素，初始指向0</span></span><br><span class="line">    private <span class="built_in">int</span> front;</span><br><span class="line">    <span class="comment">//指向队列的最后一个元素的后一个位置，初始指向0</span></span><br><span class="line">    private <span class="built_in">int</span> tail;</span><br><span class="line">    private <span class="built_in">int</span> size;</span><br><span class="line">    public LoopQueue(<span class="built_in">int</span> capacity)&#123;</span><br><span class="line">        data = (E[]) <span class="keyword">new</span> <span class="built_in">Object</span>[capacity+<span class="number">1</span>];</span><br><span class="line">        front=<span class="number">0</span>;</span><br><span class="line">        tail=<span class="number">0</span>;</span><br><span class="line">        size=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public LoopQueue()&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>因为容量放的时候多了个1，所以get容量的时候，需要减1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    public <span class="built_in">int</span> getCapacity()&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.if((tail + 1) % data.length == front) 如果tail + 1 超过了data.length的大小，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>代表当前tail指向已经超出了容量的大小，因为是循环式，所以需要tail去循环头元素中查看值是否有被占用，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>如果 == front 代表循环头没有，就需要扩容了。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.举例： 元素容量为8，tail目前指向7 front 指向2</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *          </span>if((7 + 1) % 8 == 2 )  if(0 == 2) 这里是false，因为front指向了2，所以代表 第0,1位是没有值的</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *          </span>所以这个值需要在在第0位放(空间利用)</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.data[tail] = param  tail当前指向的地方需要赋值，然后tail自增 循环体 的1，size+1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param param</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="keyword">void</span> enqueue(E param) &#123;</span><br><span class="line">        <span class="keyword">if</span>((tail + <span class="number">1</span>) % data.length == front)&#123;</span><br><span class="line">            resize(getCapacity() * <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        data[tail] = param ;</span><br><span class="line">        tail = (tail + <span class="number">1</span>) % data.length;</span><br><span class="line">        size ++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>扩充队列的容量</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.front代表了当前元素初始位置的指向</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.newData的第i位元素，应该等于 i + front % data.length 的值</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.举例：元素容量20，i 等于 0 ，front 等于 2，结果： newData[0] = data[(0 + 2) %  20]</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *         </span>= data[2]   意思就是，newData的第一位元素，应该等于data有值的第一位元素</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *         </span>% data.length 的原因主要是为了防止数组越界错误</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>4.新数组赋值完成需要将 front 重新指向0，因为新数组的front指针是从0开始的。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>tail最后要指向等于size大小的值，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param newCapacity</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    private <span class="keyword">void</span> resize(<span class="built_in">int</span> newCapacity) &#123;</span><br><span class="line">        E[] newData = (E[]) <span class="keyword">new</span> <span class="built_in">Object</span>[newCapacity + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">            newData[i] = data[(i + front ) % data.length];</span><br><span class="line">        &#125;</span><br><span class="line">        data=newData;</span><br><span class="line">        front = <span class="number">0</span> ;</span><br><span class="line">        tail = size;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.如果队列为空抛出异常</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.用ret变量来接受当前队列头的值</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.接收成功之后将，队列头元素置空</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>4.front指针指向下一个元素</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>5.size大小-1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>6.如果size大小占据了容量的1/4和size为容量的1/2且不等于0的时候，对容量进行缩减，缩减为原来容量的1/2</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>7.返回ret变量</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public E dequeue() &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"dequeue is fail ,because queue is empty"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E ret = data[front];</span><br><span class="line">        data[front] = <span class="keyword">null</span>;</span><br><span class="line">        front = (front + <span class="number">1</span>) % data.length;</span><br><span class="line">        size -- ;</span><br><span class="line">        <span class="keyword">if</span>(size == getCapacity() / <span class="number">4</span> &amp;&amp; getCapacity() / <span class="number">2</span> != <span class="number">0</span> )&#123;</span><br><span class="line">            resize(getCapacity() / <span class="number">2</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public E getFront() &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"queue is empty"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data[front];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">int</span> getSize() &#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>当front和tail的值相等时，队列为空，初始两个指向的是同一个值（只有初始的时候，指向的是同一个地方）</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public boolean isEmpty() &#123;</span><br><span class="line">        <span class="keyword">return</span> front == tail;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.元素从 front位置开始循环遍历，i的值不能等于tail，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>也就是到tail的前一位，i = i + 1 且%data.length，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>因为i有可能从循环头重新开始</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.( i + 1 ) % data.length != tail  如果当前i + 1 % data.length</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>不等于tail表示不到最后一个元素，就拼接，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">String</span> toString()&#123;</span><br><span class="line">        <span class="built_in">StringBuffer</span> sb = <span class="keyword">new</span> <span class="built_in">StringBuffer</span>();</span><br><span class="line">        sb.append(<span class="built_in">String</span>.format(<span class="string">"Array: size = %d , capacity = %d\n"</span>, size, getCapacity()));</span><br><span class="line">        sb.append(<span class="string">"front ["</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = front; i != tail ; i = (i + <span class="number">1</span>) % data.length) &#123;</span><br><span class="line">            sb.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span> (( i + <span class="number">1</span> ) % data.length != tail) &#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"] tail"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.queue;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"> </span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@program: test</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@description:</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@author: Mr.Yang</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@create: 2019-05-03 16:44</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> **/</span></span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">LoopQueue</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Queue</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"> </span><br><span class="line">    private E[] data;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//指向队列的第一个元素，初始指向0</span></span><br><span class="line">    private <span class="built_in">int</span> front;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//指向队列的最后一个元素的后一个位置，初始指向0</span></span><br><span class="line">    private <span class="built_in">int</span> tail;</span><br><span class="line"> </span><br><span class="line">    private <span class="built_in">int</span> size;</span><br><span class="line"> </span><br><span class="line">    public LoopQueue(<span class="built_in">int</span> capacity)&#123;</span><br><span class="line">        data = (E[]) <span class="keyword">new</span> <span class="built_in">Object</span>[capacity+<span class="number">1</span>];</span><br><span class="line">        front=<span class="number">0</span>;</span><br><span class="line">        tail=<span class="number">0</span>;</span><br><span class="line">        size=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public LoopQueue()&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>因为容量放的时候多了个1，所以get容量的时候，需要减1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    public <span class="built_in">int</span> getCapacity()&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.if((tail + 1) % data.length == front) 如果tail + 1 超过了data.length的大小，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>代表当前tail指向已经超出了容量的大小，因为是循环式，所以需要tail去循环头元素中查看值是否有被占用，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>如果 == front 代表循环头没有，就需要扩容了。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.举例： 元素容量为8，tail目前指向7 front 指向2</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *          </span>if((7 + 1) % 8 == 2 )  if(0 == 2) 这里是false，因为front指向了2，所以代表 第0,1位是没有值的</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *          </span>所以这个值需要在在第0位放(空间利用)</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.data[tail] = param  tail当前指向的地方需要赋值，然后tail自增 循环体 的1，size+1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param param</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="keyword">void</span> enqueue(E param) &#123;</span><br><span class="line">        <span class="keyword">if</span>((tail + <span class="number">1</span>) % data.length == front)&#123;</span><br><span class="line">            resize(getCapacity() * <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        data[tail] = param ;</span><br><span class="line">        tail = (tail + <span class="number">1</span>) % data.length;</span><br><span class="line">        size ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>扩充队列的容量</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.front代表了当前元素初始位置的指向</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.newData的第i位元素，应该等于 i + front % data.length 的值</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.举例：元素容量20，i 等于 0 ，front 等于 2，结果： newData[0] = data[(0 + 2) %  20]</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *         </span>= data[2]   意思就是，newData的第一位元素，应该等于data有值的第一位元素</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *         </span>% data.length 的原因主要是为了防止数组越界错误</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>4.新数组赋值完成需要将 front 重新指向0，因为新数组的front指针是从0开始的。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>tail最后要指向等于size大小的值，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param newCapacity</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    private <span class="keyword">void</span> resize(<span class="built_in">int</span> newCapacity) &#123;</span><br><span class="line">        E[] newData = (E[]) <span class="keyword">new</span> <span class="built_in">Object</span>[newCapacity + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">            newData[i] = data[(i + front ) % data.length];</span><br><span class="line">        &#125;</span><br><span class="line">        data=newData;</span><br><span class="line">        front = <span class="number">0</span> ;</span><br><span class="line">        tail = size;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.如果队列为空抛出异常</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.用ret变量来接受当前队列头的值</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.接收成功之后将，队列头元素置空</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>4.front指针指向下一个元素</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>5.size大小-1</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>6.如果size大小占据了容量的1/4和size为容量的1/2且不等于0的时候，对容量进行缩减，缩减为原来容量的1/2</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>7.返回ret变量</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public E dequeue() &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"dequeue is fail ,because queue is empty"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E ret = data[front];</span><br><span class="line">        data[front] = <span class="keyword">null</span>;</span><br><span class="line">        front = (front + <span class="number">1</span>) % data.length;</span><br><span class="line">        size -- ;</span><br><span class="line">        <span class="keyword">if</span>(size == getCapacity() / <span class="number">4</span> &amp;&amp; getCapacity() / <span class="number">2</span> != <span class="number">0</span> )&#123;</span><br><span class="line">            resize(getCapacity() / <span class="number">2</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public E getFront() &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"queue is empty"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data[front];</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">int</span> getSize() &#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>当front和tail的值相等时，队列为空，初始两个指向的是同一个值（只有初始的时候，指向的是同一个地方）</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public boolean isEmpty() &#123;</span><br><span class="line">        <span class="keyword">return</span> front == tail;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.元素从 front位置开始循环遍历，i的值不能等于tail，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>也就是到tail的前一位，i = i + 1 且%data.length，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>因为i有可能从循环头重新开始</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.( i + 1 ) % data.length != tail  如果当前i + 1 % data.length</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     *   </span>不等于tail表示不到最后一个元素，就拼接，</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@return</span></span></span><br><span class="line"><span class="comment"><span class="markdown">     */</span></span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="built_in">String</span> toString()&#123;</span><br><span class="line">        <span class="built_in">StringBuffer</span> sb = <span class="keyword">new</span> <span class="built_in">StringBuffer</span>();</span><br><span class="line">        sb.append(<span class="built_in">String</span>.format(<span class="string">"Array: size = %d , capacity = %d\n"</span>, size, getCapacity()));</span><br><span class="line">        sb.append(<span class="string">"front ["</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = front; i != tail ; i = (i + <span class="number">1</span>) % data.length) &#123;</span><br><span class="line">            sb.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span> (( i + <span class="number">1</span> ) % data.length != tail) &#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"] tail"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.queue;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-03 18:26</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">QueueTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        LoopQueue&lt;Integer&gt; <span class="built_in">int</span>egerArrayQueue = new LoopQueue&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArrayQueue.enqueue(i);</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayQueue);</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">int</span>egerArrayQueue.dequeue();</span><br><span class="line">                System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayQueue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.queue;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-03 18:26</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">QueueTest</span> &#123;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        LoopQueue&lt;Integer&gt; <span class="built_in">int</span>egerArrayQueue = new LoopQueue&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArrayQueue.enqueue(i);</span><br><span class="line">            System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayQueue);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">int</span>egerArrayQueue.dequeue();</span><br><span class="line">                System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArrayQueue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Array: size = <span class="number">1</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">0</span>] tail</span><br><span class="line">Array: size = <span class="number">2</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">0</span>, <span class="number">1</span>] tail</span><br><span class="line">Array: size = <span class="number">3</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>] tail</span><br><span class="line">Array: size = <span class="number">2</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">1</span>, <span class="number">2</span>] tail</span><br><span class="line">Array: size = <span class="number">3</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] tail</span><br><span class="line">Array: size = <span class="number">4</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>] tail</span><br><span class="line">Array: size = <span class="number">5</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>] tail</span><br><span class="line">Array: size = <span class="number">4</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>] tail</span><br><span class="line">Array: size = <span class="number">5</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>] tail</span><br><span class="line">Array: size = <span class="number">6</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>] tail</span><br><span class="line">Array: size = <span class="number">7</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>] tail</span><br><span class="line">Array: size = <span class="number">6</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>] tail</span><br><span class="line">Array: size = <span class="number">7</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] tail</span><br><span class="line">Array: size = <span class="number">1</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">0</span>] tail</span><br><span class="line">Array: size = <span class="number">2</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">0</span>, <span class="number">1</span>] tail</span><br><span class="line">Array: size = <span class="number">3</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>] tail</span><br><span class="line">Array: size = <span class="number">2</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">1</span>, <span class="number">2</span>] tail</span><br><span class="line">Array: size = <span class="number">3</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] tail</span><br><span class="line">Array: size = <span class="number">4</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>] tail</span><br><span class="line">Array: size = <span class="number">5</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>] tail</span><br><span class="line">Array: size = <span class="number">4</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>] tail</span><br><span class="line">Array: size = <span class="number">5</span> , capacity = <span class="number">5</span></span><br><span class="line">front [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>] tail</span><br><span class="line">Array: size = <span class="number">6</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>] tail</span><br><span class="line">Array: size = <span class="number">7</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>] tail</span><br><span class="line">Array: size = <span class="number">6</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>] tail</span><br><span class="line">Array: size = <span class="number">7</span> , capacity = <span class="number">10</span></span><br><span class="line">front [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] tail</span><br></pre></td></tr></table></figure><p>打印结果跟自定义数组的结果是一样的，但是因为引用了指针这个概念，删除的时候索引不会重排，均摊时间复杂度为 O(1)</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetCode No.1</title>
      <link href="/2019/leetcode001/"/>
      <url>/2019/leetcode001/</url>
      
        <content type="html"><![CDATA[<blockquote><p>leetCode 第一题</p></blockquote><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。<br>你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>给定 nums = [2, 7, 11, 15], target = 9<br>因为 nums[0] + nums[1] = 2 + 7 = 9<br>所以返回 [0, 1]</p><a id="more"></a><h3 id="普通解决思路"><a href="#普通解决思路" class="headerlink" title="普通解决思路"></a>普通解决思路</h3><p>将数组变量两次，相加判断是否等于传过来的值，如果等于，返回下标<br>自己写的代码，如果有错误请指出，谢谢</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">package com.leetcode.firstquestion.one;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 两数之和 给定一个整数数组 nums 和一个目标值 target，</span></span><br><span class="line"><span class="comment"> *                       请你在该数组中找出和为目标值的那</span></span><br><span class="line"><span class="comment"> *                       两个 整数，并返回他们的数组下标。</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-08 09:20</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span>[] twoSum(<span class="built_in">int</span>[] nums, <span class="built_in">int</span> target) &#123;</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s = new <span class="built_in">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">int</span> indexOne=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> indexTwo=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">bool</span>ean flag=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> x=<span class="number">0</span>;x&lt;nums.length;x++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> y=x+<span class="number">1</span>;y&lt;nums.length;y++)&#123;</span><br><span class="line">                <span class="keyword">if</span>((nums[x]+nums[y])==target)&#123;</span><br><span class="line">                    indexOne=x;</span><br><span class="line">                    indexTwo=y;</span><br><span class="line">                    flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span>s[<span class="number">0</span>]=indexOne;</span><br><span class="line">        <span class="built_in">int</span>s[<span class="number">1</span>]=indexTwo;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">        Solution solution = new Solution();</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s1 = solution.twoSum(<span class="built_in">int</span>s, <span class="number">9</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(Arrays.toString(<span class="built_in">int</span>s1));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.leetcode.firstquestion.one;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 两数之和 给定一个整数数组 nums 和一个目标值 target，</span></span><br><span class="line"><span class="comment"> *                       请你在该数组中找出和为目标值的那</span></span><br><span class="line"><span class="comment"> *                       两个 整数，并返回他们的数组下标。</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-08 09:20</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span>[] twoSum(<span class="built_in">int</span>[] nums, <span class="built_in">int</span> target) &#123;</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s = new <span class="built_in">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">int</span> indexOne=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> indexTwo=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">bool</span>ean flag=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> x=<span class="number">0</span>;x&lt;nums.length;x++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> y=x+<span class="number">1</span>;y&lt;nums.length;y++)&#123;</span><br><span class="line">                <span class="keyword">if</span>((nums[x]+nums[y])==target)&#123;</span><br><span class="line">                    indexOne=x;</span><br><span class="line">                    indexTwo=y;</span><br><span class="line">                    flag=<span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span>s[<span class="number">0</span>]=indexOne;</span><br><span class="line">        <span class="built_in">int</span>s[<span class="number">1</span>]=indexTwo;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>s;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">        Solution solution = new Solution();</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s1 = solution.twoSum(<span class="built_in">int</span>s, <span class="number">9</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(Arrays.toString(<span class="built_in">int</span>s1));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="网上流传思路，使用-HashMap-来处理"><a href="#网上流传思路，使用-HashMap-来处理" class="headerlink" title="网上流传思路，使用 HashMap 来处理"></a>网上流传思路，使用 HashMap 来处理</h3><p>将数组的遍历值当作 key（为了存取好处理，所以将数组的遍历值当作 key），索引当作 value 来存储。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">package com.leetcode.firstquestion.two;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 两数之和 给定一个整数数组 nums 和一个目标值 target，</span></span><br><span class="line"><span class="comment"> *                       请你在该数组中找出和为目标值的那</span></span><br><span class="line"><span class="comment"> *                       两个 整数，并返回他们的数组下标。</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-08 09:20</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span>[] twoSum(<span class="built_in">int</span>[] nums, <span class="built_in">int</span> target) &#123;</span><br><span class="line">        HashMap&lt;Object, Integer&gt; argsMap = new HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="built_in">int</span> value = nums[i];</span><br><span class="line">            <span class="keyword">if</span>(argsMap.containsKey(target - value))&#123;</span><br><span class="line">                <span class="keyword">return</span> new <span class="built_in">int</span>[]&#123;i, argsMap.<span class="keyword">get</span>(target - value)&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            argsMap.put(value,i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">        Solution solution = new Solution();</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s1 = solution.twoSum(<span class="built_in">int</span>s, <span class="number">9</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(Arrays.toString(<span class="built_in">int</span>s1));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.leetcode.firstquestion.two;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 两数之和 给定一个整数数组 nums 和一个目标值 target，</span></span><br><span class="line"><span class="comment"> *                       请你在该数组中找出和为目标值的那</span></span><br><span class="line"><span class="comment"> *                       两个 整数，并返回他们的数组下标。</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-08 09:20</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span>[] twoSum(<span class="built_in">int</span>[] nums, <span class="built_in">int</span> target) &#123;</span><br><span class="line">        HashMap&lt;Object, Integer&gt; argsMap = new HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="built_in">int</span> value = nums[i];</span><br><span class="line">            <span class="keyword">if</span>(argsMap.containsKey(target - value))&#123;</span><br><span class="line">                <span class="keyword">return</span> new <span class="built_in">int</span>[]&#123;i, argsMap.<span class="keyword">get</span>(target - value)&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            argsMap.put(value,i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">        Solution solution = new Solution();</span><br><span class="line">        <span class="built_in">int</span>[] <span class="built_in">int</span>s1 = solution.twoSum(<span class="built_in">int</span>s, <span class="number">9</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(Arrays.toString(<span class="built_in">int</span>s1));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>相比较自己写的那个确实要好得多，自己那个需要遍历两次，简单时间复杂度 O（n2）</li><li>网上的方法，简单时间复杂度 O(n)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> JAVA </tag>
            
            <tag> leetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构-数组</title>
      <link href="/2019/datastructure001/"/>
      <url>/2019/datastructure001/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 数据结构 - 数组</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ul><li><p>数据结构中最基本的一个结构就是<strong>线性结构</strong>，而线性结构又分为连续存储结构和离散存储结构。所谓的<strong>连续存储结构</strong>其实就是数组。</p></li><li><p><strong>优点：</strong>插入块如果知道坐标可以快速去地存取</p></li><li><p><strong>缺点：</strong>查找慢, 删除慢, 大小固定</p></li></ul><a id="more"></a><p>二次封装数组的增删改查</p><p>基类的定义</p><ul><li><p>定义一个<strong>工具类</strong>名称 - Array</p></li><li><p>接受的参数包括<strong>基本类型和自定义类型</strong>（用泛型来接受，基本类型用包装类）</p></li><li><p><strong>自定义属性两个</strong>：size 用来表示数组的大小，data 用来表示一个准确的集合</p></li><li><p><strong>概念区分</strong>：size 表示数组的大小，capacity 表示数组容量的大小</p></li><li><p><strong>构造函数</strong>：有参构造，接受一个 int 值，用来初始化数组容量；无参构造：给容量一个默认值</p></li><li><p><strong>toString() 方法</strong>，输出数组的大小和数组容量的大小，以及数组中的值</p></li><li><p><strong>getSize() 方法</strong>，调用方通过方法来获取数组的大小</p></li><li><p><strong>getCapacity() 方法</strong>，调用方通过方法来获取数组容量的大小</p></li><li><p><strong><em>isEmpty() 方法</em></strong>，调用方通过方法来判断数组是否为空 (指的是数组中是否有值，没值就为空)</p></li></ul><p>基类的代码</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 自定义数组封装工具类</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 15:36</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array</span>&lt;E&gt; &#123;</span></span><br><span class="line">    <span class="keyword">private</span> Integer <span class="built_in">size</span>;</span><br><span class="line">    <span class="keyword">private</span> E[] data;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有参构造函数</span></span><br><span class="line"><span class="comment">     * @param capacity  封装data的容量值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">(Integer capacity)</span></span>&#123;</span><br><span class="line">        data= (E[]) <span class="keyword">new</span> Object[capacity];</span><br><span class="line">        <span class="built_in">size</span>=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无参构造函数，设置默认容量为10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数组中的元素个数</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">size</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数组的容量</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断数组是否为空</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">size</span>==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="keyword">String</span>.format(<span class="string">"Array: size = %d , capacity = %d\n"</span>,<span class="built_in">size</span>,data.length));</span><br><span class="line">        sb.append(<span class="string">"["</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;<span class="built_in">size</span>;i++)&#123;</span><br><span class="line">            sb.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span>(i !=<span class="built_in">size</span><span class="number">-1</span>)&#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"]"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description: 自定义数组封装工具类</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 15:36</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array</span>&lt;E&gt; &#123;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Integer <span class="built_in">size</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> E[] data;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有参构造函数</span></span><br><span class="line"><span class="comment">     * @param capacity  封装data的容量值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">(Integer capacity)</span></span>&#123;</span><br><span class="line">        data= (E[]) <span class="keyword">new</span> Object[capacity];</span><br><span class="line">        <span class="built_in">size</span>=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无参构造函数，设置默认容量为10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数组中的元素个数</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">size</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取数组的容量</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断数组是否为空</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">size</span>==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">String</span> <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(<span class="keyword">String</span>.format(<span class="string">"Array: size = %d , capacity = %d\n"</span>,<span class="built_in">size</span>,data.length));</span><br><span class="line">        sb.append(<span class="string">"["</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i&lt;<span class="built_in">size</span>;i++)&#123;</span><br><span class="line">            sb.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span>(i !=<span class="built_in">size</span><span class="number">-1</span>)&#123;</span><br><span class="line">                sb.append(<span class="string">", "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sb.append(<span class="string">"]"</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>增</p><p>添加的方法</p><ul><li><p><strong>add() 方法</strong>，两个参数，添加元素的索引位置，和元素的值</p></li><li><p><strong>addFirst() 方法</strong>，在所有元素的最前面添加</p></li><li><p><strong>addLast() 方法</strong>，在所有元素的最后面添加</p></li></ul><p>添加的代码 (增)</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在索引为index的位置，插入param</span></span><br><span class="line"><span class="comment">     * 1.假如在索引为2的位置插入元素</span></span><br><span class="line"><span class="comment">     * 2.需要将原来索引为2及其以后的位置向后移动一整位</span></span><br><span class="line"><span class="comment">     * 3.移动完成之后，在索引为2的位置插入指定的值</span></span><br><span class="line"><span class="comment">     * 4.因为数组中多了一个值，所以size需要+1</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param index 元素的索引</span></span><br><span class="line"><span class="comment">     * @param param 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E param)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt; <span class="built_in">size</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"添加失败，索引的值不能小于0，并且索引的值不能大于数组的大小"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">size</span> == data.length) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"添加失败，数组的大小已经等于了数组容量的大小"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">size</span> - <span class="number">1</span>; i &gt;= index; i--) &#123;</span><br><span class="line">            data[i + <span class="number">1</span>] = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        data[index] = param;</span><br><span class="line">        <span class="built_in">size</span>++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在所有元素之前添加值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E param)</span> </span>&#123;</span><br><span class="line">        add(<span class="number">0</span>, param);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在所有元素之后添加值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E param)</span> </span>&#123;</span><br><span class="line">        add(<span class="built_in">size</span>, param);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在索引为index的位置，插入param</span></span><br><span class="line"><span class="comment">     * 1.假如在索引为2的位置插入元素</span></span><br><span class="line"><span class="comment">     * 2.需要将原来索引为2及其以后的位置向后移动一整位</span></span><br><span class="line"><span class="comment">     * 3.移动完成之后，在索引为2的位置插入指定的值</span></span><br><span class="line"><span class="comment">     * 4.因为数组中多了一个值，所以size需要+1</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param index 元素的索引</span></span><br><span class="line"><span class="comment">     * @param param 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E param)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt; <span class="built_in">size</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"添加失败，索引的值不能小于0，并且索引的值不能大于数组的大小"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">size</span> == data.length) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"添加失败，数组的大小已经等于了数组容量的大小"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">size</span> - <span class="number">1</span>; i &gt;= index; i--) &#123;</span><br><span class="line">            data[i + <span class="number">1</span>] = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        data[index] = param;</span><br><span class="line">        <span class="built_in">size</span>++;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在所有元素之前添加值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E param)</span> </span>&#123;</span><br><span class="line">        add(<span class="number">0</span>, param);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在所有元素之后添加值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E param)</span> </span>&#123;</span><br><span class="line">        add(<span class="built_in">size</span>, param);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">ArrayTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Array&lt;Integer&gt; <span class="built_in">int</span>egerArray = new Array&lt;Integer&gt;(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span> ; i ++)&#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------索引为3的地方添加元素-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.add(<span class="number">3</span>,<span class="number">666</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------所有元素的最后面添加值-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.addLast(<span class="number">10000</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------所有元素的最前面添加值-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.addFirst(<span class="number">-1</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">ArrayTest</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Array&lt;Integer&gt; <span class="built_in">int</span>egerArray = new Array&lt;Integer&gt;(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span> ; i ++)&#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------索引为3的地方添加元素-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.add(<span class="number">3</span>,<span class="number">666</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------所有元素的最后面添加值-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.addLast(<span class="number">10000</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------所有元素的最前面添加值-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.addFirst(<span class="number">-1</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">--------------------索引为<span class="number">3</span>的地方添加元素-----------------------</span><br><span class="line">Array: size = <span class="number">11</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">666</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">--------------------所有元素的最后面添加值-----------------------</span><br><span class="line">Array: size = <span class="number">12</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">666</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10000</span>]</span><br><span class="line">--------------------所有元素的最前面添加值-----------------------</span><br><span class="line">Array: size = <span class="number">13</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">666</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10000</span>]</span><br><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">--------------------索引为<span class="number">3</span>的地方添加元素-----------------------</span><br><span class="line">Array: size = <span class="number">11</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">666</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">--------------------所有元素的最后面添加值-----------------------</span><br><span class="line">Array: size = <span class="number">12</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">666</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10000</span>]</span><br><span class="line">--------------------所有元素的最前面添加值-----------------------</span><br><span class="line">Array: size = <span class="number">13</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">666</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10000</span>]</span><br></pre></td></tr></table></figure><p>改</p><p>添加的方法</p><ul><li><strong>set</strong>，两个参数，修改的元素的索引位置，和将要修改的值</li></ul><p>添加的代码 (改)</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改数组中元素的值</span></span><br><span class="line"><span class="comment">     * @param index</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> set(<span class="keyword">int</span> <span class="keyword">index</span>,E param)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">index</span>&lt;<span class="number">0</span> || <span class="keyword">index</span>&gt;= size)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"获取失败，索引值无效"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        data[<span class="keyword">index</span>]=param;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改数组中元素的值</span></span><br><span class="line"><span class="comment">     * @param index</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> set(<span class="keyword">int</span> <span class="keyword">index</span>,E param)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">index</span>&lt;<span class="number">0</span> || <span class="keyword">index</span>&gt;= size)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"获取失败，索引值无效"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        data[<span class="keyword">index</span>]=param;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">ArrayTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Array&lt;Integer&gt; <span class="built_in">int</span>egerArray = new Array&lt;Integer&gt;(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------索引为3的地方修改值为1010-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.<span class="keyword">set</span>(<span class="number">3</span>, <span class="number">1010</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">ArrayTest</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Array&lt;Integer&gt; <span class="built_in">int</span>egerArray = new Array&lt;Integer&gt;(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------索引为3的地方修改值为1010-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.<span class="keyword">set</span>(<span class="number">3</span>, <span class="number">1010</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">--------------------索引为<span class="number">3</span>的地方修改值为<span class="number">1010</span>-----------------------</span><br><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1010</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">--------------------索引为<span class="number">3</span>的地方修改值为<span class="number">1010</span>-----------------------</span><br><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">1010</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><p>查</p><p>添加的方法</p><ul><li><p><strong>get()</strong> 方法，一个参数，索引值，根据索引返回对应的值</p></li><li><p><strong>contains()</strong> 方法，一个参数，判断数组中是否包含某个元素</p></li><li><p><strong>find()</strong> 方法，一个参数，查找数组中是否包含 param，如果包含返回索引值，不包含返回 - 1</p></li><li><p><strong>findAll()</strong> 方法，一个参数，查找数组中是否包含 param，返回包含的索引数组</p></li></ul><p>添加的代码 (查)</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取索引位置的元素</span></span><br><span class="line"><span class="comment">    * @param index</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">public</span> E <span class="keyword">get</span>(<span class="type">Integer</span> <span class="keyword">index</span>)&#123;</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">index</span>&lt;<span class="number">0</span> || <span class="keyword">index</span>&gt;=size)&#123;</span><br><span class="line">           throw <span class="built_in">new</span> IllegalArgumentException("获取失败，索引的值不能小于0，并且索引的值不能大于等于数组的大小");</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> data[<span class="keyword">index</span>];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查看数组中是否包含某个元素</span></span><br><span class="line"><span class="comment">    * @param param</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">public</span> <span class="type">boolean</span> contains(E param)&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(data[i] == param)&#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查找数组中是否包含param，如果包含返回索引值，不包含返回-1</span></span><br><span class="line"><span class="comment">    * @param param</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">public</span> <span class="type">Integer</span> find(E param)&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(data[i] == param)&#123;</span><br><span class="line">               <span class="keyword">return</span> i;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查找数组中是否包含param</span></span><br><span class="line"><span class="comment">    * 1.创建一个int数组用来接收返回的索引值</span></span><br><span class="line"><span class="comment">    * 2.索引容量最大为数组的大小</span></span><br><span class="line"><span class="comment">    * 3.用临时变量来存储int数组的大小</span></span><br><span class="line"><span class="comment">    * 4.如果相等，给 int数组 为临时变量的元素赋值(相等的索引)，临时变量自增</span></span><br><span class="line"><span class="comment">    * @param param</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">public</span> <span class="type">Integer</span>[] findAll(E param)&#123;</span><br><span class="line">       <span class="type">int</span> intTemp=<span class="number">0</span>;</span><br><span class="line">       <span class="type">Integer</span>[] integers = <span class="built_in">new</span> <span class="type">Integer</span>[size];</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(data[i] == param)&#123;</span><br><span class="line">               integers[intTemp]=i;</span><br><span class="line">               intTemp++;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> integers;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取索引位置的元素</span></span><br><span class="line"><span class="comment">    * @param index</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">public</span> E <span class="keyword">get</span>(<span class="type">Integer</span> <span class="keyword">index</span>)&#123;</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">index</span>&lt;<span class="number">0</span> || <span class="keyword">index</span>&gt;=size)&#123;</span><br><span class="line">           throw <span class="built_in">new</span> IllegalArgumentException("获取失败，索引的值不能小于0，并且索引的值不能大于等于数组的大小");</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> data[<span class="keyword">index</span>];</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查看数组中是否包含某个元素</span></span><br><span class="line"><span class="comment">    * @param param</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">public</span> <span class="type">boolean</span> contains(E param)&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(data[i] == param)&#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查找数组中是否包含param，如果包含返回索引值，不包含返回-1</span></span><br><span class="line"><span class="comment">    * @param param</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">public</span> <span class="type">Integer</span> find(E param)&#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(data[i] == param)&#123;</span><br><span class="line">               <span class="keyword">return</span> i;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 查找数组中是否包含param</span></span><br><span class="line"><span class="comment">    * 1.创建一个int数组用来接收返回的索引值</span></span><br><span class="line"><span class="comment">    * 2.索引容量最大为数组的大小</span></span><br><span class="line"><span class="comment">    * 3.用临时变量来存储int数组的大小</span></span><br><span class="line"><span class="comment">    * 4.如果相等，给 int数组 为临时变量的元素赋值(相等的索引)，临时变量自增</span></span><br><span class="line"><span class="comment">    * @param param</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="built_in">public</span> <span class="type">Integer</span>[] findAll(E param)&#123;</span><br><span class="line">       <span class="type">int</span> intTemp=<span class="number">0</span>;</span><br><span class="line">       <span class="type">Integer</span>[] integers = <span class="built_in">new</span> <span class="type">Integer</span>[size];</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">           <span class="keyword">if</span>(data[i] == param)&#123;</span><br><span class="line">               integers[intTemp]=i;</span><br><span class="line">               intTemp++;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> integers;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.<span class="keyword">array</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> ArrayTest &#123;</span><br><span class="line">    <span class="built_in">public</span> static <span class="type">void</span> main(String[] args) &#123;</span><br><span class="line">        <span class="keyword">Array</span>&lt;<span class="type">Integer</span>&gt; integerArray = <span class="built_in">new</span> <span class="keyword">Array</span>&lt;<span class="type">Integer</span>&gt;(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            integerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        integerArray.addLast(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(integerArray);</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------得到索引为3的值-----------------------");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(integerArray.<span class="keyword">get</span>(<span class="number">3</span>));</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------判断是否包含有包含3的值-----------------------");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(integerArray.contains(<span class="number">3</span>));</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------查找是否包含参数，并返回索引-----------------------");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(integerArray.find(<span class="number">3</span>));</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------查找是否包含参数，并返回索引数组-----------------------");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(Arrays.asList(integerArray.findAll(<span class="number">3</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.<span class="keyword">array</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> ArrayTest &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">public</span> static <span class="type">void</span> main(String[] args) &#123;</span><br><span class="line">        <span class="keyword">Array</span>&lt;<span class="type">Integer</span>&gt; integerArray = <span class="built_in">new</span> <span class="keyword">Array</span>&lt;<span class="type">Integer</span>&gt;(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            integerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        integerArray.addLast(<span class="number">3</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(integerArray);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------得到索引为3的值-----------------------");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(integerArray.<span class="keyword">get</span>(<span class="number">3</span>));</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------判断是否包含有包含3的值-----------------------");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(integerArray.contains(<span class="number">3</span>));</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------查找是否包含参数，并返回索引-----------------------");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(integerArray.find(<span class="number">3</span>));</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("--------------------查找是否包含参数，并返回索引数组-----------------------");</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println(Arrays.asList(integerArray.findAll(<span class="number">3</span>)));</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Array:</span> <span class="string">size</span> <span class="string">=</span> <span class="number">11</span> <span class="string">,</span> <span class="string">capacity</span> <span class="string">=</span> <span class="number">20</span></span><br><span class="line"><span class="string">[0,</span> <span class="number">1</span><span class="string">,</span> <span class="number">2</span><span class="string">,</span> <span class="number">3</span><span class="string">,</span> <span class="number">4</span><span class="string">,</span> <span class="number">5</span><span class="string">,</span> <span class="number">6</span><span class="string">,</span> <span class="number">7</span><span class="string">,</span> <span class="number">8</span><span class="string">,</span> <span class="number">9</span><span class="string">,</span> <span class="number">3</span><span class="string">]</span></span><br><span class="line"><span class="string">--------------------得到索引为3的值-----------------------</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="string">--------------------判断是否包含有包含3的值-----------------------</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="string">--------------------查找是否包含参数，并返回索引-----------------------</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="string">--------------------查找是否包含参数，并返回索引数组-----------------------</span></span><br><span class="line"><span class="string">[3,</span> <span class="number">10</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">]</span></span><br><span class="line"><span class="attr">Array:</span> <span class="string">size</span> <span class="string">=</span> <span class="number">11</span> <span class="string">,</span> <span class="string">capacity</span> <span class="string">=</span> <span class="number">20</span></span><br><span class="line"><span class="string">[0,</span> <span class="number">1</span><span class="string">,</span> <span class="number">2</span><span class="string">,</span> <span class="number">3</span><span class="string">,</span> <span class="number">4</span><span class="string">,</span> <span class="number">5</span><span class="string">,</span> <span class="number">6</span><span class="string">,</span> <span class="number">7</span><span class="string">,</span> <span class="number">8</span><span class="string">,</span> <span class="number">9</span><span class="string">,</span> <span class="number">3</span><span class="string">]</span></span><br><span class="line"><span class="string">--------------------得到索引为3的值-----------------------</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="string">--------------------判断是否包含有包含3的值-----------------------</span></span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="string">--------------------查找是否包含参数，并返回索引-----------------------</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="string">--------------------查找是否包含参数，并返回索引数组-----------------------</span></span><br><span class="line"><span class="string">[3,</span> <span class="number">10</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">,</span> <span class="literal">null</span><span class="string">]</span></span><br></pre></td></tr></table></figure><p>删</p><p>添加的方法</p><ul><li><p><strong>remove()</strong> 方法，数组中删除 index 位置的元素，并且返回对应的值</p></li><li><p><strong>removeFirst()</strong> 方法，删除第一位元素</p></li><li><p><strong>removeLast()</strong> 方法，删除最后一位元素</p></li><li><p><strong>removeElement()</strong> 方法，查看某个值是否在数组中存在，如果存在, 删除并返回 true，如果不存在 返回 false、</p></li><li><p><strong>removeLast()</strong> 方法， 查找所有元素，获取所有相等的索引，遍历移除</p></li></ul><p>添加的代码 (删)</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数组中删除index位置的元素，并且返回对应的值</span></span><br><span class="line"><span class="comment">     * 1.假如删除索引为3的元素</span></span><br><span class="line"><span class="comment">     * 2.需要将索引大于3的元素向前移动一位</span></span><br><span class="line"><span class="comment">     * 3.因为数组中少了一个值，所以元素-1</span></span><br><span class="line"><span class="comment">     * 4.用临时变量来存储删除的值，用来返回</span></span><br><span class="line"><span class="comment">     * @param index</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index&lt;<span class="number">0</span> || index&gt;=<span class="built_in">size</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"删除失败，索引的值不能小于0，并且索引的值不能大于等于数组的大小"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E temp=data[index];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = index+<span class="number">1</span> ; i &lt; <span class="built_in">size</span> ; i++)&#123;</span><br><span class="line">            data[i<span class="number">-1</span>]=data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">size</span>--;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除第一位元素</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">remove</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除最后一位元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">remove</span>(<span class="built_in">size</span><span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查看某个值是否在数组中存在，如果存在,删除并返回true，如果不存在 返回false</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">removeElement</span><span class="params">(E param)</span></span>&#123;</span><br><span class="line">        Integer index = <span class="built_in">find</span>(param);</span><br><span class="line">        <span class="keyword">if</span>(index != <span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">remove</span>(index);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 遍历数组，移除元素</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeAllElement</span><span class="params">(E param)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(E d:data)&#123;</span><br><span class="line">            removeElement(param);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数组中删除index位置的元素，并且返回对应的值</span></span><br><span class="line"><span class="comment">     * 1.假如删除索引为3的元素</span></span><br><span class="line"><span class="comment">     * 2.需要将索引大于3的元素向前移动一位</span></span><br><span class="line"><span class="comment">     * 3.因为数组中少了一个值，所以元素-1</span></span><br><span class="line"><span class="comment">     * 4.用临时变量来存储删除的值，用来返回</span></span><br><span class="line"><span class="comment">     * @param index</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index&lt;<span class="number">0</span> || index&gt;=<span class="built_in">size</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"删除失败，索引的值不能小于0，并且索引的值不能大于等于数组的大小"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E temp=data[index];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = index+<span class="number">1</span> ; i &lt; <span class="built_in">size</span> ; i++)&#123;</span><br><span class="line">            data[i<span class="number">-1</span>]=data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">size</span>--;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除第一位元素</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">remove</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除最后一位元素</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">remove</span>(<span class="built_in">size</span><span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查看某个值是否在数组中存在，如果存在,删除并返回true，如果不存在 返回false</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">removeElement</span><span class="params">(E param)</span></span>&#123;</span><br><span class="line">        Integer index = <span class="built_in">find</span>(param);</span><br><span class="line">        <span class="keyword">if</span>(index != <span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">remove</span>(index);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 遍历数组，移除元素</span></span><br><span class="line"><span class="comment">     * @param param</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeAllElement</span><span class="params">(E param)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(E d:data)&#123;</span><br><span class="line">            removeElement(param);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">ArrayTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Array&lt;Integer&gt; <span class="built_in">int</span>egerArray = new Array&lt;Integer&gt;(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span>egerArray.addLast(<span class="number">3</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.addLast(<span class="number">4</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------数组中删除6位置的元素，并且返回对应的值-----------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray.remove(<span class="number">6</span>));</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------删除第一位元素-----------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray.removeFirst());</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------删除最后一位元素-----------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray.removeLast());</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------查看8是否在数组中存在，返回true和fals-----------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray.removeElement(<span class="number">8</span>));</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------查找所有元素，获取所有相等的索引，遍历移除-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.removeAllElement(<span class="number">3</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">ArrayTest</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Array&lt;Integer&gt; <span class="built_in">int</span>egerArray = new Array&lt;Integer&gt;(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span>egerArray.addLast(<span class="number">3</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.addLast(<span class="number">4</span>);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------数组中删除6位置的元素，并且返回对应的值-----------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray.remove(<span class="number">6</span>));</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------删除第一位元素-----------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray.removeFirst());</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------删除最后一位元素-----------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray.removeLast());</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------查看8是否在数组中存在，返回true和fals-----------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray.removeElement(<span class="number">8</span>));</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"--------------------查找所有元素，获取所有相等的索引，遍历移除-----------------------"</span>);</span><br><span class="line">        <span class="built_in">int</span>egerArray.removeAllElement(<span class="number">3</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Array: size = <span class="number">12</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">--------------------数组中删除<span class="number">6</span>位置的元素，并且返回对应的值-----------------------</span><br><span class="line"><span class="number">6</span></span><br><span class="line">Array: size = <span class="number">11</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">--------------------删除第一位元素-----------------------</span><br><span class="line"><span class="number">0</span></span><br><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">--------------------删除最后一位元素-----------------------</span><br><span class="line"><span class="number">4</span></span><br><span class="line">Array: size = <span class="number">9</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>]</span><br><span class="line">--------------------查看<span class="number">8</span>是否在数组中存在，如果存在,删除并返回<span class="literal">true</span>，如果不存在 返回<span class="literal">false</span>、-----------------------</span><br><span class="line"><span class="literal">true</span></span><br><span class="line">Array: size = <span class="number">8</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">3</span>]</span><br><span class="line">--------------------查找所有元素，获取所有相等的索引，遍历移除-----------------------</span><br><span class="line">Array: size = <span class="number">6</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br><span class="line">Array: size = <span class="number">12</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">--------------------数组中删除<span class="number">6</span>位置的元素，并且返回对应的值-----------------------</span><br><span class="line"><span class="number">6</span></span><br><span class="line">Array: size = <span class="number">11</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">--------------------删除第一位元素-----------------------</span><br><span class="line"><span class="number">0</span></span><br><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">--------------------删除最后一位元素-----------------------</span><br><span class="line"><span class="number">4</span></span><br><span class="line">Array: size = <span class="number">9</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">3</span>]</span><br><span class="line">--------------------查看<span class="number">8</span>是否在数组中存在，如果存在,删除并返回<span class="literal">true</span>，如果不存在 返回<span class="literal">false</span>、-----------------------</span><br><span class="line"><span class="literal">true</span></span><br><span class="line">Array: size = <span class="number">8</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">3</span>]</span><br><span class="line">--------------------查找所有元素，获取所有相等的索引，遍历移除-----------------------</span><br><span class="line">Array: size = <span class="number">6</span> , capacity = <span class="number">20</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><p>数组动态扩容</p><p>添加的方法</p><ul><li><p>resize() 方法，定义为私有，调用方不能通过方法来调用，去修改，否则容易造成 BUG</p></li><li><p>扩容倍数，如果用固定值，不好抉择。比如：100 容量，扩容 10 个，没有意义，很快就满了；100 容量，扩充 1000 个，太多了，容易早证浪费。最好选择倍数，都在同一个单位级别，这里代码选择的是 2 倍</p></li><li><p>添加的时候需要判断扩容，删除的时候需要删除容量，减少资源浪费</p></li><li><p>删除的时候，当元素减少到容量的 1/4 的时候开始缩，缩减到容量的 1/2</p></li><li><p>如果选择 1/2 的时候开始缩减，然后缩减到 1/2 会有一定的问题，例如：容量 10，现在容量满了，来了一个元素，需要扩容，按照设置的扩容机制，会扩容 2 倍，也就是 20 容量，如果删除了一个元素，元素达到了容量的 1/2，我们开始进行缩减，缩减 1/2，容量又变为 10。如果一直在这个临界值，那么元素会一直进行扩容缩减扩容缩减，性能影响太大。</p></li><li><p>如果选择 1/4 的时候开始缩减，然后缩减到 1/2，这样能够较好的避开以上问题，例如：容量 10，容量满了，来了一个元素，扩容容量到了 20，如果删除一个元素，还不到容量的 1/4，所以还不会进行缩减，如果真的到了容量的 1/4 的时候，我们选择缩减 1/2，容量也需要一定的元素，才会进行扩容，防止了容量一直扩容或者缩减</p></li></ul><p>添加的代码</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 扩容方法</span></span><br><span class="line"><span class="comment"> * 1.需要new一个object，new E[i]  java不支持这样写</span></span><br><span class="line"><span class="comment"> * 2.object是所有类的基类，用object然后强转一下就可以</span></span><br><span class="line"><span class="comment"> * 3.扩展之后，需要将原数组中的值，放入扩展之后的数组中</span></span><br><span class="line"><span class="comment"> * @param newCapacity</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> void resize(int <span class="keyword">new</span><span class="type">Capacity</span>) &#123;</span><br><span class="line">    E[] <span class="keyword">new</span><span class="type">Data</span> = (E[]) <span class="keyword">new</span> <span class="type">Object</span>[<span class="keyword">new</span><span class="type">Capacity</span>];</span><br><span class="line">    <span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;size;i++)&#123;</span><br><span class="line">        <span class="keyword">new</span><span class="type">Data</span>[i]=data[i];</span><br><span class="line">    &#125;</span><br><span class="line">    data=<span class="keyword">new</span><span class="type">Data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 扩容方法</span></span><br><span class="line"><span class="comment"> * 1.需要new一个object，new E[i]  java不支持这样写</span></span><br><span class="line"><span class="comment"> * 2.object是所有类的基类，用object然后强转一下就可以</span></span><br><span class="line"><span class="comment"> * 3.扩展之后，需要将原数组中的值，放入扩展之后的数组中</span></span><br><span class="line"><span class="comment"> * @param newCapacity</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> void resize(int <span class="keyword">new</span><span class="type">Capacity</span>) &#123;</span><br><span class="line">    E[] <span class="keyword">new</span><span class="type">Data</span> = (E[]) <span class="keyword">new</span> <span class="type">Object</span>[<span class="keyword">new</span><span class="type">Capacity</span>];</span><br><span class="line">    <span class="keyword">for</span>(int i=<span class="number">0</span>;i&lt;size;i++)&#123;</span><br><span class="line">        <span class="keyword">new</span><span class="type">Data</span>[i]=data[i];</span><br><span class="line">    &#125;</span><br><span class="line">    data=<span class="keyword">new</span><span class="type">Data</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改的代码</p><ul><li><strong>add() 和 remove()</strong></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在索引为index的位置，插入param</span></span><br><span class="line"><span class="comment">     * 1.假如在索引为2的位置插入元素</span></span><br><span class="line"><span class="comment">     * 2.需要将原来索引为2及其以后的位置向后移动一整位</span></span><br><span class="line"><span class="comment">     * 3.移动完成之后，在索引为2的位置插入指定的值</span></span><br><span class="line"><span class="comment">     * 4.因为数组中多了一个值，所以size需要+1</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param index 元素的索引</span></span><br><span class="line"><span class="comment">     * @param param 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> <span class="keyword">add</span>(<span class="type">int</span> <span class="keyword">index</span>, E param) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">index</span> &lt; <span class="number">0</span> || <span class="keyword">index</span> &gt; size) &#123;</span><br><span class="line">            throw <span class="built_in">new</span> IllegalArgumentException("添加失败，索引的值不能小于0，并且索引的值不能大于数组的大小");</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (size == data.length) &#123;</span><br><span class="line">            resize(<span class="number">2</span> * data.length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = size - <span class="number">1</span>; i &gt;= <span class="keyword">index</span>; i<span class="comment">--) &#123;</span></span><br><span class="line">            data[i + <span class="number">1</span>] = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        data[<span class="keyword">index</span>] = param;</span><br><span class="line">        size++;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数组中删除index位置的元素，并且返回对应的值</span></span><br><span class="line"><span class="comment">     * 1.假如删除索引为3的元素</span></span><br><span class="line"><span class="comment">     * 2.需要将索引大于3的元素向前移动一位</span></span><br><span class="line"><span class="comment">     * 3.因为数组中少了一个值，所以元素-1</span></span><br><span class="line"><span class="comment">     * 4.用临时变量来存储删除的值，用来返回</span></span><br><span class="line"><span class="comment">     * @param index</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> E remove(<span class="type">int</span> <span class="keyword">index</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">index</span>&lt;<span class="number">0</span> || <span class="keyword">index</span>&gt;=size)&#123;</span><br><span class="line">            throw <span class="built_in">new</span> IllegalArgumentException("删除失败，索引的值不能小于0，并且索引的值不能大于等于数组的大小");</span><br><span class="line">        &#125;</span><br><span class="line">        E <span class="keyword">temp</span>=data[<span class="keyword">index</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="keyword">index</span>+<span class="number">1</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">            data[i<span class="number">-1</span>]=data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        size<span class="comment">--;</span></span><br><span class="line">        <span class="keyword">if</span>(size == data.length / <span class="number">4</span> )&#123;</span><br><span class="line">            resize(data.length / <span class="number">2</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">temp</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在索引为index的位置，插入param</span></span><br><span class="line"><span class="comment">     * 1.假如在索引为2的位置插入元素</span></span><br><span class="line"><span class="comment">     * 2.需要将原来索引为2及其以后的位置向后移动一整位</span></span><br><span class="line"><span class="comment">     * 3.移动完成之后，在索引为2的位置插入指定的值</span></span><br><span class="line"><span class="comment">     * 4.因为数组中多了一个值，所以size需要+1</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param index 元素的索引</span></span><br><span class="line"><span class="comment">     * @param param 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> <span class="keyword">add</span>(<span class="type">int</span> <span class="keyword">index</span>, E param) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">index</span> &lt; <span class="number">0</span> || <span class="keyword">index</span> &gt; size) &#123;</span><br><span class="line">            throw <span class="built_in">new</span> IllegalArgumentException("添加失败，索引的值不能小于0，并且索引的值不能大于数组的大小");</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (size == data.length) &#123;</span><br><span class="line">            resize(<span class="number">2</span> * data.length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = size - <span class="number">1</span>; i &gt;= <span class="keyword">index</span>; i<span class="comment">--) &#123;</span></span><br><span class="line">            data[i + <span class="number">1</span>] = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        data[<span class="keyword">index</span>] = param;</span><br><span class="line">        size++;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从数组中删除index位置的元素，并且返回对应的值</span></span><br><span class="line"><span class="comment">     * 1.假如删除索引为3的元素</span></span><br><span class="line"><span class="comment">     * 2.需要将索引大于3的元素向前移动一位</span></span><br><span class="line"><span class="comment">     * 3.因为数组中少了一个值，所以元素-1</span></span><br><span class="line"><span class="comment">     * 4.用临时变量来存储删除的值，用来返回</span></span><br><span class="line"><span class="comment">     * @param index</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="built_in">public</span> E remove(<span class="type">int</span> <span class="keyword">index</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">index</span>&lt;<span class="number">0</span> || <span class="keyword">index</span>&gt;=size)&#123;</span><br><span class="line">            throw <span class="built_in">new</span> IllegalArgumentException("删除失败，索引的值不能小于0，并且索引的值不能大于等于数组的大小");</span><br><span class="line">        &#125;</span><br><span class="line">        E <span class="keyword">temp</span>=data[<span class="keyword">index</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="keyword">index</span>+<span class="number">1</span> ; i &lt; size ; i++)&#123;</span><br><span class="line">            data[i<span class="number">-1</span>]=data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        size<span class="comment">--;</span></span><br><span class="line">        <span class="keyword">if</span>(size == data.length / <span class="number">4</span> )&#123;</span><br><span class="line">            resize(data.length / <span class="number">2</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">temp</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">ArrayTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Array&lt;Integer&gt; <span class="built_in">int</span>egerArray = new Array&lt;Integer&gt;(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------将容量设置为10，添加10个元素，元素的容量 : %d -------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line">        <span class="built_in">int</span>egerArray.addLast(<span class="number">21</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------元素+1，元素的容量 : %d --------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line">        <span class="built_in">int</span>egerArray.removeLast();</span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------元素-1，元素的容量 : %d --------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line">        <span class="built_in">int</span>egerArray.removeLast();</span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------元素-1，元素的容量 : %d --------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> x=<span class="number">0</span>;x&lt;=<span class="number">5</span>;x++)&#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.removeLast();</span><br><span class="line">        &#125;</span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------元素-1/4，元素的容量 : %d --------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.datastructure.<span class="built_in">array</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @program: test</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @author: Mr.Yang</span></span><br><span class="line"><span class="comment"> * @create: 2019-05-01 16:46</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">ArrayTest</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static <span class="built_in">void</span> main(String[] args) &#123;</span><br><span class="line">        Array&lt;Integer&gt; <span class="built_in">int</span>egerArray = new Array&lt;Integer&gt;(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.addLast(i);</span><br><span class="line">        &#125;</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="built_in">int</span>egerArray);</span><br><span class="line"> </span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------将容量设置为10，添加10个元素，元素的容量 : %d -------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">int</span>egerArray.addLast(<span class="number">21</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------元素+1，元素的容量 : %d --------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="built_in">int</span>egerArray.removeLast();</span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------元素-1，元素的容量 : %d --------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">int</span>egerArray.removeLast();</span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------元素-1，元素的容量 : %d --------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> x=<span class="number">0</span>;x&lt;=<span class="number">5</span>;x++)&#123;</span><br><span class="line">            <span class="built_in">int</span>egerArray.removeLast();</span><br><span class="line">        &#125;</span><br><span class="line">        System.<span class="keyword">out</span>.printf(<span class="string">"--------------------元素-1/4，元素的容量 : %d --------------------\r\n"</span>,<span class="built_in">int</span>egerArray.getCapacity());</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">10</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">--------------------将容量设置为<span class="number">10</span>，添加<span class="number">10</span>个元素，元素的容量 : <span class="number">10</span> -------------------</span><br><span class="line">--------------------元素+<span class="number">1</span>，元素的容量 : <span class="number">20</span> --------------------</span><br><span class="line">--------------------元素<span class="number">-1</span>，元素的容量 : <span class="number">20</span> --------------------</span><br><span class="line">--------------------元素<span class="number">-1</span>，元素的容量 : <span class="number">20</span> --------------------</span><br><span class="line">--------------------元素<span class="number">-1</span>/<span class="number">4</span>，元素的容量 : <span class="number">10</span> --------------------</span><br><span class="line">Array: size = <span class="number">10</span> , capacity = <span class="number">10</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">--------------------将容量设置为<span class="number">10</span>，添加<span class="number">10</span>个元素，元素的容量 : <span class="number">10</span> -------------------</span><br><span class="line">--------------------元素+<span class="number">1</span>，元素的容量 : <span class="number">20</span> --------------------</span><br><span class="line">--------------------元素<span class="number">-1</span>，元素的容量 : <span class="number">20</span> --------------------</span><br><span class="line">--------------------元素<span class="number">-1</span>，元素的容量 : <span class="number">20</span> --------------------</span><br><span class="line">--------------------元素<span class="number">-1</span>/<span class="number">4</span>，元素的容量 : <span class="number">10</span> --------------------</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springBoot 自定义 banner 与 web 开发</title>
      <link href="/2019/springboot005/"/>
      <url>/2019/springboot005/</url>
      
        <content type="html"><![CDATA[<h3 id="SpringBootApplication"><a href="#SpringBootApplication" class="headerlink" title="@SpringBootApplication"></a>@SpringBootApplication</h3><p>该注解相关的几个方法</p><ul><li><p>exclude, 排除某些类添加至 spring 容器管理，参数为 class 对象</p></li><li><p>excludeName，排除某些类添加至 spring 容器管理，参数为 class path 字符串</p></li><li><p>scanBasePackages，将某些包下的类添加进入 spring 扫描文件，参数为 class path 字符串</p></li><li><p>scanBasePackageClasses, 将某些包下的类添加进入 spring 扫描文件，参数为 class 对象</p></li></ul><a id="more"></a><h3 id="springBoot-的-banner-图"><a href="#springBoot-的-banner-图" class="headerlink" title="springBoot 的 banner 图"></a>springBoot 的 banner 图</h3><p>不显示 banner</p><p>通过 springBootTestRun.setBannerMode(Banner.Mode.OFF);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.Initializer.MyApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.Banner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        springBootTestRun.setBannerMode(Banner.Mode.OFF);</span><br><span class="line">        ConfigurableApplicationContext run = springBootTestRun.run(args);</span><br><span class="line">        run.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.Initializer.MyApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.Banner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        springBootTestRun.setBannerMode(Banner.Mode.OFF);</span><br><span class="line">        ConfigurableApplicationContext run = springBootTestRun.run(args);</span><br><span class="line">        run.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义 banner</p><p>方式一</p><p>在 resource 目录下新建 banner.txt，txt 放入自定义内容</p><p>方式二</p><p>在 resource 目录下新建自定义名称. txt，在 application.properties 中添加 “spring.banner.location = 自定义名称. txt”</p><p>方式三</p><p>自定义 banner 也可以是图片，会自动解析为 ASCII 艺术字，名称为 banner.jpg/banner.png/banner.gif</p><p>方式四</p><p>自定义图片名称，通过在 application.properties 中添加 “spring.banner.image.location = 自定义名称. jpg”</p><p>在启动项目的时候，文字和图片可以共同显示，图片优先级大于文字</p><p>SpringBoot 自定义启动 Banner 在线生成工具</p><p><a href="https://www.bootschool.net/ascii" target="_blank" rel="external nofollow noopener noreferrer">https://www.bootschool.net/ascii</a></p><p>SpringBoot 艺术字</p><p><a href="https://www.bootschool.net/ascii-art" target="_blank" rel="external nofollow noopener noreferrer">https://www.bootschool.net/ascii-art</a></p><h3 id="web-开发"><a href="#web-开发" class="headerlink" title="web 开发"></a>web 开发</h3><p>测试访问</p><p>pom 文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yxj.spring<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springBootDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Inherit defaults from Spring Boot --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Add typical dependencies for a web application --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Package as an executable jar --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yxj.spring<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springBootDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Inherit defaults from Spring Boot --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Add typical dependencies for a web application --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Package as an executable jar --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>controller 方法</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring.controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.controller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: <span class="doctag">@RestController</span>表示当前controller方法的返回值可以直接用于返回值输出==<span class="doctag">@ResponseBody</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/27 23:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/27 23:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"my"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(<span class="meta-string">"testWeb"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String testWeb(HttpServletRequest request)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"测试"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(value = <span class="meta-string">"/pathParam/&#123;id&#125;"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String pathParam(<span class="meta">@PathVariable(value = <span class="meta-string">"id"</span>)</span> String id)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"测试, id = "</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.controller;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.controller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: <span class="doctag">@RestController</span>表示当前controller方法的返回值可以直接用于返回值输出==<span class="doctag">@ResponseBody</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/27 23:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/27 23:21</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"my"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(<span class="meta-string">"testWeb"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String testWeb(HttpServletRequest request)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"测试"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(value = <span class="meta-string">"/pathParam/&#123;id&#125;"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String pathParam(<span class="meta">@PathVariable(value = <span class="meta-string">"id"</span>)</span> String id)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"测试, id = "</span>+id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springBoot 启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.Initializer.MyApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.Banner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        ConfigurableApplicationContext run = springBootTestRun.run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.Initializer.MyApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.Banner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        ConfigurableApplicationContext run = springBootTestRun.run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试访问路径<br><a href="http://localhost:8080/my/testWeb" target="_blank" rel="external nofollow noopener noreferrer">http://localhost:8080/my/testWeb</a></p><p>指定端口</p><p>application.properties</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="number">80</span></span><br></pre></td></tr></table></figure><p>返回 jsp 页面</p><p>springBoot 默认不支持 jsp 组建，需要添加 maven 包<br>添加依赖包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.properties 指定前缀和后缀</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.mvc</span><span class="selector-class">.view</span>.prefix=/</span><br><span class="line">spring<span class="selector-class">.mvc</span><span class="selector-class">.view</span>.suffix=.jsp</span><br><span class="line">spring<span class="selector-class">.mvc</span><span class="selector-class">.view</span>.prefix=/</span><br><span class="line">spring<span class="selector-class">.mvc</span><span class="selector-class">.view</span>.suffix=.jsp</span><br></pre></td></tr></table></figure><p>prefix=/，这里的 / 指的是 webapp，为 jsp 根目录，idea 中可以设置 web 根目录</p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/11.jpg" alt></p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/2.jpg" alt></p><p>webapp 下新增 test.jsp</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">this is test jsp , get controller param is $</span><span class="template-variable">&#123;testParam&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">this is test jsp , get controller param is $</span><span class="template-variable">&#123;testParam&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>访问 jsp 的 controller 代码</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring.controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.controller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/28 0:00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/28 0:00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JspController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(value = <span class="meta-string">"/toTsetJsp/&#123;id&#125;"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView toTsetJsp(<span class="meta">@PathVariable</span> String id)&#123;</span><br><span class="line">        ModelAndView modelAndView = new ModelAndView(<span class="string">"/test"</span>);</span><br><span class="line">        modelAndView.addObject(<span class="string">"testParam"</span>,id);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.controller;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.controller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/28 0:00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/28 0:00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JspController</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(value = <span class="meta-string">"/toTsetJsp/&#123;id&#125;"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView toTsetJsp(<span class="meta">@PathVariable</span> String id)&#123;</span><br><span class="line">        ModelAndView modelAndView = new ModelAndView(<span class="string">"/test"</span>);</span><br><span class="line">        modelAndView.addObject(<span class="string">"testParam"</span>,id);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 freemarker</p><p>加入依赖，pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问 controller</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring.controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.controller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/28 20:47</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/28 20:47</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FreemarkerController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(value = <span class="meta-string">"/testFreeMarker/&#123;id&#125;"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView testFreeMarker(<span class="meta">@PathVariable(value = <span class="meta-string">"id"</span>)</span> String id)&#123;</span><br><span class="line">        ModelAndView mv = new ModelAndView();</span><br><span class="line">        mv.setViewName(<span class="string">"a"</span>);</span><br><span class="line">        mv.addObject(<span class="string">"userName"</span>,id);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.controller;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.controller</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/28 20:47</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/28 20:47</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FreemarkerController</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@GetMapping(value = <span class="meta-string">"/testFreeMarker/&#123;id&#125;"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView testFreeMarker(<span class="meta">@PathVariable(value = <span class="meta-string">"id"</span>)</span> String id)&#123;</span><br><span class="line">        ModelAndView mv = new ModelAndView();</span><br><span class="line">        mv.setViewName(<span class="string">"a"</span>);</span><br><span class="line">        mv.addObject(<span class="string">"userName"</span>,id);</span><br><span class="line">        <span class="keyword">return</span> mv;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 resource 下添加文件夹 templates，其中添加 a.ftl</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;<span class="keyword">this</span> <span class="keyword">is</span> test ftl, <span class="keyword">get</span> param <span class="keyword">is</span> $&#123;userName&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>访问链接<br><a href="http://localhost/testFreeMarker/123" target="_blank" rel="external nofollow noopener noreferrer">http://localhost/testFreeMarker/123</a><br>访问页面，数据渲染正常</p><p>默认目录为 classpath:/templates/<br>源码中有个默认值</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">package org.springframework.boot.autoconfigure.freemarker;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.<span class="keyword">template</span>.AbstractTemplateViewResolverProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line">@ConfigurationProperties(</span><br><span class="line">    prefix = <span class="string">"spring.freemarker"</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FreeMarkerProperties</span> <span class="title">extends</span> <span class="title">AbstractTemplateViewResolverProperties</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> final <span class="keyword">String</span> DEFAULT_TEMPLATE_LOADER_PATH = <span class="string">"classpath:/templates/"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> final <span class="keyword">String</span> DEFAULT_PREFIX = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> final <span class="keyword">String</span> DEFAULT_SUFFIX = <span class="string">".ftl"</span>;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; settings = <span class="keyword">new</span> HashMap();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span>[] templateLoaderPath = <span class="keyword">new</span> <span class="keyword">String</span>[]&#123;<span class="string">"classpath:/templates/"</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> preferFileSystemAccess = <span class="literal">true</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FreeMarkerProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        super(<span class="string">""</span>, <span class="string">".ftl"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; getSettings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.settings;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSettings</span><span class="params">(Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; settings)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.settings = settings;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span>[] getTemplateLoaderPath() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.templateLoaderPath;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPreferFileSystemAccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.preferFileSystemAccess;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPreferFileSystemAccess</span><span class="params">(<span class="keyword">boolean</span> preferFileSystemAccess)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.preferFileSystemAccess = preferFileSystemAccess;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTemplateLoaderPath</span><span class="params">(<span class="keyword">String</span>... templateLoaderPaths)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.templateLoaderPath = templateLoaderPaths;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"> </span><br><span class="line">package org.springframework.boot.autoconfigure.freemarker;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.<span class="keyword">template</span>.AbstractTemplateViewResolverProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"> </span><br><span class="line">@ConfigurationProperties(</span><br><span class="line">    prefix = <span class="string">"spring.freemarker"</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FreeMarkerProperties</span> <span class="title">extends</span> <span class="title">AbstractTemplateViewResolverProperties</span> &#123;</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> final <span class="keyword">String</span> DEFAULT_TEMPLATE_LOADER_PATH = <span class="string">"classpath:/templates/"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> final <span class="keyword">String</span> DEFAULT_PREFIX = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> final <span class="keyword">String</span> DEFAULT_SUFFIX = <span class="string">".ftl"</span>;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; settings = <span class="keyword">new</span> HashMap();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span>[] templateLoaderPath = <span class="keyword">new</span> <span class="keyword">String</span>[]&#123;<span class="string">"classpath:/templates/"</span>&#125;;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> preferFileSystemAccess = <span class="literal">true</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FreeMarkerProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        super(<span class="string">""</span>, <span class="string">".ftl"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; getSettings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.settings;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSettings</span><span class="params">(Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; settings)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.settings = settings;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span>[] getTemplateLoaderPath() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.templateLoaderPath;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPreferFileSystemAccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.preferFileSystemAccess;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPreferFileSystemAccess</span><span class="params">(<span class="keyword">boolean</span> preferFileSystemAccess)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.preferFileSystemAccess = preferFileSystemAccess;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTemplateLoaderPath</span><span class="params">(<span class="keyword">String</span>... templateLoaderPaths)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.templateLoaderPath = templateLoaderPaths;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过在 application.properties 中可以配置默认路径</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.freemarker.template-loader-path=<span class="keyword">classpath</span>:<span class="regexp">/templatesTest/</span></span><br></pre></td></tr></table></figure><p>切换 jetty 容器</p><p>springBoot 默认内置的是 tomcat 容器，切换 jetty 容器，需要配置<br>pom 文件 spring-boot-starter-web 排除 tomcat 的引用，注释掉 springBoot 支持 jsp，该依赖会导致切换 jetty 成功，但是使用的依然是 tomcat 容器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yxj.spring<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springBootDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Inherit defaults from Spring Boot --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Add typical dependencies for a web application --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--排除tomcat的引用--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使springBoot支持jsp--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使springBoot支持freemarker--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--添加jetty依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Package as an executable jar --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yxj.spring<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springBootDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Inherit defaults from Spring Boot --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Add typical dependencies for a web application --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--排除tomcat的引用--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">&lt;!--使springBoot支持jsp--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;dependency&gt;</span></span><br><span class="line"><span class="comment">            &lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">            &lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">&lt;!--使springBoot支持freemarker--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">&lt;!--添加jetty依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Package as an executable jar --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重新编译，查看日志，包含有 jetty 字样，表示容器切换成功</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JettyWebServer  : Jetty started <span class="keyword">on</span> port(s) <span class="number">80</span> (http/<span class="number">1.1</span>) <span class="keyword">with</span> context <span class="type">path</span> <span class="string">'/'</span></span><br></pre></td></tr></table></figure><p>关于 jetty 与 tomcat 区别与用途，可以查看博客 <a href="https://blog.csdn.net/u014209975/article/details/52598428" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/u014209975/article/details/52598428</a></p><p>静态资源读取</p><ol><li>在 webapp 下 - web 根目录，在文件下面新建 img，放入 test.png<br>可以通过 <a href="http://localhost/img/test.png" target="_blank" rel="external nofollow noopener noreferrer">http://localhost/img/test.png</a> 正常访问到  </li><li>在 resource 下的这几个文件，也是可以放静态文件的，默认访问路径也是 /</li></ol><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span>[] CLASSPATH_RESOURCE_LOCATIONS = &#123;</span><br><span class="line">            <span class="string">"classpath:/META-INF/resources/"</span>, <span class="string">"classpath:/resources/"</span>,</span><br><span class="line">            <span class="string">"classpath:/static/"</span>, <span class="string">"classpath:/public/"</span> &#125;;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span>[] CLASSPATH_RESOURCE_LOCATIONS = &#123;</span><br><span class="line">            <span class="string">"classpath:/META-INF/resources/"</span>, <span class="string">"classpath:/resources/"</span>,</span><br><span class="line">            <span class="string">"classpath:/static/"</span>, <span class="string">"classpath:/public/"</span> &#125;;</span><br></pre></td></tr></table></figure><p><img src="http://q2jt1v8qv.bkt.clouddn.com/3.jpg" alt></p><p>经过测试，以下两个链接可以访问到各个对应的静态图片</p><ul><li><p><a href="http://localhost/springBootDemo/img/test1.png" target="_blank" rel="external nofollow noopener noreferrer">http://localhost/springBootDemo/img/test1.png</a></p></li><li><p><a href="http://localhost/springBootDemo/img/test.png" target="_blank" rel="external nofollow noopener noreferrer">http://localhost/springBootDemo/img/test.png</a></p></li></ul><ol start="3"><li>可以通过在 application.properties 中添加参数来指定默认路径</li></ol><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#修改静态资源默认访问路径(修改之后，resource下的几个默认文件地址不会生效，webapp可以正常访问)</span><br><span class="line">spring.resources.<span class="keyword">static</span>-locations=<span class="keyword">classpath</span>:<span class="regexp">/html/</span></span><br><span class="line">#修改静态资源默认访问路径(修改之后，resource下的几个默认文件地址不会生效，webapp可以正常访问)</span><br><span class="line">spring.resources.<span class="keyword">static</span>-locations=<span class="keyword">classpath</span>:<span class="regexp">/html/</span></span><br></pre></td></tr></table></figure><p>springBoot 异常处理</p><p>springBoot 对异常做了特殊处理</p><p>springBoot 处理之后 - 404 页面</p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/4.jpg" alt></p><p>springBoot 处理之后 - 500 页面</p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/5.jpg" alt></p><p>排除 springBoot 对异常处理的方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.Initializer.MyApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.Banner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 排除springBoot对异常的默认处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span>(exclude = ErrorMvcAutoConfiguration<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        ConfigurableApplicationContext run = springBootTestRun.run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.Initializer.MyApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.Banner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 排除springBoot对异常的默认处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span>(exclude = ErrorMvcAutoConfiguration<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        ConfigurableApplicationContext run = springBootTestRun.run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springBoot 处理之前 - 500</p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/6.jpg" alt></p><p>springBoot 处理之前 - 404</p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/7.jpg" alt></p><p>自定义异常处理</p><ol><li>通过实现 ErrorPageRegistrar 接口的方式 (类似 web.xml 中配置的 errpage 标签的形式)</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring.myException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.ErrorPage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.ErrorPageRegistrar;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.ErrorPageRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.myException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/29 14:51</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/29 14:51</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommonErrorPageRegistrar</span> <span class="keyword">implements</span> <span class="title">ErrorPageRegistrar</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果相对某个异常做单独页面的跳转处理</span></span><br><span class="line"><span class="comment">     * ErrorPage(Class&lt;? extends Throwable&gt; exception, String path)</span></span><br><span class="line"><span class="comment">     * 可以添加一个Class对象，和跳转路径。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> registry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerErrorPages</span><span class="params">(ErrorPageRegistry registry)</span> </span>&#123;</span><br><span class="line">        ErrorPage ep404 = <span class="keyword">new</span> ErrorPage(HttpStatus.NOT_FOUND,<span class="string">"/html/404.html"</span>);</span><br><span class="line">        ErrorPage ep500 = <span class="keyword">new</span> ErrorPage(HttpStatus.INTERNAL_SERVER_ERROR,<span class="string">"/html/500.html"</span>);</span><br><span class="line">        registry.addErrorPages(ep404,ep500);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.myException;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.ErrorPage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.ErrorPageRegistrar;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.ErrorPageRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.myException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/29 14:51</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/29 14:51</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommonErrorPageRegistrar</span> <span class="keyword">implements</span> <span class="title">ErrorPageRegistrar</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果相对某个异常做单独页面的跳转处理</span></span><br><span class="line"><span class="comment">     * ErrorPage(Class&lt;? extends Throwable&gt; exception, String path)</span></span><br><span class="line"><span class="comment">     * 可以添加一个Class对象，和跳转路径。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> registry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerErrorPages</span><span class="params">(ErrorPageRegistry registry)</span> </span>&#123;</span><br><span class="line">        ErrorPage ep404 = <span class="keyword">new</span> ErrorPage(HttpStatus.NOT_FOUND,<span class="string">"/html/404.html"</span>);</span><br><span class="line">        ErrorPage ep500 = <span class="keyword">new</span> ErrorPage(HttpStatus.INTERNAL_SERVER_ERROR,<span class="string">"/html/500.html"</span>);</span><br><span class="line">        registry.addErrorPages(ep404,ep500);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义异常处理的页面 - 404</p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/8.jpg" alt></p><p>自定义异常处理的页面 - 500</p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/9.jpg" alt></p><ol start="2"><li>通过 @ExceptionHandler 注解（这个处理方式可以返回字符串或者 json，可以获取到具体的异常 message, 通常用作全局异常处理，也可以做细分）</li></ol><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring.myException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ResponseBody;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.myException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/29 15:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/29 15:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionAdvice</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String handleException(Exception e)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"检测到异常："</span>+e.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.myException;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ResponseBody;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.myException</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/29 15:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/29 15:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionAdvice</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@ExceptionHandler(Exception.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> String handleException(Exception e)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"检测到异常："</span>+e.getMessage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tomcat 配置</p><p>内置 tomcat 的 log access 相关配置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#缓冲输出，定期刷新</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.buffered</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#创建日志文件的目录。可以是相对于Tomcat基目录或绝对目录。</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.directory</span>=d:/springBootDemoLogs</span><br><span class="line"><span class="comment">#启用日志(true会生成日志文件到directory指定的路径，false不会生成)</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.enabled</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#生成的日志名称的日期格式</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.file-date-format</span>=.yyyy-MM-dd</span><br><span class="line"><span class="comment">#访问日志的格式模式 详细使用查看- https://www.cnblogs.com/chrischennx/p/6746214.html</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.pattern</span>=common</span><br><span class="line"><span class="comment">#日志文件名字前缀</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.prefix</span>=springBoot_demo_logs</span><br><span class="line"><span class="comment">#是否延迟在文件名中包含日期戳，直到旋转时间</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.rename-on-rotate</span>=<span class="literal">false</span></span><br><span class="line"><span class="comment">#设置请求的IP地址，主机名，协议和端口的请求属性</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.request-attributes-enabled</span>=<span class="literal">false</span></span><br><span class="line"><span class="comment">#是否启用访问日志轮换。</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.rotate</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#日志文件名称的后缀</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.suffix</span>=.log</span><br><span class="line"><span class="comment">#缓冲输出，定期刷新</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.buffered</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#创建日志文件的目录。可以是相对于Tomcat基目录或绝对目录。</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.directory</span>=d:/springBootDemoLogs</span><br><span class="line"><span class="comment">#启用日志(true会生成日志文件到directory指定的路径，false不会生成)</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.enabled</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#生成的日志名称的日期格式</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.file-date-format</span>=.yyyy-MM-dd</span><br><span class="line"><span class="comment">#访问日志的格式模式 详细使用查看- https://www.cnblogs.com/chrischennx/p/6746214.html</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.pattern</span>=common</span><br><span class="line"><span class="comment">#日志文件名字前缀</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.prefix</span>=springBoot_demo_logs</span><br><span class="line"><span class="comment">#是否延迟在文件名中包含日期戳，直到旋转时间</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.rename-on-rotate</span>=<span class="literal">false</span></span><br><span class="line"><span class="comment">#设置请求的IP地址，主机名，协议和端口的请求属性</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.request-attributes-enabled</span>=<span class="literal">false</span></span><br><span class="line"><span class="comment">#是否启用访问日志轮换。</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.rotate</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#日志文件名称的后缀</span></span><br><span class="line"><span class="attr">server.tomcat.accesslog.suffix</span>=.log</span><br></pre></td></tr></table></figure><p>tomcat 最大线程数和连接数设置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置tomcat的最大线程数</span></span><br><span class="line"><span class="attr">server.tomcat.max-threads</span>=<span class="number">1000</span></span><br><span class="line"><span class="comment">#设置tomcat的最大连接数</span></span><br><span class="line"><span class="attr">server.tomcat.max-connections</span>=<span class="number">20000</span></span><br><span class="line"><span class="comment">#设置tomcat的最大线程数</span></span><br><span class="line"><span class="attr">server.tomcat.max-threads</span>=<span class="number">1000</span></span><br><span class="line"><span class="comment">#设置tomcat的最大连接数</span></span><br><span class="line"><span class="attr">server.tomcat.max-connections</span>=<span class="number">20000</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 微服务 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot 项目初始化的开始和结束</title>
      <link href="/2019/springboot004/"/>
      <url>/2019/springboot004/</url>
      
        <content type="html"><![CDATA[<p><strong>ApplicationContextInitializer 接口</strong><br>用来初始化 Spring ConfigurableApplicationContext 应用上下文的回调接口，是在 ConfigurableApplicationContext.refresh() 之前调用。<br>该接口典型的应用场景是 web 应用中需要编程方式对应用上下文做初始化。比如，注册属性源 (property sources) 或者针对上下文的环境信息 environment 激活相应的 profile<br><strong>代码实现</strong><br>默认的 application.properties 文件 (默认指定为生产环境)</p><a id="more"></a><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test.name</span>=default</span><br><span class="line"><span class="attr">spring.profiles.active</span>=prd</span><br></pre></td></tr></table></figure><p>application-dev.properties 文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test.name</span>=dev</span><br></pre></td></tr></table></figure><p>application-prd.properties 文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test.name</span>=prd</span><br></pre></td></tr></table></figure><p>自定义 MyApplicationContextInitializer 实现 ApplicationContextInitializer 接口，重写 initialize 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring.Initializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.SpringBootTestRun;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.Initializer</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/25 22:39</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/25 22:39</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationContextInitializer</span> <span class="keyword">implements</span> <span class="title">ApplicationContextInitializer</span>&lt;<span class="title">ConfigurableApplicationContext</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.springBoot执行ApplicationContextInitializer refresh方法之前会先执行</span></span><br><span class="line"><span class="comment">     * 2.在方法中设置活动配置文件为dev(该结果可以从其他途径去获取，这里给定默认值dev)</span></span><br><span class="line"><span class="comment">     * 3.在启动类最后获取name，查看最终结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> applicationContext</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(ConfigurableApplicationContext applicationContext)</span> </span>&#123;</span><br><span class="line">        applicationContext.getEnvironment().setActiveProfiles(<span class="string">"dev"</span>);</span><br><span class="line">        System.out.println(<span class="string">"-------初始化---------"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springBoot 启动类</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">package com.yxj.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.Initializer.MyApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.<span class="keyword">factory</span>.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.<span class="built_in">List</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@ProjectName: springBootDemo</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@Package: com.yxj.spring</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@Description:</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@Author: 阿杰</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@CreateDate: 2019/1/18 20:18</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@UpdateUser: 暂无</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@UpdateDate: 2019/1/18 20:18</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@UpdateRemark: The modified content</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@Version: 1.0</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> */</span></span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;test.name&#125;</span>"</span>)</span><br><span class="line">    private <span class="built_in">String</span> testName;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>添加初始化类方式</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>1.springBootTestRun.addInitializers(new MyApplicationContextInitializer());</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>2.通过配置项来指定（context.initiallzer.classes=com.yxj.spring.Initializer.MyApplicationContextInitializer）</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>3.spring.factories机制</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>应用：</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>当外部程序装配这个模块的时候，就能通过该jar包META-INF/services/里的配置文件找到具体的实现类名，并装载实例化，完成模块的注入</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>在日常工作中，我们可能需要实现一些SDK或者Spring Boot Starter给被人使用，这个使用我们就可以使用Factories机制。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>Factories机制可以让SDK或者Starter的使用只需要很少或者不需要进行配置，只需要在服务中引入我们的jar包。</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>详细使用参考：http://blog.51cto.com/13836814/2134630</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>@param args</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>);</span></span><br><span class="line"><span class="class">        //<span class="title">springBootTestRun</span>.<span class="title">addInitializers</span>(<span class="title">new</span> <span class="title">MyApplicationContextInitializer</span>());</span></span><br><span class="line"><span class="class">        <span class="title">ConfigurableApplicationContext</span> <span class="title">run</span> = <span class="title">springBootTestRun</span>.<span class="title">run</span>(<span class="title">args</span>);</span></span><br><span class="line"><span class="class">        <span class="title">SpringBootTestRun</span> <span class="title">bean</span> = <span class="title">run</span>.<span class="title">getBean</span>(<span class="title">SpringBootTestRun</span>.<span class="title">class</span>);</span></span><br><span class="line"><span class="class">        <span class="title">System</span>.<span class="title">out</span>.<span class="title">println</span>("------------分割线------------");</span></span><br><span class="line"><span class="class">        <span class="title">System</span>.<span class="title">out</span>.<span class="title">println</span>(<span class="title">bean</span>.<span class="title">testName</span>);</span></span><br><span class="line"><span class="class">        <span class="title">run</span>.<span class="title">close</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">初始化</span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">分割线</span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">dev</span></span><br></pre></td></tr></table></figure><p><strong>CommandLineRunner 和 ApplicationRunner 接口</strong></p><p>CommandLineRunner、ApplicationRunner 接口是在容器启动成功后的最后一步回调。如果希望在项目启动完成之前，初始化一些操作，可以使用这两个接口。<br>实现</p><ul><li>实现 CommandLineRunner 或者 ApplicationRunner 接口</li><li>实现 run 方法</li><li>通过 @Component 或者其他方式添加到 spring 容器管理中</li><li>可以实现多个，通过 @Order(value = XXX) 的方式，可以实现排序</li></ul><p><strong>CommandLineRunner 接口</strong><br>第一个 CommandLineRunner</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.runner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.runner</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/25 23:10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/25 23:10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order</span>(value = <span class="number">4</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCommandLineRunner1</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"order value is 4   。MyCommandLineRunner1 run.  get args : "</span>+Arrays.asList(args));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二个 CommandLineRunner</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.runner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.runner</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/25 23:10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/25 23:10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order</span>(value = <span class="number">1</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCommandLineRunner2</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"order value is 1   。MyCommandLineRunner2 run.  get args : "</span>+Arrays.asList(args));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一个 ApplicationRunner</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.runner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.ApplicationArguments;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.ApplicationRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.runner</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/25 23:27</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/25 23:27</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order</span>(value = <span class="number">3</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationRunner1</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> &#123;</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> run(ApplicationArguments args) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">for</span>(String <span class="string">argsString :</span>args.getOptionNames())&#123;</span><br><span class="line">            System.out.println(<span class="string">"order value is 3   。MyApplicationRunner1 is ApplicationArguments key : ("</span>+argsString + <span class="string">")   ApplicationArguments value : ("</span>+args.getOptionValues(argsString)+<span class="string">")"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二个 ApplicationRunner</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.runner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.ApplicationArguments;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.ApplicationRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.runner</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/25 23:27</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/25 23:27</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Order</span>(value = <span class="number">2</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationRunner2</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> &#123;</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> run(ApplicationArguments args) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">for</span>(String <span class="string">argsString :</span>args.getOptionNames())&#123;</span><br><span class="line">            System.out.println(<span class="string">"order value is 2   。MyApplicationRunner2 is ApplicationArguments key : ("</span>+argsString + <span class="string">")   ApplicationArguments value : ("</span>+args.getOptionValues(argsString)+<span class="string">")"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springBoot 测试启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.Initializer.MyApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.CommandLineRunner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContextInitializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;test.name&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String testName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        ConfigurableApplicationContext run = springBootTestRun.run(<span class="string">"测试1"</span>,<span class="string">"测试2"</span>,<span class="string">"--key1=测试3"</span>,<span class="string">"--key2=测试4"</span>);</span><br><span class="line">        run.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">value</span> <span class="keyword">is</span> <span class="number">1</span>   。MyCommandLineRunner2 run.  <span class="keyword">get</span> args : [测试<span class="number">1</span>, 测试<span class="number">2</span>, <span class="comment">--key1=测试3, --key2=测试4]</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">value</span> <span class="keyword">is</span> <span class="number">2</span>   。MyApplicationRunner2 <span class="keyword">is</span> ApplicationArguments key : (key1)   ApplicationArguments <span class="keyword">value</span> : ([测试<span class="number">3</span>])</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">value</span> <span class="keyword">is</span> <span class="number">2</span>   。MyApplicationRunner2 <span class="keyword">is</span> ApplicationArguments key : (key2)   ApplicationArguments <span class="keyword">value</span> : ([测试<span class="number">4</span>])</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">value</span> <span class="keyword">is</span> <span class="number">3</span>   。MyApplicationRunner1 <span class="keyword">is</span> ApplicationArguments key : (key1)   ApplicationArguments <span class="keyword">value</span> : ([测试<span class="number">3</span>])</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">value</span> <span class="keyword">is</span> <span class="number">3</span>   。MyApplicationRunner1 <span class="keyword">is</span> ApplicationArguments key : (key2)   ApplicationArguments <span class="keyword">value</span> : ([测试<span class="number">4</span>])</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">value</span> <span class="keyword">is</span> <span class="number">4</span>   。MyCommandLineRunner1 run.  <span class="keyword">get</span> args : [测试<span class="number">1</span>, 测试<span class="number">2</span>, <span class="comment">--key1=测试3, --key2=测试4]</span></span><br></pre></td></tr></table></figure><p><strong>对比</strong></p><ul><li>两个都是在容器启动成功后的最后一步回调</li><li>CommandLineRunner 的参数是最原始的参数，没有做任何处理。ApplicationRunner 的参数是 ApplicationArguments，是对原始参数做了进一步的封装。</li><li>ApplicationRunner 只对–key=value 这种形式做解析，CommandLineRunner 可以获得传递的所有字符串</li></ul>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 微服务 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springBoot 事件监听和部分注解的运用</title>
      <link href="/2019/springboot003/"/>
      <url>/2019/springboot003/</url>
      
        <content type="html"><![CDATA[<h3 id="ConfigurationProperties-注解的使用"><a href="#ConfigurationProperties-注解的使用" class="headerlink" title="@ConfigurationProperties 注解的使用"></a>@ConfigurationProperties 注解的使用</h3><p>用处</p><ul><li>根据类型校验和管理 application 中的 bean</li></ul><a id="more"></a><p>举例使用</p><p>application.properties 的内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test.name</span>=default</span><br><span class="line"><span class="attr">test.age</span>=<span class="number">19</span></span><br><span class="line"><span class="attr">test.friends[0]</span>=Ben</span><br><span class="line"><span class="attr">test.friends[1]</span>=Alice</span><br><span class="line"><span class="attr">test.utils[0]</span>=DateUtils</span><br><span class="line"><span class="attr">test.utils[1]</span>=TimeUtils</span><br><span class="line"><span class="attr">test.name</span>=default</span><br><span class="line"><span class="attr">test.age</span>=<span class="number">19</span></span><br><span class="line"><span class="attr">test.friends[0]</span>=Ben</span><br><span class="line"><span class="attr">test.friends[1]</span>=Alice</span><br><span class="line"><span class="attr">test.utils[0]</span>=DateUtils</span><br><span class="line"><span class="attr">test.utils[1]</span>=TimeUtils</span><br></pre></td></tr></table></figure><p>新建 TestProperties 用来接收配置的内容</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">package com.yxj.spring.properties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @ProjectName: springBootDemo</span></span><br><span class="line"><span class="comment"> * @Package: com.yxj.spring.properties</span></span><br><span class="line"><span class="comment"> * @Description: @ConfigurationProperties(prefix="test")，该注解会自动，将配置文件前缀是test的各项，加载至该bean中</span></span><br><span class="line"><span class="comment"> * @Author: 阿杰</span></span><br><span class="line"><span class="comment"> * @CreateDate: 2019/1/23 20:00</span></span><br><span class="line"><span class="comment"> * @UpdateUser: 暂无</span></span><br><span class="line"><span class="comment"> * @UpdateDate: 2019/1/23 20:00</span></span><br><span class="line"><span class="comment"> * @UpdateRemark: The modified content</span></span><br><span class="line"><span class="comment"> * @Version: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@ConfigurationProperties(prefix="test")</span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> TestProperties &#123;</span><br><span class="line">    private String age;</span><br><span class="line">    private String <span class="type">name</span>;</span><br><span class="line">    private String[] friends;</span><br><span class="line">    private List&lt;String&gt; utils;</span><br><span class="line">    <span class="built_in">public</span> String[] getFriends() &#123;</span><br><span class="line">        <span class="keyword">return</span> friends;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> TestProperties setFriends(String[] friends) &#123;</span><br><span class="line">        this.friends = friends;</span><br><span class="line">        <span class="keyword">return</span> this;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> String getAge() &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> TestProperties setAge(String age) &#123;</span><br><span class="line">        this.age = age;</span><br><span class="line">        <span class="keyword">return</span> this;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> String getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> TestProperties setName(String <span class="type">name</span>) &#123;</span><br><span class="line">        this.name = <span class="type">name</span>;</span><br><span class="line">        <span class="keyword">return</span> this;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> List&lt;String&gt; getUtils() &#123;</span><br><span class="line">        <span class="keyword">return</span> utils;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">public</span> TestProperties setUtils(List&lt;String&gt; utils) &#123;</span><br><span class="line">        this.utils = utils;</span><br><span class="line">        <span class="keyword">return</span> this;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    <span class="built_in">public</span> String toString() &#123;</span><br><span class="line">        <span class="keyword">return</span> "TestProperties&#123;" +</span><br><span class="line">                "age='" + age + <span class="string">'\'' +</span></span><br><span class="line"><span class="string">                ",  + name + '</span>\<span class="string">''</span> +</span><br><span class="line">                ", friends=" + Arrays.toString(friends) +</span><br><span class="line">                ", utils=" + utils +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">package com.yxj.spring.properties;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.PropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @ProjectName: springBootDemo</span></span><br><span class="line"><span class="comment"> * @Package: com.yxj.spring.properties</span></span><br><span class="line"><span class="comment"> * @Description: @ConfigurationProperties(prefix="test")，该注解会自动，将配置文件前缀是test的各项，加载至该bean中</span></span><br><span class="line"><span class="comment"> * @Author: 阿杰</span></span><br><span class="line"><span class="comment"> * @CreateDate: 2019/1/23 20:00</span></span><br><span class="line"><span class="comment"> * @UpdateUser: 暂无</span></span><br><span class="line"><span class="comment"> * @UpdateDate: 2019/1/23 20:00</span></span><br><span class="line"><span class="comment"> * @UpdateRemark: The modified content</span></span><br><span class="line"><span class="comment"> * @Version: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@ConfigurationProperties(prefix="test")</span><br><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> TestProperties &#123;</span><br><span class="line">    private String age;</span><br><span class="line"> </span><br><span class="line">    private String <span class="type">name</span>;</span><br><span class="line"> </span><br><span class="line">    private String[] friends;</span><br><span class="line"> </span><br><span class="line">    private List&lt;String&gt; utils;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">public</span> String[] getFriends() &#123;</span><br><span class="line">        <span class="keyword">return</span> friends;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">public</span> TestProperties setFriends(String[] friends) &#123;</span><br><span class="line">        this.friends = friends;</span><br><span class="line">        <span class="keyword">return</span> this;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">public</span> String getAge() &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">public</span> TestProperties setAge(String age) &#123;</span><br><span class="line">        this.age = age;</span><br><span class="line">        <span class="keyword">return</span> this;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">public</span> String getName() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">name</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">public</span> TestProperties setName(String <span class="type">name</span>) &#123;</span><br><span class="line">        this.name = <span class="type">name</span>;</span><br><span class="line">        <span class="keyword">return</span> this;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">public</span> List&lt;String&gt; getUtils() &#123;</span><br><span class="line">        <span class="keyword">return</span> utils;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">public</span> TestProperties setUtils(List&lt;String&gt; utils) &#123;</span><br><span class="line">        this.utils = utils;</span><br><span class="line">        <span class="keyword">return</span> this;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    @Override</span><br><span class="line">    <span class="built_in">public</span> String toString() &#123;</span><br><span class="line">        <span class="keyword">return</span> "TestProperties&#123;" +</span><br><span class="line">                "age='" + age + <span class="string">'\'' +</span></span><br><span class="line"><span class="string">                ",  + name + '</span>\<span class="string">''</span> +</span><br><span class="line">                ", friends=" + Arrays.toString(friends) +</span><br><span class="line">                ", utils=" + utils +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springboot 启动类</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Import;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Import(TestProperties.class)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * getBeansOfType(MakeApp.class)会装配bean类型是MakeApp的所有实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"------------------分割线------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(run.getBean(TestProperties<span class="class">.<span class="keyword">class</span>));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Import;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Import(TestProperties.class)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * getBeansOfType(MakeApp.class)会装配bean类型是MakeApp的所有实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"------------------分割线------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(run.getBean(TestProperties<span class="class">.<span class="keyword">class</span>));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">------------------分割线------------------</span><br><span class="line">TestProperties&#123;<span class="attribute">age</span>=<span class="string">'19'</span>, <span class="attribute">name</span>=<span class="string">'default'</span>, friends=[Ben, Alice], utils=[DateUtils, TimeUtils]&#125;</span><br><span class="line">------------------分割线------------------</span><br><span class="line">TestProperties&#123;<span class="attribute">age</span>=<span class="string">'19'</span>, <span class="attribute">name</span>=<span class="string">'default'</span>, friends=[Ben, Alice], utils=[DateUtils, TimeUtils]&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>@ConfigurationProperties(prefix=”test”)，该注解会自动，将配置文件前缀是 test 的各项，加载至该 bean 中</p></li><li><p>需要给定各个属性值的 get，set 方法</p></li><li><p>名字需要与配置项的 key 值对应</p></li><li><p>可以加载数组，集合</p></li><li><p>需要 @Component 注解或者其他方式将该类交由 spring 管理</p></li></ul><h3 id="EnableAutoConfiguration-注解的使用"><a href="#EnableAutoConfiguration-注解的使用" class="headerlink" title="@EnableAutoConfiguration 注解的使用"></a>@EnableAutoConfiguration 注解的使用</h3><p>解析</p><p>1.springBoot 启动类会使用 @SpringBootApplication<br>2. 点进入源代码发现改注解是一个复合注解，由好几个注解共同组合而成</p><ul><li><p>@SpringBootConfiguration 标注当前类是配置类，并会将当前类内声明的一个或多个以 @Bean 注解标记的方法的实例纳入到 spring 容器中，并且实例名就是方法名。</p></li><li><p>@EnableAutoConfiguration，自动配置注解，自动载入应用程序所需的所有 Bean</p></li><li><p>@ComponentScan：默认扫描 @SpringBootApplication 所在类的同级目录以及它的子目录。这也就是 springBoot 启动类建立在项目根目录的原因</p></li></ul><p>尝试</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Import;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Import(TestProperties.class)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"------------------分割线------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(run.getBean(TestProperties<span class="class">.<span class="keyword">class</span>));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Import;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Import(TestProperties.class)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"------------------分割线------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(run.getBean(TestProperties<span class="class">.<span class="keyword">class</span>));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">------------------分割线------------------</span><br><span class="line">TestProperties&#123;<span class="attribute">age</span>=<span class="string">'19'</span>, <span class="attribute">name</span>=<span class="string">'default'</span>, friends=[Ben, Alice], utils=[DateUtils, TimeUtils]&#125;</span><br><span class="line">------------------分割线------------------</span><br><span class="line">TestProperties&#123;<span class="attribute">age</span>=<span class="string">'19'</span>, <span class="attribute">name</span>=<span class="string">'default'</span>, friends=[Ben, Alice], utils=[DateUtils, TimeUtils]&#125;</span><br></pre></td></tr></table></figure><p>总结</p><p>将 @SpringBootApplication 替换为 @EnableAutoConfiguration，还是能正常输出 spring 管理的 bean 对象<br>@EnableAutoConfiguration 注解导入了 AutoConfigurationImportSelector 类，最终的接口类是 ImportSelector<br>源代码注释解释了，ImportSelector 该接口的方法的返回值都会被纳入到 spring 容器管理中<br>ImportSelector 的具体使用与自定义，可以查看大佬博客 <a href="https://blog.csdn.net/weixin_34452850/article/details/82883033" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/weixin_34452850/article/details/82883033</a></p><h3 id="springBoot-事件监听"><a href="#springBoot-事件监听" class="headerlink" title="springBoot 事件监听"></a>springBoot 事件监听</h3><p>步骤</p><ul><li><p>自定义事件，一般是继承 ApplicationEvent 抽象类</p></li><li><p>Spring 的事件监听器接口，所有的监听器都实现了 ApplicationListener 接口</p></li><li><p>发布事件</p></li></ul><p>代码实现</p><p>定义自定义事件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring.monitor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationEvent;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.monitor</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 定义事件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/23 22:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/23 22:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyEvent</span> <span class="keyword">extends</span> <span class="title">ApplicationEvent</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new ApplicationEvent.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source the object on which the event initially occurred (never &#123;<span class="doctag">@code</span> null&#125;)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyEvent</span><span class="params">(String source)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.monitor;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationEvent;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.monitor</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 定义事件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/23 22:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/23 22:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyEvent</span> <span class="keyword">extends</span> <span class="title">ApplicationEvent</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new ApplicationEvent.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source the object on which the event initially occurred (never &#123;<span class="doctag">@code</span> null&#125;)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyEvent</span><span class="params">(String source)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义事件监听器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring.monitor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.monitor</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 定义事件监听器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/23 22:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/23 22:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationListener</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">MyEvent</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(MyEvent event)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"接收到事件:"</span>+event.getClass());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring.monitor;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring.monitor</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 定义事件监听器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/23 22:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/23 22:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyApplicationListener</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">MyEvent</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(MyEvent event)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"接收到事件:"</span>+event.getClass());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springBoot 启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Import</span>(TestProperties<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootApplication</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationListener myApplicationListener = <span class="keyword">new</span> MyApplicationListener();</span><br><span class="line">        MyEvent myEvent = <span class="keyword">new</span> MyEvent(<span class="string">""</span>);</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        springBootTestRun.addListeners(myApplicationListener);</span><br><span class="line">        ConfigurableApplicationContext run = springBootTestRun.run(args);</span><br><span class="line">        run.publishEvent(myEvent);</span><br><span class="line">        run.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyApplicationListener;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.monitor.MyEvent;</span><br><span class="line"><span class="keyword">import</span> com.yxj.spring.properties.TestProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Import;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Import</span>(TestProperties<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootApplication</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationListener myApplicationListener = <span class="keyword">new</span> MyApplicationListener();</span><br><span class="line">        MyEvent myEvent = <span class="keyword">new</span> MyEvent(<span class="string">""</span>);</span><br><span class="line">        SpringApplication springBootTestRun = <span class="keyword">new</span> SpringApplication(SpringBootTestRun<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        springBootTestRun.addListeners(myApplicationListener);</span><br><span class="line">        ConfigurableApplicationContext run = springBootTestRun.run(args);</span><br><span class="line">        run.publishEvent(myEvent);</span><br><span class="line">        run.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">接收到事件<span class="selector-pseudo">:class</span> <span class="selector-tag">com</span><span class="selector-class">.yxj</span><span class="selector-class">.spring</span><span class="selector-class">.monitor</span><span class="selector-class">.MyEvent</span></span><br></pre></td></tr></table></figure><p>重点</p><p>将监听器添加至 spring 容器管理几种方式<br>1.springBootTestRun.addListeners(myApplicationListener);<br>2. 在类上面加入 @Component 注解，@Service 等注解<br>3. 在 application.properties 添加参数 context.listener.classes = 监听器类的项目全路径<br>4. 通过 @Eventlistener 注解，方法参数为监听的类 ApplicationEvent 或者其子类，一些自定义的监听器，或者 springBoot 系统启动时加载初始化信息等都可以通过 ApplicationEvent + 改变参数来实现监听</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 微服务 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot 配置环境动态切换和部分注解的运用</title>
      <link href="/2019/springboot002/"/>
      <url>/2019/springboot002/</url>
      
        <content type="html"><![CDATA[<h3 id="springBoot-配置环境动态切换"><a href="#springBoot-配置环境动态切换" class="headerlink" title="springBoot 配置环境动态切换"></a>springBoot 配置环境动态切换</h3><p>建立第一个配置文件（springBoot 默认读取的文件）application.properties</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test.name</span>=default</span><br><span class="line"><span class="attr">test.defaultAge</span>=<span class="number">12</span></span><br><span class="line"><span class="attr">test.name</span>=default</span><br><span class="line"><span class="attr">test.defaultAge</span>=<span class="number">12</span></span><br></pre></td></tr></table></figure><p>建立第二个配置文件（开发环境）application-dev.properties</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test.name</span>=dev</span><br><span class="line"><span class="attr">test.devAge</span>=<span class="number">13</span></span><br><span class="line"><span class="attr">test.name</span>=dev</span><br><span class="line"><span class="attr">test.devAge</span>=<span class="number">13</span></span><br></pre></td></tr></table></figure><p>建立第三个配置文件（用户验收测试环境）application-uat.properties</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test.name</span>=uat</span><br><span class="line"><span class="attr">test.uatAge</span>=<span class="number">14</span></span><br><span class="line"><span class="attr">test.name</span>=uat</span><br><span class="line"><span class="attr">test.uatAge</span>=<span class="number">14</span></span><br></pre></td></tr></table></figure><ol><li>添加启动参数 (–spring.profiles.active=), 测试结果读取 application.properties 的值  </li><li>添加启动参数 (–spring.profiles.active=dev), 测试结果读取 application-dev.properties 的值  </li><li>添加启动参数 (–spring.profiles.active=uat), 测试结果读取 application-uat.properties 的值  </li><li>添加启动参数 (–spring.profiles.active=uat,dev), 测试结果读取 application-dev.properties 的值  </li><li>添加启动参数 (–spring.profiles.active=dev,uat), 测试结果读取 application-uat.properties 的值  </li><li>添加启动参数 (–spring.profiles.active=dev)，可以读到 application.properties 的(test.defaultAge) 值，读不到 uat 的 (test.uatAge) 值。  </li><li>添加启动参数 (–spring.profiles.active=uat)，可以读到 application.properties 的(test.defaultAge) 值，读不到 dev 的 (test.devAge) 值。  </li><li>添加启动参数 (–spring.profiles.active=), 可以读到 application.properties 的值，读取不到其他配置文件的值</li></ol><a id="more"></a><p>重点</p><ul><li>添加启动参数 –spring.profiles.active=“环境代表参数”（此值为文件名 “-” 与“.”中间的值，此处即为 dev 或者 uat）</li><li>可以添加多个参数，通过英文逗号（,）分割</li><li>如果添加多个参数，有重复 key，值会被覆盖，（配置文件加载顺序详见<a href="https://docs.spring.io/spring-boot/docs/2.1.2.RELEASE/reference/htmlsingle/#boot-features-external-config" target="_blank" rel="external nofollow noopener noreferrer">官方文档</a>：24. Externalized Configuration）</li><li>也可以直接在 application.properties 配置文件中添加 spring.profiles.active=“环境代表参数” 来替代启动时候添加的参数</li></ul><h3 id="springBoot-自动配置-bean（-Conditional-注解使用）"><a href="#springBoot-自动配置-bean（-Conditional-注解使用）" class="headerlink" title="springBoot 自动配置 bean（@Conditional 注解使用）"></a>springBoot 自动配置 bean（@Conditional 注解使用）</h3><p>首先看一个正常配置的 bean 与打印</p><p>建立一个接口</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package com.yxj.spring;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>:     阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MakeApp</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">package com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>:     阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MakeApp</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建立两个实现 - 第一个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package com.yxj.spring;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wechat</span> <span class="keyword">implements</span> <span class="title">MakeApp</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">package com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wechat</span> <span class="keyword">implements</span> <span class="title">MakeApp</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建立两个实现 - 第二个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package com.yxj.spring;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PipiXia</span> <span class="keyword">implements</span> <span class="title">MakeApp</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">package com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PipiXia</span> <span class="keyword">implements</span> <span class="title">MakeApp</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过 @SpringBootConfiguration 与 @Bean 加载 bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringBootConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:  <span class="doctag">@SpringBootConfiguration</span>继承自<span class="doctag">@Configuration</span>，</span></span><br><span class="line"><span class="comment"> * 二者功能也一致，标注当前类是配置类，</span></span><br><span class="line"><span class="comment"> * 并会将当前类内声明的一个或多个以<span class="doctag">@Bean</span>注解标记的方法的实例纳入到spring容器中，</span></span><br><span class="line"><span class="comment"> * 并且实例名就是方法名。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadMyBean</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MakeApp <span class="title">createWechat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Wechat();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MakeApp <span class="title">createPipiXia</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PipiXia();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringBootConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:  <span class="doctag">@SpringBootConfiguration</span>继承自<span class="doctag">@Configuration</span>，</span></span><br><span class="line"><span class="comment"> * 二者功能也一致，标注当前类是配置类，</span></span><br><span class="line"><span class="comment"> * 并会将当前类内声明的一个或多个以<span class="doctag">@Bean</span>注解标记的方法的实例纳入到spring容器中，</span></span><br><span class="line"><span class="comment"> * 并且实例名就是方法名。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadMyBean</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MakeApp <span class="title">createWechat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Wechat();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MakeApp <span class="title">createPipiXia</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PipiXia();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>springBoot 启动类测试</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Condition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.PropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.PropertySources;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 杨小杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * getBeansOfType(MakeApp.class)会装配bean类型是MakeApp的所有实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"------------------分割线------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(run.getBeansOfType(MakeApp<span class="class">.<span class="keyword">class</span>));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Condition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.PropertySource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.PropertySources;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 杨小杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * getBeansOfType(MakeApp.class)会装配bean类型是MakeApp的所有实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"------------------分割线------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(run.getBeansOfType(MakeApp<span class="class">.<span class="keyword">class</span>));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">------------------分割线------------------</span><br><span class="line">&#123;createWechat=com.yxj.spring.<span class="symbol">Wechat@</span><span class="number">5</span>cad8b7d, createPipiXia=com.yxj.spring.<span class="symbol">PipiXia@</span><span class="number">7</span>b02e036&#125;</span><br><span class="line">------------------分割线------------------</span><br><span class="line">&#123;createWechat=com.yxj.spring.<span class="symbol">Wechat@</span><span class="number">5</span>cad8b7d, createPipiXia=com.yxj.spring.<span class="symbol">PipiXia@</span><span class="number">7</span>b02e036&#125;</span><br></pre></td></tr></table></figure><p>可以看到结果把通过 @Bean 加载的两个 MakeApp 实现类对象全部打印出来了</p><p>了解 Condition 接口，实现自定义 bean 的加载</p><p>源代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 2002-2017 the original author or authors.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> org.springframework.context.annotation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.config.BeanFactoryPostProcessor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.type.AnnotatedTypeMetadata;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A single &#123;<span class="doctag">@code</span> condition&#125; that must be &#123;<span class="doctag">@linkplain</span> #matches matched&#125; in order</span></span><br><span class="line"><span class="comment"> * for a component to be registered.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Conditions are checked immediately before the bean-definition is due to be</span></span><br><span class="line"><span class="comment"> * registered and are free to veto registration based on any criteria that can</span></span><br><span class="line"><span class="comment"> * be determined at that point.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Conditions must follow the same restrictions as &#123;<span class="doctag">@link</span> BeanFactoryPostProcessor&#125;</span></span><br><span class="line"><span class="comment"> * and take care to never interact with bean instances. For more fine-grained control</span></span><br><span class="line"><span class="comment"> * of conditions that interact with &#123;<span class="doctag">@code</span> <span class="doctag">@Configuration</span>&#125; beans consider the</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> ConfigurationCondition&#125; interface.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Phillip Webb</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 4.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> ConfigurationCondition</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Conditional</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> ConditionContext</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Condition</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine if the condition matches.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context the condition context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metadata metadata of the &#123;<span class="doctag">@link</span> org.springframework.core.type.AnnotationMetadata class&#125;</span></span><br><span class="line"><span class="comment">     * or &#123;<span class="doctag">@link</span> org.springframework.core.type.MethodMetadata method&#125; being checked</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if the condition matches and the component can be registered,</span></span><br><span class="line"><span class="comment">     * or &#123;<span class="doctag">@code</span> false&#125; to veto the annotated component's registration</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(ConditionContext context, AnnotatedTypeMetadata metadata)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 2002-2017 the original author or authors.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">package</span> org.springframework.context.annotation;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.config.BeanFactoryPostProcessor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.type.AnnotatedTypeMetadata;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A single &#123;<span class="doctag">@code</span> condition&#125; that must be &#123;<span class="doctag">@linkplain</span> #matches matched&#125; in order</span></span><br><span class="line"><span class="comment"> * for a component to be registered.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Conditions are checked immediately before the bean-definition is due to be</span></span><br><span class="line"><span class="comment"> * registered and are free to veto registration based on any criteria that can</span></span><br><span class="line"><span class="comment"> * be determined at that point.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;Conditions must follow the same restrictions as &#123;<span class="doctag">@link</span> BeanFactoryPostProcessor&#125;</span></span><br><span class="line"><span class="comment"> * and take care to never interact with bean instances. For more fine-grained control</span></span><br><span class="line"><span class="comment"> * of conditions that interact with &#123;<span class="doctag">@code</span> <span class="doctag">@Configuration</span>&#125; beans consider the</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> ConfigurationCondition&#125; interface.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Phillip Webb</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 4.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> ConfigurationCondition</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Conditional</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> ConditionContext</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Condition</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine if the condition matches.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context the condition context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metadata metadata of the &#123;<span class="doctag">@link</span> org.springframework.core.type.AnnotationMetadata class&#125;</span></span><br><span class="line"><span class="comment">     * or &#123;<span class="doctag">@link</span> org.springframework.core.type.MethodMetadata method&#125; being checked</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if the condition matches and the component can be registered,</span></span><br><span class="line"><span class="comment">     * or &#123;<span class="doctag">@code</span> false&#125; to veto the annotated component's registration</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(ConditionContext context, AnnotatedTypeMetadata metadata)</span></span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上诉代码描述了 matches 返回值如果是 ture 就会再加 bean，反之则反</p><p>实现自定义 Condition</p><p>新建 Wechat 自定义 Condition, 默认返回 false（不装配 bean）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Condition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ConditionContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.type.AnnotatedTypeMetadata;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:35</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:35</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WechatCondition</span> <span class="keyword">implements</span> <span class="title">Condition</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(ConditionContext context, AnnotatedTypeMetadata metadata)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Condition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ConditionContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.type.AnnotatedTypeMetadata;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:35</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:35</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WechatCondition</span> <span class="keyword">implements</span> <span class="title">Condition</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(ConditionContext context, AnnotatedTypeMetadata metadata)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建 PipiXia 自定义 Condition, 默认返回 true（装配 bean）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Condition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ConditionContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.type.AnnotatedTypeMetadata;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:35</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:35</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PipiXiaCondition</span> <span class="keyword">implements</span> <span class="title">Condition</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *当name不为空的时候，判断如果name中包含appName的时候返回true</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metadata</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(ConditionContext context, AnnotatedTypeMetadata metadata)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Condition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ConditionContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.type.AnnotatedTypeMetadata;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:35</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:35</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PipiXiaCondition</span> <span class="keyword">implements</span> <span class="title">Condition</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *当name不为空的时候，判断如果name中包含appName的时候返回true</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metadata</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(ConditionContext context, AnnotatedTypeMetadata metadata)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 @Bean 所在的类中添加自定义条件，配合 @Conditional 注解来实现</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringBootConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Conditional;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:  <span class="doctag">@SpringBootConfiguration</span>继承自<span class="doctag">@Configuration</span>，</span></span><br><span class="line"><span class="comment"> * 二者功能也一致，标注当前类是配置类，</span></span><br><span class="line"><span class="comment"> * 并会将当前类内声明的一个或多个以<span class="doctag">@Bean</span>注解标记的方法的实例纳入到spring容器中，</span></span><br><span class="line"><span class="comment"> * 并且实例名就是方法名。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadMyBean</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Conditional(WechatCondition.class)</span></span><br><span class="line">    <span class="keyword">public</span> MakeApp createWechat()&#123;</span><br><span class="line">        <span class="keyword">return</span> new Wechat();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Conditional(PipiXiaCondition.class)</span></span><br><span class="line">    <span class="keyword">public</span> MakeApp createPipiXia()&#123;</span><br><span class="line">        <span class="keyword">return</span> new PipiXia();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringBootConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Conditional;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:  <span class="doctag">@SpringBootConfiguration</span>继承自<span class="doctag">@Configuration</span>，</span></span><br><span class="line"><span class="comment"> * 二者功能也一致，标注当前类是配置类，</span></span><br><span class="line"><span class="comment"> * 并会将当前类内声明的一个或多个以<span class="doctag">@Bean</span>注解标记的方法的实例纳入到spring容器中，</span></span><br><span class="line"><span class="comment"> * 并且实例名就是方法名。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadMyBean</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Conditional(WechatCondition.class)</span></span><br><span class="line">    <span class="keyword">public</span> MakeApp createWechat()&#123;</span><br><span class="line">        <span class="keyword">return</span> new Wechat();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Conditional(PipiXiaCondition.class)</span></span><br><span class="line">    <span class="keyword">public</span> MakeApp createPipiXia()&#123;</span><br><span class="line">        <span class="keyword">return</span> new PipiXia();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再次测试，测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">------------------分割线------------------</span><br><span class="line">&#123;createPipiXia=com.yxj.spring.<span class="symbol">PipiXia@</span><span class="number">420</span>bc288&#125;</span><br><span class="line">------------------分割线------------------</span><br><span class="line">&#123;createPipiXia=com.yxj.spring.<span class="symbol">PipiXia@</span><span class="number">420</span>bc288&#125;</span><br></pre></td></tr></table></figure><p>可以看到只打印了一个 pipixia 实例 bean，微信没有装配进来</p><p>SpringBoot 中自带的 Condition 实现</p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/1.jpg" alt><br>可以看到这个是继承了 @Conditional 注解，传了自定义的 class 对象，变成了一个新的注解<br>常用 @Conditional 注解使用，可以查看大佬博客 <a href="https://blog.csdn.net/u012437781/article/details/78626617" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/u012437781/article/details/78626617</a></p><h3 id="Import-注解"><a href="#Import-注解" class="headerlink" title="@Import 注解"></a>@Import 注解</h3><p>用处</p><ul><li>@Import 其实就是引入一个或多个配置，可以导入普通类，也可以导入配置类（上述的 LoadMyBean 为配置类，主要通过 @Bean 生成 bean 给 spring 管理）</li><li>@Import 用来导入一个或多个类（会被 spring 容器管理），或者配置类（配置类里的 @Bean 标记的类也会被 spring 容器管理）</li></ul><p>测试</p><p>还是以上的例子，去掉配置类 (LoadMyBean) 中的 @SpringBootConfiguration 注解</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringBootConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Conditional;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:  <span class="doctag">@SpringBootConfiguration</span>继承自<span class="doctag">@Configuration</span>，</span></span><br><span class="line"><span class="comment"> * 二者功能也一致，标注当前类是配置类，</span></span><br><span class="line"><span class="comment"> * 并会将当前类内声明的一个或多个以<span class="doctag">@Bean</span>注解标记的方法的实例纳入到spring容器中，</span></span><br><span class="line"><span class="comment"> * 并且实例名就是方法名。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadMyBean</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Conditional(WechatCondition.class)</span></span><br><span class="line">    <span class="keyword">public</span> MakeApp createWechat()&#123;</span><br><span class="line">        <span class="keyword">return</span> new Wechat();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Conditional(PipiXiaCondition.class)</span></span><br><span class="line">    <span class="keyword">public</span> MakeApp createPipiXia()&#123;</span><br><span class="line">        <span class="keyword">return</span> new PipiXia();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringBootConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Conditional;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:  <span class="doctag">@SpringBootConfiguration</span>继承自<span class="doctag">@Configuration</span>，</span></span><br><span class="line"><span class="comment"> * 二者功能也一致，标注当前类是配置类，</span></span><br><span class="line"><span class="comment"> * 并会将当前类内声明的一个或多个以<span class="doctag">@Bean</span>注解标记的方法的实例纳入到spring容器中，</span></span><br><span class="line"><span class="comment"> * 并且实例名就是方法名。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/22 22:14</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadMyBean</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Conditional(WechatCondition.class)</span></span><br><span class="line">    <span class="keyword">public</span> MakeApp createWechat()&#123;</span><br><span class="line">        <span class="keyword">return</span> new Wechat();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Conditional(PipiXiaCondition.class)</span></span><br><span class="line">    <span class="keyword">public</span> MakeApp createPipiXia()&#123;</span><br><span class="line">        <span class="keyword">return</span> new PipiXia();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改 springboot 启动类，添加 @Import 注解</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.*;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 杨小杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@Import(LoadMyBean.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * getBeansOfType(MakeApp.class)会装配bean类型是MakeApp的所有实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"------------------分割线------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(run.getBeansOfType(MakeApp<span class="class">.<span class="keyword">class</span>));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.*;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 杨小杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@Import(LoadMyBean.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * getBeansOfType(MakeApp.class)会装配bean类型是MakeApp的所有实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">        ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"------------------分割线------------------"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(run.getBeansOfType(MakeApp<span class="class">.<span class="keyword">class</span>));</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">------------------分割线------------------</span><br><span class="line">&#123;createPipiXia=com.yxj.spring.<span class="symbol">PipiXia@</span><span class="number">6548</span>bb7d&#125;</span><br><span class="line">------------------分割线------------------</span><br><span class="line">&#123;createPipiXia=com.yxj.spring.<span class="symbol">PipiXia@</span><span class="number">6548</span>bb7d&#125;</span><br></pre></td></tr></table></figure><p>测试结果表明了，虽然配置类没有加入 @SpringBootConfiguration,@Component，@Service,@Controller 等交给 spring 管理的注解，但是通过启动类添加 @Import 引入方式，仍然可以在 spring 进行依赖注入，交由 spring 管理</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 微服务 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot 建立项目与读取配置文件</title>
      <link href="/2019/springboot001/"/>
      <url>/2019/springboot001/</url>
      
        <content type="html"><![CDATA[<h2 id="建立maven-项目"><a href="#建立maven-项目" class="headerlink" title="建立maven 项目"></a>建立maven 项目</h2><p><img src="http://q2jt1v8qv.bkt.clouddn.com/FtFrvuJqSZdUsgp4WXO_L33lLgjC" alt></p><p><img src="http://q2jt1v8qv.bkt.clouddn.com/FoQAAKtK5UpHyxrdeP2N8iLFpOSv" alt></p><a id="more"></a><h2 id="进入-spring-官网"><a href="#进入-spring-官网" class="headerlink" title="进入 spring 官网"></a>进入 spring 官网</h2><ul><li><a href="http://spring.io/" target="_blank" rel="external nofollow noopener noreferrer">http://spring.io/</a>   访问网站，点击 project 找到 springboot 子项目</li></ul><p><img src="http://q2jt1v8qv.bkt.clouddn.com/Fu6dtzT8JM_KLGvgguOTjoiCJ0n7" alt></p><ul><li>点击 learn，选择一个版本，查看文档（以前的版本没有找到文档，就直接用最新的了）</li></ul><blockquote><p>知识拓展: 看下面图片能够发现有一些标志 SHAPSHOT，GA 等等</p></blockquote><p><img src="http://q2jt1v8qv.bkt.clouddn.com/FnxtpMyqAs07DnWvsSBLjxueeDpw" alt></p><p>流程：SNAPSHOT-&gt;alpha-&gt;beta-&gt;release-&gt;GA</p><p>Alpha：是内部测试版, 一般不向外部发布, 会有很多 Bug. 一般只有测试人员使用。</p><p>Beta：也是测试版，这个阶段的版本会一直加入新的功能。在 Alpha 版之后推出。</p><p>RC：(Release　Candidate) 顾名思义么 ! 用在软件上就是候选版本。系统平台上就是发行候选版本。RC 版不会再加入新的功能了，主要着重于除错。</p><p>GA:General Availability, 正式发布的版本，在国外都是用 GA 来说明 release 版本的。</p><p>详情查看：<a href="https://www.cnblogs.com/lexiaofei/p/7065720.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.cnblogs.com/lexiaofei/p/7065720.html</a></p><ul><li>点击 Getting Started（入门）进入 springboot 官方教学</li></ul><ol><li><p>查看目录 System Requirements（系统要求）查看硬性要求，最低需要 java8，可以通过 java-version 命令查看自己的 java 版本信息</p></li><li><p>查看 Maven Installation（maven 安装），复制依赖的 jar 包</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yxj.spring<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springBootDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Inherit defaults from Spring Boot --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Add typical dependencies for a web application --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Package as an executable jar --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.yxj.spring<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springBootDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Inherit defaults from Spring Boot --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Add typical dependencies for a web application --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">&lt;!-- Package as an executable jar --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="项目运行"><a href="#项目运行" class="headerlink" title="项目运行"></a>项目运行</h2><p>创建一个注入的实体 bean</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 杨小杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String passWord;</span><br><span class="line">    <span class="keyword">public</span> String getUserName() &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> User setUserName(String userName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String getPassWord() &#123;</span><br><span class="line">        <span class="keyword">return</span> passWord;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> User setPassWord(String passWord) &#123;</span><br><span class="line">        <span class="keyword">this</span>.passWord = passWord;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: 杨小杰</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateDate</span>: 2019/1/18 20:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateDate</span>: 2019/1/18 20:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">    <span class="keyword">private</span> String passWord;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String getUserName() &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> User setUserName(String userName) &#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String getPassWord() &#123;</span><br><span class="line">        <span class="keyword">return</span> passWord;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> User setPassWord(String passWord) &#123;</span><br><span class="line">        <span class="keyword">this</span>.passWord = passWord;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建一个 main 方法，通过 @SpringBootApplication 和 @Bean 注解创建 bean 依赖注入并输出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment">* <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">getUserBean</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">       System.out.println(<span class="string">"-------------分割线---------------"</span>);</span><br><span class="line">       User getUserBean = run.getBean(User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">       System.out.println(getUserBean);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment">* <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> User <span class="title">getUserBean</span><span class="params">()</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> User();</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">       ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line"> </span><br><span class="line">       System.out.println(<span class="string">"-------------分割线---------------"</span>);</span><br><span class="line"> </span><br><span class="line">       User getUserBean = run.getBean(User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"> </span><br><span class="line">       System.out.println(getUserBean);</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行 main 方法，得到输出结果</p><p>关于本类中使用的注解标签含义，详情查看：<a href="https://www.jianshu.com/p/4e1cab2d8431" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/4e1cab2d8431</a></p><h2 id="读取配置文件"><a href="#读取配置文件" class="headerlink" title="读取配置文件"></a>读取配置文件</h2><p>springboot 会默认去读取</p><ul><li><p>classPath:application.properties</p></li><li><p>classPath:/config/application.properties</p></li><li><p>file:application.properties</p></li><li><p>file:/config/application.properties</p></li></ul><p>下面的内容，后面会写读取 yml 这方面的文章。</p><p>在 maven 项目的 resource 目录下面新建一个 application.properties 文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">localhost.test.userName</span>=test123</span><br><span class="line"><span class="attr">localhost.test.passWord</span>=passWordTest</span><br><span class="line"><span class="attr">test.remark</span>=test userName is <span class="variable">$&#123;localhost.test.userName&#125;</span></span><br><span class="line"><span class="attr">localhost.test.userName</span>=test123</span><br><span class="line"> </span><br><span class="line"><span class="attr">localhost.test.passWord</span>=passWordTest</span><br><span class="line"> </span><br><span class="line"><span class="attr">test.remark</span>=test userName is <span class="variable">$&#123;localhost.test.userName&#125;</span></span><br></pre></td></tr></table></figure><p>配置文件加入测试配置 key 与 value 值</p><ul><li><p>通过 @Value(“${配置文件的 key}”) 方式读取配置文件的值</p></li><li><p>如果配置文件中没有这个 key，通过 @Value(“${给定的 key: 默认值}”)可以给定默认值，如果不加 “: 默认值” 会报错。</p></li><li><p>如果配置文件有 key，但是 value 为空，给定默认值这种方式，不会得到默认值的结果，会输出空值</p></li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment">* <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;localhost.test.userName&#125;</span>"</span>)</span></span><br><span class="line">   <span class="keyword">private</span> String testUserName;</span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;localhost.test.passWord&#125;</span>"</span>)</span></span><br><span class="line">   <span class="keyword">private</span> String testPassWord;</span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;localhost.test.default:testDefault&#125;</span>"</span>)</span></span><br><span class="line">   <span class="keyword">private</span> String testDefault;</span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;test.remark&#125;</span>"</span>)</span></span><br><span class="line">   <span class="keyword">private</span> String testRemark;</span><br><span class="line">   <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">       ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">       System.<span class="keyword">out</span>.println(<span class="string">"-------------分割线---------------"</span>);</span><br><span class="line">       SpringBootTestRun bean = run.getBean(SpringBootTestRun<span class="class">.<span class="keyword">class</span>);</span></span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testUserName);</span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testPassWord);</span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testRemark);</span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testDefault);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment">* <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;localhost.test.userName&#125;</span>"</span>)</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span> String testUserName;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;localhost.test.passWord&#125;</span>"</span>)</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span> String testPassWord;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;localhost.test.default:testDefault&#125;</span>"</span>)</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span> String testDefault;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;test.remark&#125;</span>"</span>)</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span> String testRemark;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line"> </span><br><span class="line">       ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(<span class="string">"-------------分割线---------------"</span>);</span><br><span class="line"> </span><br><span class="line">       SpringBootTestRun bean = run.getBean(SpringBootTestRun<span class="class">.<span class="keyword">class</span>);</span></span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testUserName);</span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testPassWord);</span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testRemark);</span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testDefault);</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通过 Environment 对象获取</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.ConfigurableEnvironment;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment">* <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">   <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">       ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">       System.<span class="keyword">out</span>.println(<span class="string">"-------------分割线---------------"</span>);</span><br><span class="line">       ConfigurableEnvironment environment = run.getEnvironment();</span><br><span class="line">       String userName = environment.getProperty(<span class="string">"localhost.test.userName"</span>);</span><br><span class="line">       String passWord = environment.getProperty(<span class="string">"localhost.test.passWord"</span>);</span><br><span class="line">       String testRemark = environment.getProperty(<span class="string">"test.remark"</span>);</span><br><span class="line">       System.<span class="keyword">out</span>.println(userName);</span><br><span class="line">       System.<span class="keyword">out</span>.println(passWord);</span><br><span class="line">       System.<span class="keyword">out</span>.println(testRemark);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.ConfigurableEnvironment;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment">* <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line"> </span><br><span class="line">       ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(<span class="string">"-------------分割线---------------"</span>);</span><br><span class="line"> </span><br><span class="line">       ConfigurableEnvironment environment = run.getEnvironment();</span><br><span class="line"> </span><br><span class="line">       String userName = environment.getProperty(<span class="string">"localhost.test.userName"</span>);</span><br><span class="line"> </span><br><span class="line">       String passWord = environment.getProperty(<span class="string">"localhost.test.passWord"</span>);</span><br><span class="line"> </span><br><span class="line">       String testRemark = environment.getProperty(<span class="string">"test.remark"</span>);</span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(userName);</span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(passWord);</span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(testRemark);</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试结果</li></ul><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-------------分割线---------------</span><br><span class="line">test123</span><br><span class="line">passWordTest</span><br><span class="line"><span class="keyword">test </span>userName is test123</span><br><span class="line">-------------分割线---------------</span><br><span class="line"> </span><br><span class="line">test123</span><br><span class="line"> </span><br><span class="line">passWordTest</span><br><span class="line"> </span><br><span class="line"><span class="keyword">test </span>userName is test123</span><br></pre></td></tr></table></figure><h2 id="修改默认配置文件的名字"><a href="#修改默认配置文件的名字" class="headerlink" title="修改默认配置文件的名字"></a>修改默认配置文件的名字</h2><ul><li><p>修改默认配置文件的名称，点击 Edit Configurations<br><img src="http://q2jt1v8qv.bkt.clouddn.com/FgLB9EC-Uazbsc0g3SoD43MJZk74" alt></p></li><li><p>添加参数 –spring.config.name = 修改配置文件的前缀名称<br><img src="http://q2jt1v8qv.bkt.clouddn.com/FtnXAHNUYef9_jJ5so59fXlWI-wO" alt></p></li></ul><h2 id="修改默认路径和配置文件的名字"><a href="#修改默认路径和配置文件的名字" class="headerlink" title="修改默认路径和配置文件的名字"></a>修改默认路径和配置文件的名字</h2><p>假设上级目录名称为 testConfig，里面有一个 test.properties</p><ul><li><p>spring.config.location=classpath:/testConfig/test.properties</p></li><li><p>spring.config.location=file:D://test/testConfig/test.properties</p></li><li><p>spring.config.location=classpath:XXX,file:XXX…… 指定多个</p></li></ul><h2 id="指定多个配置文件"><a href="#指定多个配置文件" class="headerlink" title="指定多个配置文件"></a>指定多个配置文件</h2><ul><li><p>上面 spring.config.location，或者 spring.config.name 这种方式</p></li><li><p>通过 @PropertySource 注解方式, 添加多个 @PropertySource，也可以使用</p><p>@PropertySources(@PropertySource(“classpath:app.properties”),@PropertySource(“classpath:appTwo.properties”)) 这种方式</p></li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.PropertySource;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment">* <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@PropertySource(<span class="meta-string">"classpath:app.properties"</span>)</span></span><br><span class="line"><span class="meta">@PropertySource(<span class="meta-string">"classpath:appTwo.properties"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;localhost.test.userName&#125;</span>"</span>)</span></span><br><span class="line">   <span class="keyword">private</span> String testUserName;</span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;app.test.value&#125;</span>"</span>)</span></span><br><span class="line">   <span class="keyword">private</span> String appValue;</span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;appTwo.test.value&#125;</span>"</span>)</span></span><br><span class="line">   <span class="keyword">private</span> String appTwoValue;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 也可以通过file这种方式来指定配置文件的位置</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line">       ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line">       System.<span class="keyword">out</span>.println(<span class="string">"-------------分割线---------------"</span>);</span><br><span class="line">       SpringBootTestRun bean = run.getBean(SpringBootTestRun<span class="class">.<span class="keyword">class</span>);</span></span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testUserName);</span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.appValue);</span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.appTwoValue);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> com.yxj.spring;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ConfigurableApplicationContext;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.PropertySource;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@ProjectName</span>: springBootDemo</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Package</span>: com.yxj.spring</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Author</span>: 阿杰</span></span><br><span class="line"><span class="comment">* <span class="doctag">@CreateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateUser</span>: 暂无</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateDate</span>: 2019/1/18 20:18</span></span><br><span class="line"><span class="comment">* <span class="doctag">@UpdateRemark</span>: The modified content</span></span><br><span class="line"><span class="comment">* <span class="doctag">@Version</span>: 1.0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@PropertySource(<span class="meta-string">"classpath:app.properties"</span>)</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">@PropertySource(<span class="meta-string">"classpath:appTwo.properties"</span>)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootTestRun</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;localhost.test.userName&#125;</span>"</span>)</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span> String testUserName;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;app.test.value&#125;</span>"</span>)</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span> String appValue;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">   <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;appTwo.test.value&#125;</span>"</span>)</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">private</span> String appTwoValue;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 也可以通过file这种方式来指定配置文件的位置</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"> </span><br><span class="line">   <span class="keyword">public</span> static void main(String[] args) &#123;</span><br><span class="line"> </span><br><span class="line">       ConfigurableApplicationContext run = SpringApplication.run(SpringBootTestRun<span class="class">.<span class="keyword">class</span>, <span class="type">args);</span></span></span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(<span class="string">"-------------分割线---------------"</span>);</span><br><span class="line"> </span><br><span class="line">       SpringBootTestRun bean = run.getBean(SpringBootTestRun<span class="class">.<span class="keyword">class</span>);</span></span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.testUserName);</span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.appValue);</span><br><span class="line"> </span><br><span class="line">       System.<span class="keyword">out</span>.println(bean.appTwoValue);</span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>app.properties</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">app</span>.<span class="keyword">test</span>.value=<span class="keyword">app</span></span><br></pre></td></tr></table></figure><p>appTwo.properties</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">appTwo.test.value</span>=appTwo</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">分割线</span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">test123</span></span><br><span class="line"><span class="comment">app</span></span><br><span class="line"><span class="comment">appTwo</span></span><br><span class="line"><span class="comment"></span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="comment">分割线</span>--<span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">test123</span></span><br><span class="line"><span class="comment"></span> </span><br><span class="line"><span class="comment">app</span></span><br><span class="line"><span class="comment"></span> </span><br><span class="line"><span class="comment">appTwo</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> 微服务 </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
